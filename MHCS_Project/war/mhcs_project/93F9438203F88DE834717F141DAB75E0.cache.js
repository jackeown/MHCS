mhcs_project.onScriptDownloaded(["var $wnd = $wnd || window.parent;\nvar __gwtModuleFunction = $wnd.mhcs_project;\nvar $sendStats = __gwtModuleFunction.__sendStats;\n$sendStats('moduleStartup', 'moduleEvalStart');\nvar $gwt_version = \"2.6.0\";\nvar $strongName = '93F9438203F88DE834717F141DAB75E0';\nvar $doc = $wnd.document;function __gwtStartLoadingFragment(frag) {\nvar fragFile = 'deferredjs/' + $strongName + '/' + frag + '.cache.js';\nreturn __gwtModuleFunction.__startLoadingFragment(fragFile);\n}\nfunction __gwtInstallCode(code) {return __gwtModuleFunction.__installRunAsyncCode(code);}\nvar $stats = $wnd.__gwtStatsEvent ? function(a) {return $wnd.__gwtStatsEvent(a);} : null;\nvar $sessionId = $wnd.__gwtStatsSessionId ? $wnd.__gwtStatsSessionId : null;\nvar _, seedTable = {}, Q$Object = 0, Q$String = 1, Q$AnimationScheduler$AnimationHandle = 2, Q$AnimationSchedulerImplTimer$AnimationHandleImpl = 3, Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1 = 4, Q$JavaScriptException = 5, Q$Style$Display = 6, Q$Style$HasCssName = 7, Q$Style$Overflow = 8, Q$Style$Position = 9, Q$Style$TextAlign = 10, Q$Style$Unit = 11, Q$Style$Visibility = 12, Q$ChangeHandler = 13, Q$ClickHandler = 14, Q$DomEvent$Type = 15, Q$MouseDownHandler = 16, Q$MouseMoveHandler = 17, Q$MouseOutHandler = 18, Q$MouseOverHandler = 19, Q$MouseUpHandler = 20, Q$CloseHandler = 21, Q$HasAttachHandlers = 22, Q$ResizeHandler = 23, Q$ValueChangeHandler = 24, Q$EventHandler = 25, Q$HasHandlers = 26, Q$HasDirection$Direction = 27, Q$LongLibBase$LongEmul = 28, Q$Layout$Layer = 29, Q$SafeUri = 30, Q$SafeUriString = 31, Q$Event$NativePreviewHandler = 32, Q$EventListener = 33, Q$DialogBox$MouseHandler = 34, Q$DockPanel$LayoutData = 35, Q$DockPanel$TmpRow = 36, Q$HasVisibility = 37, Q$HasWidgets = 38, Q$IsWidget = 39, Q$RequiresResize = 40, Q$RootPanel = 41, Q$TabLayoutPanel$Tab = 42, Q$UIObject = 43, Q$ValueBoxBase$TextAlignment = 44, Q$Widget = 45, Q$SimpleEventBus$Command = 46, Q$UmbrellaException = 47, Q$Serializable = 48, Q$Boolean = 49, Q$CharSequence = 50, Q$Comparable = 51, Q$Enum = 52, Q$Integer = 53, Q$Number = 54, Q$StackTraceElement = 55, Q$Throwable = 56, Q$List = 57, Q$Map = 58, Q$Map$Entry = 59, Q$Set = 60, Q$Module = 61, Q$ModuleStatus = 62, Q$ModuleType = 63, CM$ = {};\nfunction newSeed(id_0){\n  return new seedTable[id_0];\n}\n\nfunction defineSeed(id_0, superSeed, castableTypeMap){\n  var seed = seedTable[id_0];\n  if (seed && !seed.___clazz$) {\n    _ = seed.prototype;\n  }\n   else {\n    !seed && (seed = seedTable[id_0] = function(){\n    }\n    );\n    _ = seed.prototype = superSeed < 0?{}:newSeed(superSeed);\n    _.castableTypeMap$ = castableTypeMap;\n  }\n  for (var i = 3; i < arguments.length; ++i) {\n    arguments[i].prototype = _;\n  }\n  if (seed.___clazz$) {\n    _.___clazz$ = seed.___clazz$;\n    seed.___clazz$ = null;\n  }\n}\n\nfunction makeCastMap(a){\n  var result = {};\n  for (var i = 0, c = a.length; i < c; ++i) {\n    result[a[i]] = 1;\n  }\n  return result;\n}\n\nfunction nullMethod(){\n}\n\nfunction Object_1(){\n}\n\ndefineSeed(1, -1, CM$, Object_1);\n_.equals$ = function equals(other){\n  return this === other;\n}\n;\n_.getClass$ = function getClass_0(){\n  return this.___clazz$;\n}\n;\n_.hashCode$ = function hashCode_0(){\n  return getHashCode(this);\n}\n;\n_.toString$ = function toString_0(){\n  return this.___clazz$.typeName + '@' + toPowerOfTwoString(this.hashCode$());\n}\n;\n_.toString = function(){\n  return this.toString$();\n}\n;\n_.typeMarker$ = nullMethod;\nfunction $cancel(this$static){\n  if (!this$static.isRunning) {\n    return;\n  }\n  this$static.wasStarted = this$static.isStarted;\n  this$static.isRunning = false;\n  this$static.isStarted = false;\n  if (this$static.requestHandle) {\n    $cancel_1(this$static.requestHandle);\n    this$static.requestHandle = null;\n  }\n  this$static.onCancel();\n}\n\nfunction $run(this$static, duration, startTime){\n  $cancel(this$static);\n  this$static.isRunning = true;\n  this$static.isStarted = false;\n  this$static.duration = duration;\n  this$static.startTime = startTime;\n  ++this$static.runId;\n  $execute(this$static.callback, currentTimeMillis());\n}\n\nfunction $update(this$static, curTime){\n  var curRunId, finished, progress;\n  curRunId = this$static.runId;\n  finished = curTime >= this$static.startTime + this$static.duration;\n  if (this$static.isStarted && !finished) {\n    progress = (curTime - this$static.startTime) / this$static.duration;\n    this$static.onUpdate((1 + Math.cos(3.141592653589793 + progress * 3.141592653589793)) / 2);\n    return this$static.isRunning && this$static.runId == curRunId;\n  }\n  if (!this$static.isStarted && curTime >= this$static.startTime) {\n    this$static.isStarted = true;\n    this$static.onStart();\n    if (!(this$static.isRunning && this$static.runId == curRunId)) {\n      return false;\n    }\n  }\n  if (finished) {\n    this$static.isRunning = false;\n    this$static.isStarted = false;\n    this$static.onComplete();\n    return false;\n  }\n  return true;\n}\n\nfunction Animation_0(){\n  Animation_1.call(this, ($clinit_AnimationSchedulerImpl() , INSTANCE));\n}\n\nfunction Animation_1(scheduler){\n  this.callback = new Animation$1_0(this);\n  this.scheduler = scheduler;\n}\n\ndefineSeed(3, 1, {});\n_.onCancel = function onCancel(){\n  this.wasStarted && this.onComplete();\n}\n;\n_.onComplete = function onComplete(){\n  this.onUpdate((1 + cos_0(6.283185307179586)) / 2);\n}\n;\n_.onStart = function onStart(){\n  this.onUpdate((1 + cos_0(3.141592653589793)) / 2);\n}\n;\n_.duration = -1;\n_.isRunning = false;\n_.isStarted = false;\n_.runId = -1;\n_.startTime = -1;\n_.wasStarted = false;\nfunction $execute(this$static, timestamp){\n  $update(this$static.this$0, timestamp)?(this$static.this$0.requestHandle = $requestAnimationFrame(this$static.this$0.scheduler, this$static.this$0.callback)):(this$static.this$0.requestHandle = null);\n}\n\nfunction Animation$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(4, 1, {}, Animation$1_0);\ndefineSeed(5, 1, {});\ndefineSeed(6, 1, makeCastMap([Q$AnimationScheduler$AnimationHandle]));\nfunction $clinit_AnimationSchedulerImpl(){\n  $clinit_AnimationSchedulerImpl = nullMethod;\n  var impl;\n  impl = new AnimationSchedulerImplTimer_0;\n  INSTANCE = impl;\n}\n\ndefineSeed(7, 5, {});\nvar INSTANCE;\nfunction $cancelAnimationFrame(this$static, requestId){\n  $remove_13(this$static.animationRequests, requestId);\n  this$static.animationRequests.size_0 == 0 && $cancel_0(this$static.timer);\n}\n\nfunction $requestAnimationFrame(this$static, callback){\n  var requestId;\n  requestId = new AnimationSchedulerImplTimer$AnimationHandleImpl_0(this$static, callback);\n  $add_10(this$static.animationRequests, requestId);\n  this$static.animationRequests.size_0 == 1 && $schedule(this$static.timer, 16);\n  return requestId;\n}\n\nfunction $updateAnimations(this$static){\n  var curAnimations, duration, requestId, requestId$index, requestId$max;\n  curAnimations = initDim(_3Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit, makeCastMap([Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1, Q$Serializable]), Q$AnimationSchedulerImplTimer$AnimationHandleImpl, this$static.animationRequests.size_0, 0);\n  curAnimations = dynamicCast($toArray(this$static.animationRequests, curAnimations), Q$AnimationSchedulerImplTimer$AnimationHandleImpl_$1);\n  duration = new Duration_0;\n  for (requestId$index = 0 , requestId$max = curAnimations.length; requestId$index < requestId$max; ++requestId$index) {\n    requestId = curAnimations[requestId$index];\n    $remove_13(this$static.animationRequests, requestId);\n    $execute(requestId.callback, duration.start_0);\n  }\n  this$static.animationRequests.size_0 > 0 && $schedule(this$static.timer, max_0(16 - (currentTimeMillis() - duration.start_0)));\n}\n\nfunction AnimationSchedulerImplTimer_0(){\n  this.animationRequests = new ArrayList_0;\n  this.timer = new AnimationSchedulerImplTimer$1_0(this);\n}\n\ndefineSeed(8, 7, {}, AnimationSchedulerImplTimer_0);\nfunction $cancel_0(this$static){\n  if (!this$static.timerId) {\n    return;\n  }\n  ++this$static.cancelCounter;\n  this$static.isRepeating?clearInterval0(this$static.timerId.value_0):clearTimeout0(this$static.timerId.value_0);\n  this$static.timerId = null;\n}\n\nfunction $schedule(this$static, delayMillis){\n  if (delayMillis < 0) {\n    throw new IllegalArgumentException_0('must be non-negative');\n  }\n  !!this$static.timerId && $cancel_0(this$static);\n  this$static.isRepeating = false;\n  this$static.timerId = valueOf(setTimeout0(createCallback(this$static, this$static.cancelCounter), delayMillis, null));\n}\n\nfunction createCallback(timer, cancelCounter){\n  return $entry(function(){\n    timer.fire(cancelCounter);\n  }\n  );\n}\n\ndefineSeed(10, 1, {});\n_.fire = function fire(scheduleCancelCounter){\n  if (scheduleCancelCounter != this.cancelCounter) {\n    return;\n  }\n  this.isRepeating || (this.timerId = null);\n  $updateAnimations(this.this$0);\n}\n;\n_.cancelCounter = 0;\n_.isRepeating = false;\n_.timerId = null;\nfunction AnimationSchedulerImplTimer$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(9, 10, {}, AnimationSchedulerImplTimer$1_0);\nfunction $cancel_1(this$static){\n  $cancelAnimationFrame(this$static.this$0, this$static);\n}\n\nfunction AnimationSchedulerImplTimer$AnimationHandleImpl_0(this$0, callback){\n  this.this$0 = this$0;\n  this.callback = callback;\n}\n\ndefineSeed(11, 6, makeCastMap([Q$AnimationScheduler$AnimationHandle, Q$AnimationSchedulerImplTimer$AnimationHandleImpl]), AnimationSchedulerImplTimer$AnimationHandleImpl_0);\nfunction $getAriaValue(value_0){\n  var buf, item_0, item$index, item$max;\n  buf = new StringBuffer_0;\n  for (item$index = 0 , item$max = value_0.length; item$index < item$max; ++item$index) {\n    item_0 = value_0[item$index];\n    ($append(buf.impl, '' + item_0) , buf).impl.string += ' ';\n  }\n  return $trim(buf.impl.string);\n}\n\nfunction $set(this$static, element, values){\n  $setAttribute(element, this$static.name_0, $getAriaValue(values));\n}\n\nfunction Attribute_0(name_0){\n  this.name_0 = name_0;\n}\n\ndefineSeed(13, 1, {});\nfunction AriaValueAttribute_0(name_0){\n  Attribute_0.call(this, name_0);\n}\n\ndefineSeed(12, 13, {}, AriaValueAttribute_0);\nfunction PrimitiveValueAttribute_0(name_0){\n  Attribute_0.call(this, name_0);\n}\n\ndefineSeed(14, 13, {}, PrimitiveValueAttribute_0);\nfunction $clinit_State(){\n  $clinit_State = nullMethod;\n  new PrimitiveValueAttribute_0('aria-busy');\n  new AriaValueAttribute_0('aria-checked');\n  new PrimitiveValueAttribute_0('aria-disabled');\n  new AriaValueAttribute_0('aria-expanded');\n  new AriaValueAttribute_0('aria-grabbed');\n  HIDDEN = new PrimitiveValueAttribute_0('aria-hidden');\n  new AriaValueAttribute_0('aria-invalid');\n  new AriaValueAttribute_0('aria-pressed');\n  new AriaValueAttribute_0('aria-selected');\n}\n\nvar HIDDEN;\nfunction Duration_0(){\n  this.start_0 = currentTimeMillis();\n}\n\nfunction currentTimeMillis(){\n  return (new Date).getTime();\n}\n\ndefineSeed(16, 1, {}, Duration_0);\n_.start_0 = 0;\nfunction $setStackTrace(stackTrace){\n  var c, copy, i;\n  copy = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, stackTrace.length, 0);\n  for (i = 0 , c = stackTrace.length; i < c; ++i) {\n    if (!stackTrace[i]) {\n      throw new NullPointerException_0;\n    }\n    copy[i] = stackTrace[i];\n  }\n}\n\ndefineSeed(21, 1, makeCastMap([Q$Serializable, Q$Throwable]));\n_.getMessage = function getMessage(){\n  return this.detailMessage;\n}\n;\n_.toString$ = function toString_1(){\n  var className, msg;\n  className = this.___clazz$.typeName;\n  msg = this.getMessage();\n  return msg != null?className + ': ' + msg:className;\n}\n;\ndefineSeed(20, 21, makeCastMap([Q$Serializable, Q$Throwable]));\nfunction RuntimeException_0(){\n  $fillInStackTrace();\n}\n\nfunction RuntimeException_1(message){\n  this.detailMessage = message;\n  $fillInStackTrace();\n}\n\nfunction RuntimeException_2(message){\n  this.detailMessage = message;\n  $fillInStackTrace();\n}\n\ndefineSeed(19, 20, makeCastMap([Q$Serializable, Q$Throwable]), RuntimeException_1);\nfunction $clinit_JavaScriptException(){\n  $clinit_JavaScriptException = nullMethod;\n  NOT_SET = new Object_1;\n}\n\nfunction $ensureInit(this$static){\n  var exception, maybeJsoInvocation;\n  if (this$static.message_0 == null) {\n    exception = this$static.e === NOT_SET?null:this$static.e;\n    this$static.name_0 = exception == null?'null':instanceOfJso(exception)?getExceptionName0(dynamicCastJso(exception)):instanceOf(exception, Q$String)?'String':(maybeJsoInvocation = exception , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.___clazz$:Lcom_google_gwt_core_client_JavaScriptObject_2_classLit).typeName;\n    this$static.description = this$static.description + ': ' + (instanceOfJso(exception)?getExceptionDescription0(dynamicCastJso(exception)):exception + '');\n    this$static.message_0 = '(' + this$static.name_0 + ') ' + (instanceOfJso(exception)?$getProperties(dynamicCastJso(exception)):'') + this$static.description;\n  }\n}\n\nfunction JavaScriptException_0(e){\n  $clinit_JavaScriptException();\n  RuntimeException_0.call(this);\n  this.description = '';\n  this.e = e;\n  this.description = '';\n  $createStackTrace();\n}\n\nfunction getExceptionDescription0(e){\n  return e == null?null:e.message;\n}\n\nfunction getExceptionName0(e){\n  return e == null?null:e.name;\n}\n\ndefineSeed(18, 19, makeCastMap([Q$JavaScriptException, Q$Serializable, Q$Throwable]), JavaScriptException_0);\n_.getMessage = function getMessage_0(){\n  $ensureInit(this);\n  return this.message_0;\n}\n;\n_.getThrown = function getThrown(){\n  return this.e === NOT_SET?null:this.e;\n}\n;\nvar NOT_SET;\nfunction equals__devirtual$(this$static, other){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.equals$(other):maybeJsoInvocation === other;\n}\n\nfunction hashCode__devirtual$(this$static){\n  var maybeJsoInvocation;\n  return maybeJsoInvocation = this$static , isJavaObject(maybeJsoInvocation)?maybeJsoInvocation.hashCode$():getHashCode(maybeJsoInvocation);\n}\n\nfunction $push(this$static, value_0){\n  this$static[this$static.length] = value_0;\n}\n\nfunction $push_0(this$static, value_0){\n  this$static[this$static.length] = value_0;\n}\n\nfunction $setLength(this$static, newLength){\n  this$static.length = newLength;\n}\n\ndefineSeed(25, 1, {});\nfunction apply_0(jsFunction, thisObj, args){\n  return jsFunction.apply(thisObj, args);\n  var __0;\n}\n\nfunction dispose(d){\n  !!d && ($disposeEventSystem(d) , cleanupDOM(d.this$0));\n}\n\nfunction enter(){\n  var now_0;\n  if (entryDepth != 0) {\n    now_0 = currentTimeMillis();\n    if (now_0 - watchdogEntryDepthLastScheduled > 2000) {\n      watchdogEntryDepthLastScheduled = now_0;\n      watchdogEntryDepthTimerId = watchdogEntryDepthSchedule();\n    }\n  }\n  if (entryDepth++ == 0) {\n    $flushEntryCommands(($clinit_SchedulerImpl() , INSTANCE_0));\n    return true;\n  }\n  return false;\n}\n\nfunction entry_0(jsFunction){\n  return function(){\n    try {\n      return entry0(jsFunction, this, arguments);\n    }\n     catch (e) {\n      throw e;\n    }\n  }\n  ;\n}\n\nfunction entry0(jsFunction, thisObj, args){\n  var initialEntry;\n  initialEntry = enter();\n  try {\n    return apply_0(jsFunction, thisObj, args);\n  }\n   finally {\n    exit(initialEntry);\n  }\n}\n\nfunction exit(initialEntry){\n  initialEntry && $flushFinallyCommands(($clinit_SchedulerImpl() , INSTANCE_0));\n  --entryDepth;\n  if (initialEntry) {\n    if (watchdogEntryDepthTimerId != -1) {\n      watchdogEntryDepthCancel(watchdogEntryDepthTimerId);\n      watchdogEntryDepthTimerId = -1;\n    }\n  }\n}\n\nfunction getHashCode(o){\n  return o.$H || (o.$H = ++sNextHashId);\n}\n\nfunction registerEntry(){\n  return entry_0;\n}\n\nfunction reportToBrowser(e){\n  $wnd.setTimeout(function(){\n    throw e;\n  }\n  , 0);\n}\n\nfunction setTimeout_0(func, time){\n  return setTimeout0(func, time, null);\n}\n\nfunction watchdogEntryDepthCancel(timerId){\n  clearTimeout0(timerId);\n}\n\nfunction watchdogEntryDepthSchedule(){\n  return setTimeout_0(function(){\n    entryDepth != 0 && (entryDepth = 0);\n    watchdogEntryDepthTimerId = -1;\n  }\n  , 10);\n}\n\nvar entryDepth = 0, sNextHashId = 0, watchdogEntryDepthLastScheduled = 0, watchdogEntryDepthTimerId = -1;\nfunction $clinit_SchedulerImpl(){\n  $clinit_SchedulerImpl = nullMethod;\n  INSTANCE_0 = new SchedulerImpl_0;\n}\n\nfunction $flushEntryCommands(this$static){\n  var oldQueue, rescheduled;\n  if (this$static.entryCommands) {\n    rescheduled = null;\n    do {\n      oldQueue = this$static.entryCommands;\n      this$static.entryCommands = null;\n      rescheduled = runScheduledTasks(oldQueue, rescheduled);\n    }\n     while (this$static.entryCommands);\n    this$static.entryCommands = rescheduled;\n  }\n}\n\nfunction $flushFinallyCommands(this$static){\n  var oldQueue, rescheduled;\n  if (this$static.finallyCommands) {\n    rescheduled = null;\n    do {\n      oldQueue = this$static.finallyCommands;\n      this$static.finallyCommands = null;\n      rescheduled = runScheduledTasks(oldQueue, rescheduled);\n    }\n     while (this$static.finallyCommands);\n    this$static.finallyCommands = rescheduled;\n  }\n}\n\nfunction $flushPostEventPumpCommands(this$static){\n  var oldDeferred;\n  if (this$static.deferredCommands) {\n    oldDeferred = this$static.deferredCommands;\n    this$static.deferredCommands = null;\n    !this$static.incrementalCommands && (this$static.incrementalCommands = []);\n    runScheduledTasks(oldDeferred, this$static.incrementalCommands);\n  }\n  !!this$static.incrementalCommands && (this$static.incrementalCommands = $runRepeatingTasks(this$static.incrementalCommands));\n}\n\nfunction $isWorkQueued(this$static){\n  return !!this$static.deferredCommands || !!this$static.incrementalCommands;\n}\n\nfunction $maybeSchedulePostEventPumpCommands(this$static){\n  if (!this$static.shouldBeRunning) {\n    this$static.shouldBeRunning = true;\n    !this$static.flusher && (this$static.flusher = new SchedulerImpl$Flusher_0(this$static));\n    scheduleFixedDelayImpl(this$static.flusher, 1);\n    !this$static.rescue && (this$static.rescue = new SchedulerImpl$Rescuer_0(this$static));\n    scheduleFixedDelayImpl(this$static.rescue, 50);\n  }\n}\n\nfunction $runRepeatingTasks(tasks){\n  var canceledSomeTasks, duration, executedSomeTask, i, length_0, newTasks, t;\n  length_0 = tasks.length;\n  if (length_0 == 0) {\n    return null;\n  }\n  canceledSomeTasks = false;\n  duration = new Duration_0;\n  while (currentTimeMillis() - duration.start_0 < 100) {\n    executedSomeTask = false;\n    for (i = 0; i < length_0; i++) {\n      t = tasks[i];\n      if (!t) {\n        continue;\n      }\n      executedSomeTask = true;\n      if (!t[0].execute()) {\n        tasks[i] = null;\n        canceledSomeTasks = true;\n      }\n    }\n    if (!executedSomeTask) {\n      break;\n    }\n  }\n  if (canceledSomeTasks) {\n    newTasks = [];\n    for (i = 0; i < length_0; i++) {\n      !!tasks[i] && $push(newTasks, tasks[i]);\n    }\n    return newTasks.length == 0?null:newTasks;\n  }\n   else {\n    return tasks;\n  }\n}\n\nfunction $scheduleDeferred(this$static, cmd){\n  this$static.deferredCommands = push_0(this$static.deferredCommands, [cmd, false]);\n  $maybeSchedulePostEventPumpCommands(this$static);\n}\n\nfunction $scheduleFinally(this$static, cmd){\n  this$static.finallyCommands = push_0(this$static.finallyCommands, [cmd, false]);\n}\n\nfunction SchedulerImpl_0(){\n}\n\nfunction execute(cmd){\n  return cmd.execute();\n}\n\nfunction push_0(queue, task){\n  !queue && (queue = []);\n  $push(queue, task);\n  return queue;\n}\n\nfunction runScheduledTasks(tasks, rescheduled){\n  var e, i, j, t;\n  for (i = 0 , j = tasks.length; i < j; i++) {\n    t = tasks[i];\n    try {\n      t[1]?t[0].execute() && (rescheduled = push_0(rescheduled, t)):t[0].execute_0();\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$Throwable)) {\n        e = $e0;\n        reportToBrowser(instanceOf(e, Q$JavaScriptException)?dynamicCast(e, Q$JavaScriptException).getThrown():e);\n      }\n       else \n        throw unwrap($e0);\n    }\n  }\n  return rescheduled;\n}\n\nfunction scheduleFixedDelayImpl(cmd, delayMs){\n  $clinit_SchedulerImpl();\n  setTimeout_0(function(){\n    var ret = $entry(execute)(cmd);\n    ret && setTimeout_0(arguments.callee, delayMs);\n  }\n  , delayMs);\n}\n\ndefineSeed(27, 25, {}, SchedulerImpl_0);\n_.flushRunning = false;\n_.shouldBeRunning = false;\nvar INSTANCE_0;\nfunction SchedulerImpl$Flusher_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(28, 1, {}, SchedulerImpl$Flusher_0);\n_.execute = function execute_0(){\n  this.this$0.flushRunning = true;\n  $flushPostEventPumpCommands(this.this$0);\n  this.this$0.flushRunning = false;\n  return this.this$0.shouldBeRunning = $isWorkQueued(this.this$0);\n}\n;\nfunction SchedulerImpl$Rescuer_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(29, 1, {}, SchedulerImpl$Rescuer_0);\n_.execute = function execute_1(){\n  this.this$0.flushRunning && scheduleFixedDelayImpl(this.this$0.flusher, 1);\n  return this.this$0.shouldBeRunning;\n}\n;\nfunction extractNameFromToString(fnToString){\n  var index_0, start_0, toReturn;\n  toReturn = '';\n  fnToString = $trim(fnToString);\n  index_0 = fnToString.indexOf('(');\n  start_0 = fnToString.indexOf('function') == 0?8:0;\n  if (index_0 == -1) {\n    index_0 = $indexOf_0(fnToString, fromCodePoint(64));\n    start_0 = fnToString.indexOf('function ') == 0?9:0;\n  }\n  index_0 != -1 && (toReturn = $trim($substring_0(fnToString, start_0, index_0)));\n  return toReturn.length > 0?toReturn:'anonymous';\n}\n\nfunction $collect(this$static){\n  var seen = {};\n  var toReturn = [];\n  var callee = arguments.callee.caller.caller;\n  while (callee) {\n    var name_0 = this$static.extractName(callee.toString());\n    toReturn.push(name_0);\n    var keyName = ':' + name_0;\n    var withThisName = seen[keyName];\n    if (withThisName) {\n      var i, j;\n      for (i = 0 , j = withThisName.length; i < j; i++) {\n        if (withThisName[i] === callee) {\n          return toReturn;\n        }\n      }\n    }\n    (withThisName || (seen[keyName] = [])).push(callee);\n    callee = callee.caller;\n  }\n  return toReturn;\n}\n\nfunction $createStackTrace(){\n  var i, j, stack_0, stackTrace;\n  stack_0 = [];\n  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, stack_0.length, 0);\n  for (i = 0 , j = stackTrace.length; i < j; i++) {\n    stackTrace[i] = new StackTraceElement_0(stack_0[i]);\n  }\n  $setStackTrace(stackTrace);\n}\n\nfunction $fillInStackTrace(){\n  var i, j, stack_0, stackTrace;\n  stack_0 = $collect(new StackTraceCreator$Collector_0);\n  stackTrace = initDim(_3Ljava_lang_StackTraceElement_2_classLit, makeCastMap([Q$Serializable]), Q$StackTraceElement, stack_0.length, 0);\n  for (i = 0 , j = stackTrace.length; i < j; i++) {\n    stackTrace[i] = new StackTraceElement_0(stack_0[i]);\n  }\n  $setStackTrace(stackTrace);\n}\n\nfunction $getProperties(e){\n  var result = '';\n  try {\n    for (var prop in e) {\n      if (prop != 'name' && prop != 'message' && prop != 'toString') {\n        try {\n          var propValue = prop != '__gwt$exception'?e[prop]:'<skipped>';\n          result += '\\n ' + prop + ': ' + propValue;\n        }\n         catch (ignored) {\n        }\n      }\n    }\n  }\n   catch (ignored) {\n  }\n  return result;\n}\n\nfunction StackTraceCreator$Collector_0(){\n}\n\ndefineSeed(32, 1, {}, StackTraceCreator$Collector_0);\n_.extractName = function extractName(fnToString){\n  return extractNameFromToString(fnToString);\n}\n;\ndefineSeed(33, 1, {});\nfunction $append(this$static, x_0){\n  this$static.string += x_0;\n}\n\nfunction StringBufferImplAppend_0(){\n}\n\ndefineSeed(34, 33, {}, StringBufferImplAppend_0);\n_.string = '';\nfunction clearInterval0(timerId){\n  $wnd.clearInterval(timerId);\n}\n\nfunction clearTimeout0(timerId){\n  $wnd.clearTimeout(timerId);\n}\n\nfunction setTimeout0(func, time, disposeable){\n  var timerId = $wnd.setTimeout(function(){\n    func();\n    disposeable != null && dispose(disposeable);\n  }\n  , time);\n  return timerId;\n}\n\nfunction $appendChild(this$static, newChild){\n  return this$static.appendChild(newChild);\n}\n\nfunction $removeChild(this$static, oldChild){\n  return this$static.removeChild(oldChild);\n}\n\nfunction $removeFromParent(this$static){\n  var parent_0;\n  parent_0 = $getParentElement(this$static);\n  !!parent_0 && parent_0.removeChild(this$static);\n}\n\nfunction $replaceChild(this$static, newChild, oldChild){\n  return this$static.replaceChild(newChild, oldChild);\n}\n\nfunction is(o){\n  try {\n    return !!o && !!o.nodeType;\n  }\n   catch (e) {\n    return false;\n  }\n}\n\nfunction $addClassName(this$static, className){\n  var idx, oldClassName;\n  className = trimClassName(className);\n  oldClassName = this$static.className;\n  idx = indexOfName(oldClassName, className);\n  if (idx == -1) {\n    oldClassName.length > 0?$setClassName(this$static, oldClassName + ' ' + className):$setClassName(this$static, className);\n    return true;\n  }\n  return false;\n}\n\nfunction $getPropertyInt(this$static, name_0){\n  return parseInt(this$static[name_0]) | 0;\n}\n\nfunction $getPropertyString(this$static, name_0){\n  return this$static[name_0] == null?null:String(this$static[name_0]);\n}\n\nfunction $getSubPixelOffsetWidth(this$static){\n  return this$static.offsetWidth || 0;\n}\n\nfunction $removeClassName(this$static, className){\n  var begin, end, idx, newClassName, oldStyle;\n  className = trimClassName(className);\n  oldStyle = this$static.className;\n  idx = indexOfName(oldStyle, className);\n  if (idx != -1) {\n    begin = $trim($substring_0(oldStyle, 0, idx));\n    end = $trim($substring(oldStyle, idx + className.length));\n    begin.length == 0?(newClassName = end):end.length == 0?(newClassName = begin):(newClassName = begin + ' ' + end);\n    $setClassName(this$static, newClassName);\n    return true;\n  }\n  return false;\n}\n\nfunction $setAttribute(this$static, name_0, value_0){\n  this$static.setAttribute(name_0, value_0);\n}\n\nfunction $setClassName(this$static, className){\n  this$static.className = className;\n}\n\nfunction $setId(this$static, id_0){\n  this$static.id = id_0;\n}\n\nfunction $setInnerHTML(this$static, html){\n  this$static.innerHTML = html || '';\n}\n\nfunction $setPropertyInt(this$static, name_0, value_0){\n  this$static[name_0] = value_0;\n}\n\nfunction $setPropertyString(this$static, name_0, value_0){\n  this$static[name_0] = value_0;\n}\n\nfunction $setTabIndex(this$static, tabIndex){\n  this$static.tabIndex = tabIndex;\n}\n\nfunction indexOfName(nameList, name_0){\n  var idx, last, lastPos;\n  idx = nameList.indexOf(name_0);\n  while (idx != -1) {\n    if (idx == 0 || nameList.charCodeAt(idx - 1) == 32) {\n      last = idx + name_0.length;\n      lastPos = nameList.length;\n      if (last == lastPos || last < lastPos && nameList.charCodeAt(last) == 32) {\n        break;\n      }\n    }\n    idx = nameList.indexOf(name_0, idx + 1);\n  }\n  return idx;\n}\n\nfunction is_0(o){\n  if (is(o)) {\n    return !!o && o.nodeType == 1;\n  }\n  return false;\n}\n\nfunction trimClassName(className){\n  className = $trim(className);\n  return className;\n}\n\nfunction $createInputElement(doc, type_0){\n  var e = doc.createElement('INPUT');\n  e.type = type_0;\n  return e;\n}\n\nfunction $eventGetAltKey(evt){\n  return !!evt.altKey;\n}\n\nfunction $eventGetCtrlKey(evt){\n  return !!evt.ctrlKey;\n}\n\nfunction $eventGetKeyCode(evt){\n  return evt.keyCode | 0;\n}\n\nfunction $eventGetMetaKey(evt){\n  return !!evt.metaKey;\n}\n\nfunction $eventGetShiftKey(evt){\n  return !!evt.shiftKey;\n}\n\nfunction $eventGetSubPixelClientX(evt){\n  return evt.clientX || 0;\n}\n\nfunction $eventGetSubPixelClientY(evt){\n  return evt.clientY || 0;\n}\n\nfunction $eventStopPropagation(evt){\n  evt.stopPropagation();\n}\n\nfunction $getFirstChildElement(elem){\n  var child = elem.firstChild;\n  while (child && child.nodeType != 1)\n    child = child.nextSibling;\n  return child;\n}\n\nfunction $getParentElement(node){\n  var parent_0 = node.parentNode;\n  (!parent_0 || parent_0.nodeType != 1) && (parent_0 = null);\n  return parent_0;\n}\n\nfunction $imgSetSrc(img, src_0){\n  img.src = src_0;\n}\n\nfunction $selectAdd(select, option, before){\n  select.add(option, before);\n}\n\nfunction $selectClear(select){\n  select.options.length = 0;\n}\n\nfunction $createInputRadioElement(doc, name_0){\n  var elem = doc.createElement('INPUT');\n  elem.type = 'radio';\n  elem.name = name_0;\n  elem.value = 'on';\n  return elem;\n}\n\nfunction $dispatchEvent(target, evt){\n  target.dispatchEvent(evt);\n}\n\nfunction $eventPreventDefault(evt){\n  evt.preventDefault();\n}\n\nfunction $setInnerText(elem, text_0){\n  elem.textContent = text_0 || '';\n}\n\nfunction $createScriptElement(doc, source){\n  var elem;\n  elem = doc.createElement('script');\n  $setInnerText(elem, source);\n  return elem;\n}\n\nfunction $eventGetCurrentTarget(event_0){\n  return event_0.currentTarget || $wnd;\n}\n\nfunction $isRTL(elem){\n  return elem.ownerDocument.defaultView.getComputedStyle(elem, '').direction == 'rtl';\n}\n\nfunction $getAbsoluteLeft(elem){\n  var left;\n  left = $getBoundingClientRectLeft(elem) + $wnd.pageXOffset;\n  $isRTL(elem) && (left += $getParentOffsetDelta(elem));\n  return left | 0;\n}\n\nfunction $getBoundingClientRectLeft(elem){\n  try {\n    return elem.getBoundingClientRect().left;\n  }\n   catch (e) {\n    return 0;\n  }\n}\n\nfunction $getBoundingClientRectTop(elem){\n  try {\n    return elem.getBoundingClientRect().top;\n  }\n   catch (e) {\n    return 0;\n  }\n}\n\nfunction $getParentOffsetDelta(elem){\n  var offsetParent = elem.offsetParent;\n  if (offsetParent) {\n    return offsetParent.offsetWidth - offsetParent.clientWidth;\n  }\n  return 0;\n}\n\nfunction $getTabIndex(elem){\n  return elem.tabIndex < 65535?elem.tabIndex:-(elem.tabIndex % 65535) - 1;\n}\n\nfunction $selectRemoveOption(select, index_0){\n  try {\n    select.remove(index_0);\n  }\n   catch (e) {\n    select.removeChild(select.childNodes[index_0]);\n  }\n}\n\nfunction isOrHasChildImpl(parent_0, child){\n  if (parent_0.nodeType != 1 && parent_0.nodeType != 9) {\n    return parent_0 == child;\n  }\n  if (child.nodeType != 1) {\n    child = child.parentNode;\n    if (!child) {\n      return false;\n    }\n  }\n  if (parent_0.nodeType == 9) {\n    return parent_0 === child || parent_0.body && parent_0.body.contains(child);\n  }\n   else {\n    return parent_0 === child || parent_0.contains(child);\n  }\n}\n\nfunction $createUniqueId(this$static){\n  !this$static.gwt_uid && (this$static.gwt_uid = 1);\n  return 'gwt-uid-' + this$static.gwt_uid++;\n}\n\nfunction $getClientHeight(this$static){\n  return ($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).clientHeight | 0;\n}\n\nfunction $getClientWidth(this$static){\n  return ($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).clientWidth | 0;\n}\n\nfunction $getScrollHeight(this$static){\n  return (($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).scrollHeight || 0) | 0;\n}\n\n",
"function $getScrollWidth(this$static){\n  return (($equals(this$static.compatMode, 'CSS1Compat')?this$static.documentElement:this$static.body).scrollWidth || 0) | 0;\n}\n\nfunction $isChecked(this$static){\n  return !!this$static.checked;\n}\n\nfunction $isDefaultChecked(this$static){\n  return !!this$static.defaultChecked;\n}\n\nfunction $setAccessKey(this$static, accessKey){\n  this$static.accessKey = accessKey;\n}\n\nfunction $setChecked(this$static, checked){\n  this$static.checked = checked;\n}\n\nfunction $setDefaultChecked(this$static, defaultChecked){\n  this$static.defaultChecked = defaultChecked;\n}\n\nfunction $setDisabled(this$static, disabled){\n  this$static.disabled = disabled;\n}\n\nfunction $setHtmlFor(this$static, htmlFor){\n  this$static.htmlFor = htmlFor;\n}\n\nfunction $setSize(this$static, size_0){\n  this$static.size = size_0;\n}\n\nfunction $setPropertyImpl(this$static, name_0, value_0){\n  this$static[name_0] = value_0;\n}\n\nfunction Enum_0(name_0, ordinal){\n  this.name_0 = name_0;\n  this.ordinal = ordinal;\n}\n\ndefineSeed(55, 1, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum]));\n_.equals$ = function equals_0(other){\n  return this === other;\n}\n;\n_.hashCode$ = function hashCode_1(){\n  return getHashCode(this);\n}\n;\n_.toString$ = function toString_2(){\n  return this.name_0;\n}\n;\n_.ordinal = 0;\nfunction $clinit_Style$Display(){\n  $clinit_Style$Display = nullMethod;\n  NONE = new Style$Display$1_0;\n  BLOCK = new Style$Display$2_0;\n  INLINE = new Style$Display$3_0;\n  INLINE_BLOCK = new Style$Display$4_0;\n  $VALUES = initValues(_3Lcom_google_gwt_dom_client_Style$Display_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Display, [NONE, BLOCK, INLINE, INLINE_BLOCK]);\n}\n\nfunction Style$Display_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_0(){\n  $clinit_Style$Display();\n  return $VALUES;\n}\n\ndefineSeed(54, 55, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES, BLOCK, INLINE, INLINE_BLOCK, NONE;\nfunction Style$Display$1_0(){\n  Style$Display_0.call(this, 'NONE', 0);\n}\n\ndefineSeed(56, 54, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$1_0);\nfunction Style$Display$2_0(){\n  Style$Display_0.call(this, 'BLOCK', 1);\n}\n\ndefineSeed(57, 54, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$2_0);\nfunction Style$Display$3_0(){\n  Style$Display_0.call(this, 'INLINE', 2);\n}\n\ndefineSeed(58, 54, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$3_0);\nfunction Style$Display$4_0(){\n  Style$Display_0.call(this, 'INLINE_BLOCK', 3);\n}\n\ndefineSeed(59, 54, makeCastMap([Q$Style$Display, Q$Style$HasCssName, Q$Serializable, Q$Comparable, Q$Enum]), Style$Display$4_0);\nfunction $clinit_Style$Overflow(){\n  $clinit_Style$Overflow = nullMethod;\n  VISIBLE = new Style$Overflow$1_0;\n  HIDDEN_0 = new Style$Overflow$2_0;\n  SCROLL = new Style$Overflow$3_0;\n  AUTO = new Style$Overflow$4_0;\n  $VALUES_0 = initValues(_3Lcom_google_gwt_dom_client_Style$Overflow_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Overflow, [VISIBLE, HIDDEN_0, SCROLL, AUTO]);\n}\n\nfunction Style$Overflow_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_1(){\n  $clinit_Style$Overflow();\n  return $VALUES_0;\n}\n\ndefineSeed(60, 55, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_0, AUTO, HIDDEN_0, SCROLL, VISIBLE;\nfunction Style$Overflow$1_0(){\n  Style$Overflow_0.call(this, 'VISIBLE', 0);\n}\n\ndefineSeed(61, 60, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$1_0);\nfunction Style$Overflow$2_0(){\n  Style$Overflow_0.call(this, 'HIDDEN', 1);\n}\n\ndefineSeed(62, 60, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$2_0);\nfunction Style$Overflow$3_0(){\n  Style$Overflow_0.call(this, 'SCROLL', 2);\n}\n\ndefineSeed(63, 60, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$3_0);\nfunction Style$Overflow$4_0(){\n  Style$Overflow_0.call(this, 'AUTO', 3);\n}\n\ndefineSeed(64, 60, makeCastMap([Q$Style$HasCssName, Q$Style$Overflow, Q$Serializable, Q$Comparable, Q$Enum]), Style$Overflow$4_0);\nfunction $clinit_Style$Position(){\n  $clinit_Style$Position = nullMethod;\n  STATIC = new Style$Position$1_0;\n  RELATIVE = new Style$Position$2_0;\n  ABSOLUTE = new Style$Position$3_0;\n  FIXED = new Style$Position$4_0;\n  $VALUES_1 = initValues(_3Lcom_google_gwt_dom_client_Style$Position_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Position, [STATIC, RELATIVE, ABSOLUTE, FIXED]);\n}\n\nfunction Style$Position_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_2(){\n  $clinit_Style$Position();\n  return $VALUES_1;\n}\n\ndefineSeed(65, 55, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_1, ABSOLUTE, FIXED, RELATIVE, STATIC;\nfunction Style$Position$1_0(){\n  Style$Position_0.call(this, 'STATIC', 0);\n}\n\ndefineSeed(66, 65, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$1_0);\nfunction Style$Position$2_0(){\n  Style$Position_0.call(this, 'RELATIVE', 1);\n}\n\ndefineSeed(67, 65, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$2_0);\nfunction Style$Position$3_0(){\n  Style$Position_0.call(this, 'ABSOLUTE', 2);\n}\n\ndefineSeed(68, 65, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$3_0);\nfunction Style$Position$4_0(){\n  Style$Position_0.call(this, 'FIXED', 3);\n}\n\ndefineSeed(69, 65, makeCastMap([Q$Style$HasCssName, Q$Style$Position, Q$Serializable, Q$Comparable, Q$Enum]), Style$Position$4_0);\nfunction $clinit_Style$TextAlign(){\n  $clinit_Style$TextAlign = nullMethod;\n  CENTER = new Style$TextAlign$1_0;\n  JUSTIFY = new Style$TextAlign$2_0;\n  LEFT = new Style$TextAlign$3_0;\n  RIGHT = new Style$TextAlign$4_0;\n  $VALUES_2 = initValues(_3Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit, makeCastMap([Q$Serializable]), Q$Style$TextAlign, [CENTER, JUSTIFY, LEFT, RIGHT]);\n}\n\nfunction Style$TextAlign_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_3(){\n  $clinit_Style$TextAlign();\n  return $VALUES_2;\n}\n\ndefineSeed(70, 55, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_2, CENTER, JUSTIFY, LEFT, RIGHT;\nfunction Style$TextAlign$1_0(){\n  Style$TextAlign_0.call(this, 'CENTER', 0);\n}\n\ndefineSeed(71, 70, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$1_0);\nfunction Style$TextAlign$2_0(){\n  Style$TextAlign_0.call(this, 'JUSTIFY', 1);\n}\n\ndefineSeed(72, 70, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$2_0);\nfunction Style$TextAlign$3_0(){\n  Style$TextAlign_0.call(this, 'LEFT', 2);\n}\n\ndefineSeed(73, 70, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$3_0);\nfunction Style$TextAlign$4_0(){\n  Style$TextAlign_0.call(this, 'RIGHT', 3);\n}\n\ndefineSeed(74, 70, makeCastMap([Q$Style$HasCssName, Q$Style$TextAlign, Q$Serializable, Q$Comparable, Q$Enum]), Style$TextAlign$4_0);\nfunction $clinit_Style$Unit(){\n  $clinit_Style$Unit = nullMethod;\n  PX = new Style$Unit$1_0;\n  PCT = new Style$Unit$2_0;\n  EM = new Style$Unit$3_0;\n  EX = new Style$Unit$4_0;\n  PT = new Style$Unit$5_0;\n  PC = new Style$Unit$6_0;\n  IN = new Style$Unit$7_0;\n  CM = new Style$Unit$8_0;\n  MM = new Style$Unit$9_0;\n  $VALUES_3 = initValues(_3Lcom_google_gwt_dom_client_Style$Unit_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Unit, [PX, PCT, EM, EX, PT, PC, IN, CM, MM]);\n}\n\nfunction Style$Unit_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_4(){\n  $clinit_Style$Unit();\n  return $VALUES_3;\n}\n\ndefineSeed(75, 55, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_3, CM, EM, EX, IN, MM, PC, PCT, PT, PX;\nfunction Style$Unit$1_0(){\n  Style$Unit_0.call(this, 'PX', 0);\n}\n\ndefineSeed(76, 75, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$1_0);\n_.getType = function getType(){\n  return 'px';\n}\n;\nfunction Style$Unit$2_0(){\n  Style$Unit_0.call(this, 'PCT', 1);\n}\n\ndefineSeed(77, 75, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$2_0);\n_.getType = function getType_0(){\n  return '%';\n}\n;\nfunction Style$Unit$3_0(){\n  Style$Unit_0.call(this, 'EM', 2);\n}\n\ndefineSeed(78, 75, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$3_0);\n_.getType = function getType_1(){\n  return 'em';\n}\n;\nfunction Style$Unit$4_0(){\n  Style$Unit_0.call(this, 'EX', 3);\n}\n\ndefineSeed(79, 75, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$4_0);\n_.getType = function getType_2(){\n  return 'ex';\n}\n;\nfunction Style$Unit$5_0(){\n  Style$Unit_0.call(this, 'PT', 4);\n}\n\ndefineSeed(80, 75, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$5_0);\n_.getType = function getType_3(){\n  return 'pt';\n}\n;\nfunction Style$Unit$6_0(){\n  Style$Unit_0.call(this, 'PC', 5);\n}\n\ndefineSeed(81, 75, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$6_0);\n_.getType = function getType_4(){\n  return 'pc';\n}\n;\nfunction Style$Unit$7_0(){\n  Style$Unit_0.call(this, 'IN', 6);\n}\n\ndefineSeed(82, 75, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$7_0);\n_.getType = function getType_5(){\n  return 'in';\n}\n;\nfunction Style$Unit$8_0(){\n  Style$Unit_0.call(this, 'CM', 7);\n}\n\ndefineSeed(83, 75, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$8_0);\n_.getType = function getType_6(){\n  return 'cm';\n}\n;\nfunction Style$Unit$9_0(){\n  Style$Unit_0.call(this, 'MM', 8);\n}\n\ndefineSeed(84, 75, makeCastMap([Q$Style$Unit, Q$Serializable, Q$Comparable, Q$Enum]), Style$Unit$9_0);\n_.getType = function getType_7(){\n  return 'mm';\n}\n;\nfunction $clinit_Style$Visibility(){\n  $clinit_Style$Visibility = nullMethod;\n  VISIBLE_0 = new Style$Visibility$1_0;\n  HIDDEN_1 = new Style$Visibility$2_0;\n  $VALUES_4 = initValues(_3Lcom_google_gwt_dom_client_Style$Visibility_2_classLit, makeCastMap([Q$Serializable]), Q$Style$Visibility, [VISIBLE_0, HIDDEN_1]);\n}\n\nfunction Style$Visibility_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_5(){\n  $clinit_Style$Visibility();\n  return $VALUES_4;\n}\n\ndefineSeed(85, 55, makeCastMap([Q$Style$HasCssName, Q$Style$Visibility, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_4, HIDDEN_1, VISIBLE_0;\nfunction Style$Visibility$1_0(){\n  Style$Visibility_0.call(this, 'VISIBLE', 0);\n}\n\ndefineSeed(86, 85, makeCastMap([Q$Style$HasCssName, Q$Style$Visibility, Q$Serializable, Q$Comparable, Q$Enum]), Style$Visibility$1_0);\nfunction Style$Visibility$2_0(){\n  Style$Visibility_0.call(this, 'HIDDEN', 1);\n}\n\ndefineSeed(87, 85, makeCastMap([Q$Style$HasCssName, Q$Style$Visibility, Q$Serializable, Q$Comparable, Q$Enum]), Style$Visibility$2_0);\nfunction $clinit_StyleInjector(){\n  $clinit_StyleInjector = nullMethod;\n  toInject = [];\n  toInjectAtEnd = [];\n  toInjectAtStart = [];\n  flusher = new StyleInjector$1_0;\n}\n\nfunction flush(){\n  $clinit_StyleInjector();\n  var css, maybeReturn, toReturn;\n  toReturn = null;\n  if (toInjectAtStart.length != 0) {\n    css = toInjectAtStart.join('');\n    maybeReturn = $injectStyleSheetAtStart(($clinit_StyleInjector$StyleInjectorImpl() , css));\n    !toInjectAtStart && (toReturn = maybeReturn);\n    $setLength(toInjectAtStart, 0);\n  }\n  if (toInject.length != 0) {\n    css = toInject.join('');\n    maybeReturn = $injectStyleSheet(($clinit_StyleInjector$StyleInjectorImpl() , css));\n    !toInject && (toReturn = maybeReturn);\n    $setLength(toInject, 0);\n  }\n  if (toInjectAtEnd.length != 0) {\n    css = toInjectAtEnd.join('');\n    maybeReturn = $injectStyleSheetAtEnd(($clinit_StyleInjector$StyleInjectorImpl() , css));\n    !toInjectAtEnd && (toReturn = maybeReturn);\n    $setLength(toInjectAtEnd, 0);\n  }\n  needsInjection = false;\n  return toReturn;\n}\n\nfunction schedule(){\n  $clinit_StyleInjector();\n  if (!needsInjection) {\n    needsInjection = true;\n    $scheduleFinally(($clinit_SchedulerImpl() , INSTANCE_0), flusher);\n  }\n}\n\nvar flusher, needsInjection = false, toInject, toInjectAtEnd, toInjectAtStart;\nfunction StyleInjector$1_0(){\n}\n\ndefineSeed(90, 1, {}, StyleInjector$1_0);\n_.execute_0 = function execute_2(){\n  ($clinit_StyleInjector() , needsInjection) && flush();\n}\n;\nfunction $clinit_StyleInjector$StyleInjectorImpl(){\n  $clinit_StyleInjector$StyleInjectorImpl = nullMethod;\n  $clinit_StyleInjector$StyleInjectorImplIE();\n}\n\nfunction $clinit_StyleInjector$StyleInjectorImplIE(){\n  $clinit_StyleInjector$StyleInjectorImplIE = nullMethod;\n  $clinit_StyleInjector$StyleInjectorImpl();\n  styleSheetLengths = initDim(_3I_classLit, makeCastMap([Q$Serializable]), -1, 30, 1);\n}\n\nfunction $appendToStyleSheet(idx, contents, append){\n  var style;\n  style = $doc.styleSheets[idx];\n  append?(style.cssText += contents , undefined):(style.cssText = contents + style.cssText , undefined);\n  return style;\n}\n\nfunction $createNewStyleSheet(contents){\n  var style;\n  style = $doc.createStyleSheet();\n  style.cssText = contents;\n  return style;\n}\n\nfunction $injectStyleSheet(contents){\n  var i, len, numStyles, shortestIdx, shortestLen;\n  numStyles = getDocumentStyleCount();\n  if (numStyles < 30) {\n    return $createNewStyleSheet(contents);\n  }\n   else {\n    shortestLen = 2147483647;\n    shortestIdx = -1;\n    for (i = 0; i < numStyles; i++) {\n      len = styleSheetLengths[i];\n      len == 0 && (len = styleSheetLengths[i] = $doc.styleSheets[i].cssText.length);\n      if (len <= shortestLen) {\n        shortestLen = len;\n        shortestIdx = i;\n      }\n    }\n    styleSheetLengths[shortestIdx] += contents.length;\n    return $appendToStyleSheet(shortestIdx, contents, true);\n  }\n}\n\nfunction $injectStyleSheetAtEnd(contents){\n  var documentStyleCount;\n  documentStyleCount = getDocumentStyleCount();\n  if (documentStyleCount == 0) {\n    return $createNewStyleSheet(contents);\n  }\n  return $appendToStyleSheet(documentStyleCount - 1, contents, true);\n}\n\nfunction $injectStyleSheetAtStart(contents){\n  if (getDocumentStyleCount() == 0) {\n    return $createNewStyleSheet(contents);\n  }\n  return $appendToStyleSheet(0, contents, false);\n}\n\nfunction getDocumentStyleCount(){\n  return $doc.styleSheets.length;\n}\n\nvar styleSheetLengths;\ndefineSeed(96, 1, {});\n_.toString$ = function toString_3(){\n  return 'An event type';\n}\n;\nfunction $overrideSource(this$static, source){\n  this$static.source = source;\n}\n\ndefineSeed(95, 96, {});\n_.revive = function revive(){\n  this.dead = false;\n  this.source = null;\n}\n;\n_.dead = false;\nfunction $setNativeEvent(this$static, nativeEvent){\n  this$static.nativeEvent = nativeEvent;\n}\n\nfunction $setRelativeElement(this$static, relativeElem){\n  this$static.relativeElem = relativeElem;\n}\n\nfunction fireNativeEvent(nativeEvent, handlerSource, relativeElem){\n  var currentNative, currentRelativeElem, type_0, type$iterator, types;\n  if (registered) {\n    types = dynamicCast($unsafeGet(registered, nativeEvent.type), Q$List);\n    if (types) {\n      for (type$iterator = types.iterator(); type$iterator.hasNext();) {\n        type_0 = dynamicCast(type$iterator.next(), Q$DomEvent$Type);\n        currentNative = type_0.flyweight.nativeEvent;\n        currentRelativeElem = type_0.flyweight.relativeElem;\n        $setNativeEvent(type_0.flyweight, nativeEvent);\n        $setRelativeElement(type_0.flyweight, relativeElem);\n        $fireEvent_0(handlerSource, type_0.flyweight);\n        $setNativeEvent(type_0.flyweight, currentNative);\n        $setRelativeElement(type_0.flyweight, currentRelativeElem);\n      }\n    }\n  }\n}\n\ndefineSeed(94, 95, {});\n_.getAssociatedType = function getAssociatedType(){\n  return this.getAssociatedType_0();\n}\n;\nvar registered;\nfunction $clinit_ChangeEvent(){\n  $clinit_ChangeEvent = nullMethod;\n  TYPE = new DomEvent$Type_0('change', new ChangeEvent_0);\n}\n\nfunction ChangeEvent_0(){\n}\n\ndefineSeed(93, 94, {}, ChangeEvent_0);\n_.dispatch = function dispatch(handler){\n  $onChange(dynamicCast(handler, Q$ChangeHandler));\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_0(){\n  return TYPE;\n}\n;\nvar TYPE;\ndefineSeed(99, 94, {});\nfunction $getX(this$static){\n  var relativeElem, e, left;\n  relativeElem = this$static.relativeElem;\n  if (relativeElem) {\n    return e = this$static.nativeEvent , ($eventGetSubPixelClientX(e) | 0) - $getAbsoluteLeft(relativeElem) + (left = (relativeElem.scrollLeft || 0) | 0 , $isRTL(relativeElem) && (left = -left) , left) + (relativeElem.ownerDocument , $wnd.pageXOffset | 0);\n  }\n  return $eventGetSubPixelClientX(this$static.nativeEvent) | 0;\n}\n\nfunction $getY(this$static){\n  var relativeElem, e;\n  relativeElem = this$static.relativeElem;\n  if (relativeElem) {\n    return e = this$static.nativeEvent , ($eventGetSubPixelClientY(e) | 0) - ($getBoundingClientRectTop(relativeElem) + $wnd.pageYOffset | 0) + ((relativeElem.scrollTop || 0) | 0) + (relativeElem.ownerDocument , $wnd.pageYOffset | 0);\n  }\n  return $eventGetSubPixelClientY(this$static.nativeEvent) | 0;\n}\n\ndefineSeed(98, 99, {});\nfunction $clinit_ClickEvent(){\n  $clinit_ClickEvent = nullMethod;\n  TYPE_0 = new DomEvent$Type_0('click', new ClickEvent_0);\n}\n\nfunction ClickEvent_0(){\n}\n\ndefineSeed(97, 98, {}, ClickEvent_0);\n_.dispatch = function dispatch_0(handler){\n  dynamicCast(handler, Q$ClickHandler).onClick(this);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_1(){\n  return TYPE_0;\n}\n;\nvar TYPE_0;\ndefineSeed(102, 1, {});\n_.hashCode$ = function hashCode_2(){\n  return this.index_0;\n}\n;\n_.toString$ = function toString_4(){\n  return 'Event type';\n}\n;\n_.index_0 = 0;\nvar nextHashCode = 0;\nfunction GwtEvent$Type_0(){\n  this.index_0 = ++nextHashCode;\n}\n\ndefineSeed(101, 102, {}, GwtEvent$Type_0);\nfunction DomEvent$Type_0(eventName, flyweight){\n  var types;\n  GwtEvent$Type_0.call(this);\n  this.flyweight = flyweight;\n  !registered && (registered = new PrivateMap_0);\n  types = dynamicCast($unsafeGet(registered, eventName), Q$List);\n  if (!types) {\n    types = new ArrayList_0;\n    $unsafePut(registered, eventName, types);\n  }\n  types.add_0(this);\n  this.name_0 = eventName;\n}\n\ndefineSeed(100, 101, makeCastMap([Q$DomEvent$Type]), DomEvent$Type_0);\nfunction $clinit_MouseDownEvent(){\n  $clinit_MouseDownEvent = nullMethod;\n  TYPE_1 = new DomEvent$Type_0('mousedown', new MouseDownEvent_0);\n}\n\nfunction $dispatch(this$static, handler){\n  $beginDragging(handler.this$0, this$static);\n}\n\nfunction MouseDownEvent_0(){\n}\n\ndefineSeed(103, 98, {}, MouseDownEvent_0);\n_.dispatch = function dispatch_1(handler){\n  $dispatch(this, dynamicCast(handler, Q$MouseDownHandler));\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_2(){\n  return TYPE_1;\n}\n;\nvar TYPE_1;\nfunction $clinit_MouseMoveEvent(){\n  $clinit_MouseMoveEvent = nullMethod;\n  TYPE_2 = new DomEvent$Type_0('mousemove', new MouseMoveEvent_0);\n}\n\nfunction $dispatch_0(this$static, handler){\n  $continueDragging(handler.this$0, this$static);\n}\n\nfunction MouseMoveEvent_0(){\n}\n\ndefineSeed(104, 98, {}, MouseMoveEvent_0);\n_.dispatch = function dispatch_2(handler){\n  $dispatch_0(this, dynamicCast(handler, Q$MouseMoveHandler));\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_3(){\n  return TYPE_2;\n}\n;\nvar TYPE_2;\nfunction $clinit_MouseOutEvent(){\n  $clinit_MouseOutEvent = nullMethod;\n  TYPE_3 = new DomEvent$Type_0('mouseout', new MouseOutEvent_0);\n}\n\nfunction MouseOutEvent_0(){\n}\n\ndefineSeed(105, 98, {}, MouseOutEvent_0);\n_.dispatch = function dispatch_3(handler){\n  dynamicCast(dynamicCast(handler, Q$MouseOutHandler), Q$DialogBox$MouseHandler);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_4(){\n  return TYPE_3;\n}\n;\nvar TYPE_3;\nfunction $clinit_MouseOverEvent(){\n  $clinit_MouseOverEvent = nullMethod;\n  TYPE_4 = new DomEvent$Type_0('mouseover', new MouseOverEvent_0);\n}\n\nfunction MouseOverEvent_0(){\n}\n\ndefineSeed(106, 98, {}, MouseOverEvent_0);\n_.dispatch = function dispatch_4(handler){\n  dynamicCast(dynamicCast(handler, Q$MouseOverHandler), Q$DialogBox$MouseHandler);\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_5(){\n  return TYPE_4;\n}\n;\nvar TYPE_4;\nfunction $clinit_MouseUpEvent(){\n  $clinit_MouseUpEvent = nullMethod;\n  TYPE_5 = new DomEvent$Type_0('mouseup', new MouseUpEvent_0);\n}\n\nfunction $dispatch_1(this$static, handler){\n  $endDragging(handler.this$0, this$static);\n}\n\nfunction MouseUpEvent_0(){\n}\n\ndefineSeed(107, 98, {}, MouseUpEvent_0);\n_.dispatch = function dispatch_5(handler){\n  $dispatch_1(this, dynamicCast(handler, Q$MouseUpHandler));\n}\n;\n_.getAssociatedType_0 = function getAssociatedType_6(){\n  return TYPE_5;\n}\n;\nvar TYPE_5;\nfunction $unsafeGet(this$static, key){\n  return this$static.map_0[key];\n}\n\nfunction $unsafePut(this$static, key, value_0){\n  this$static.map_0[key] = value_0;\n}\n\nfunction PrivateMap_0(){\n  this.map_0 = {};\n}\n\ndefineSeed(108, 1, {}, PrivateMap_0);\nfunction fire_0(){\n  return null;\n}\n\nfunction CloseEvent_1(){\n}\n\nfunction fire_1(source){\n  var event_0;\n  if (TYPE_6) {\n    event_0 = new CloseEvent_1;\n    source.fireEvent(event_0);\n  }\n}\n\ndefineSeed(111, 95, {}, CloseEvent_1);\n_.dispatch = function dispatch_6(handler){\n  dynamicCast(handler, Q$CloseHandler);\n  detachWidgets();\n}\n;\n_.getAssociatedType = function getAssociatedType_7(){\n  return TYPE_6;\n}\n;\nvar TYPE_6;\nfunction ResizeEvent_0(width_0){\n  this.width_0 = width_0;\n}\n\nfunction fire_2(source, width_0){\n  var event_0;\n  if (TYPE_7) {\n    event_0 = new ResizeEvent_0(width_0);\n    $fireEvent(source, event_0);\n  }\n}\n\ndefineSeed(112, 95, {}, ResizeEvent_0);\n_.dispatch = function dispatch_7(handler){\n  dynamicCast(handler, Q$ResizeHandler).onResize(this);\n}\n;\n_.getAssociatedType = function getAssociatedType_8(){\n  return TYPE_7;\n}\n;\n_.width_0 = 0;\nvar TYPE_7;\nfunction fire_3(){\n}\n\nfunction $dispatch_2(handler){\n  handler.this$0.autoHideOnHistoryEvents && handler.this$0.hide(false);\n}\n\nfunction ValueChangeEvent_0(){\n}\n\nfunction fire_4(source){\n  var event_0;\n  if (TYPE_8) {\n    event_0 = new ValueChangeEvent_0;\n    $fireEvent(source.handlers, event_0);\n  }\n}\n\nfunction fireIfNotEqual(source, oldValue, newValue){\n  var event_0;\n  if (!!TYPE_8 && oldValue != newValue && (!oldValue || !(!!newValue && newValue.value_0 == oldValue.value_0))) {\n    event_0 = new ValueChangeEvent_0;\n    !!source.handlerManager && $fireEvent(source.handlerManager, event_0);\n  }\n}\n\ndefineSeed(114, 95, {}, ValueChangeEvent_0);\n_.dispatch = function dispatch_8(handler){\n  $dispatch_2(dynamicCast(handler, Q$ValueChangeHandler));\n}\n;\n_.getAssociatedType = function getAssociatedType_9(){\n  return TYPE_8;\n}\n;\nvar TYPE_8;\nfunction $addHandler(this$static, type_0, handler){\n  return new LegacyHandlerWrapper_0($doAdd(this$static.eventBus, type_0, handler));\n}\n\nfunction $fireEvent(this$static, event_0){\n  var e, oldSource;\n  !event_0.dead || event_0.revive();\n  oldSource = event_0.source;\n  $overrideSource(event_0, this$static.source);\n  try {\n    $doFire(this$static.eventBus, event_0);\n  }\n   catch ($e0) {\n    $e0 = wrap($e0);\n    if (instanceOf($e0, Q$UmbrellaException)) {\n      e = $e0;\n      throw new UmbrellaException_2(e.causes);\n    }\n     else \n      throw unwrap($e0);\n  }\n   finally {\n    oldSource == null?(event_0.dead = true , event_0.source = null):(event_0.source = oldSource);\n  }\n}\n\nfunction $isEventHandled(this$static, e){\n  return $isEventHandled_0(this$static.eventBus, e);\n}\n\nfunction HandlerManager_0(source){\n  HandlerManager_1.call(this, source, false);\n}\n\nfunction HandlerManager_1(source, fireInReverseOrder){\n  this.eventBus = new HandlerManager$Bus_0(fireInReverseOrder);\n  this.source = source;\n}\n\ndefineSeed(115, 1, makeCastMap([Q$HasHandlers]), HandlerManager_0, HandlerManager_1);\n_.fireEvent = function fireEvent(event_0){\n  $fireEvent(this, event_0);\n}\n;\ndefineSeed(118, 1, {});\nfunction $defer(this$static, command){\n  !this$static.deferredDeltas && (this$static.deferredDeltas = new ArrayList_0);\n  $add_10(this$static.deferredDeltas, command);\n}\n\nfunction $doAdd(this$static, type_0, handler){\n  if (!type_0) {\n    throw new NullPointerException_1('Cannot add a handler with a null type');\n  }\n  if (!handler) {\n    throw new NullPointerException_1('Cannot add a null handler');\n  }\n  this$static.firingDepth > 0?$defer(this$static, new SimpleEventBus$2_0(this$static, type_0, handler)):$doAddNow(this$static, type_0, handler);\n  return new SimpleEventBus$1_0(this$static, type_0, handler);\n}\n\nfunction $doAddNow(this$static, type_0, handler){\n  var l;\n  l = $ensureHandlerList(this$static, type_0);\n  l.add_0(handler);\n}\n\nfunction $doFire(this$static, event_0){\n  var causes, e, handler, handlers, it;\n  if (!event_0) {\n    throw new NullPointerException_1('Cannot fire null event');\n  }\n  try {\n    ++this$static.firingDepth;\n    handlers = $getDispatchList(this$static, event_0.getAssociatedType());\n    causes = null;\n    it = this$static.isReverseOrder?handlers.listIterator_0(handlers.size_1()):handlers.listIterator();\n    while (this$static.isReverseOrder?it.i > 0:it.i < it.this$0_0.size_1()) {\n      handler = this$static.isReverseOrder?$previous(it):$next_2(it);\n      try {\n        event_0.dispatch(dynamicCast(handler, Q$EventHandler));\n      }\n       catch ($e0) {\n        $e0 = wrap($e0);\n        if (instanceOf($e0, Q$Throwable)) {\n          e = $e0;\n          !causes && (causes = new HashSet_0);\n          $add_11(causes, e);\n        }\n         else \n          throw unwrap($e0);\n      }\n    }\n    if (causes) {\n      throw new UmbrellaException_1(causes);\n    }\n  }\n   finally {\n    --this$static.firingDepth;\n    this$static.firingDepth == 0 && $handleQueuedAddsAndRemoves(this$static);\n  }\n}\n\nfunction $doRemoveNow(this$static, type_0, handler){\n  var l, removed, sourceMap;\n  l = $getHandlerList(this$static, type_0);\n  removed = l.remove_2(handler);\n  removed && l.isEmpty() && (sourceMap = dynamicCast($get_0(this$static.map_0, type_0), Q$Map) , dynamicCast($removeNullSlot(sourceMap), Q$List) , sourceMap.size_0 == 0 && $remove_9(this$static.map_0, type_0) , undefined);\n}\n\nfunction $ensureHandlerList(this$static, type_0){\n  var handlers, sourceMap;\n  sourceMap = dynamicCast($get_0(this$static.map_0, type_0), Q$Map);\n  if (!sourceMap) {\n    sourceMap = new HashMap_0;\n    $put(this$static.map_0, type_0, sourceMap);\n  }\n  handlers = dynamicCast(sourceMap.nullSlot, Q$List);\n  if (!handlers) {\n    handlers = new ArrayList_0;\n    $putNullSlot(sourceMap, handlers);\n  }\n  return handlers;\n}\n\nfunction $getDispatchList(this$static, type_0){\n  var directHandlers;\n  directHandlers = $getHandlerList(this$static, type_0);\n  return directHandlers;\n}\n\nfunction $getHandlerList(this$static, type_0){\n  var handlers, sourceMap;\n  sourceMap = dynamicCast($get_0(this$static.map_0, type_0), Q$Map);\n  if (!sourceMap) {\n    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;\n  }\n  handlers = dynamicCast(sourceMap.nullSlot, Q$List);\n  if (!handlers) {\n    return $clinit_Collections() , $clinit_Collections() , EMPTY_LIST;\n  }\n  return handlers;\n}\n\nfunction $handleQueuedAddsAndRemoves(this$static){\n  var c, c$iterator;\n  if (this$static.deferredDeltas) {\n    try {\n      for (c$iterator = new AbstractList$IteratorImpl_0(this$static.deferredDeltas); c$iterator.i < c$iterator.this$0_0.size_1();) {\n        c = dynamicCast($next_2(c$iterator), Q$SimpleEventBus$Command);\n        c.execute_0();\n      }\n    }\n     finally {\n      this$static.deferredDeltas = null;\n    }\n  }\n}\n\nfunction $isEventHandled_0(this$static, eventKey){\n  return $containsKey(this$static.map_0, eventKey);\n}\n\ndefineSeed(117, 118, {});\n_.firingDepth = 0;\n_.isReverseOrder = false;\nfunction $doRemove(this$static, type_0, handler){\n  this$static.firingDepth > 0?$defer(this$static, new SimpleEventBus$3_0(this$static, type_0, handler)):$doRemoveNow(this$static, type_0, handler);\n}\n\nfunction HandlerManager$Bus_0(fireInReverseOrder){\n  this.map_0 = new HashMap_0;\n  this.isReverseOrder = fireInReverseOrder;\n}\n\ndefineSeed(116, 117, {}, HandlerManager$Bus_0);\nfunction LegacyHandlerWrapper_0(real){\n  this.real = real;\n}\n\ndefineSeed(119, 1, {}, LegacyHandlerWrapper_0);\nfunction UmbrellaException_1(causes){\n  RuntimeException_2.call(this, makeMessage(causes), makeCause(causes));\n  this.causes = causes;\n}\n\nfunction makeCause(causes){\n  var iterator;\n  iterator = causes.iterator();\n  if (!iterator.hasNext()) {\n    return null;\n  }\n  return dynamicCast(iterator.next(), Q$Throwable);\n}\n\nfunction makeMessage(causes){\n  var b, count, first, t, t$iterator;\n  count = causes.size_1();\n  if (count == 0) {\n    return null;\n  }\n  b = new StringBuilder_0(count == 1?'Exception caught: ':count + ' exceptions caught: ');\n  first = true;\n  for (t$iterator = causes.iterator(); t$iterator.hasNext();) {\n    t = dynamicCast(t$iterator.next(), Q$Throwable);\n    first?(first = false):($append(b.impl, '; ') , b);\n    $append_0(b, t.getMessage());\n  }\n  return b.impl.string;\n}\n\ndefineSeed(121, 19, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Throwable]), UmbrellaException_1);\nfunction UmbrellaException_2(causes){\n  UmbrellaException_1.call(this, causes);\n}\n\ndefineSeed(120, 121, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Throwable]), UmbrellaException_2);\nfunction AutoDirectionHandler_0(){\n}\n\ndefineSeed(122, 1, makeCastMap([Q$EventHandler]), AutoDirectionHandler_0);\n",
"function getDirectionOnElement(elem){\n  var dirPropertyValue;\n  dirPropertyValue = $getPropertyString(elem, 'dir');\n  if ($equalsIgnoreCase('rtl', dirPropertyValue)) {\n    return $clinit_HasDirection$Direction() , RTL;\n  }\n   else if ($equalsIgnoreCase('ltr', dirPropertyValue)) {\n    return $clinit_HasDirection$Direction() , LTR;\n  }\n  return $clinit_HasDirection$Direction() , DEFAULT;\n}\n\nfunction setDirectionOnElement(elem, direction){\n  switch (direction.ordinal) {\n    case 0:\n      {\n        $setPropertyString(elem, 'dir', 'rtl');\n        break;\n      }\n\n    case 1:\n      {\n        $setPropertyString(elem, 'dir', 'ltr');\n        break;\n      }\n\n    case 2:\n      {\n        getDirectionOnElement(elem) != ($clinit_HasDirection$Direction() , DEFAULT) && $setPropertyString(elem, 'dir', '');\n        break;\n      }\n\n  }\n}\n\nfunction $clinit_HasDirection$Direction(){\n  $clinit_HasDirection$Direction = nullMethod;\n  RTL = new HasDirection$Direction_0('RTL', 0);\n  LTR = new HasDirection$Direction_0('LTR', 1);\n  DEFAULT = new HasDirection$Direction_0('DEFAULT', 2);\n  $VALUES_5 = initValues(_3Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit, makeCastMap([Q$Serializable]), Q$HasDirection$Direction, [RTL, LTR, DEFAULT]);\n}\n\nfunction HasDirection$Direction_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_6(){\n  $clinit_HasDirection$Direction();\n  return $VALUES_5;\n}\n\ndefineSeed(124, 55, makeCastMap([Q$HasDirection$Direction, Q$Serializable, Q$Comparable, Q$Enum]), HasDirection$Direction_0);\nvar $VALUES_5, DEFAULT, LTR, RTL;\nfunction Array_0(){\n}\n\nfunction cloneSubrange(array, toIndex){\n  var a, result;\n  a = array;\n  result = a.slice(0, toIndex);\n  initValues(a.___clazz$, a.castableTypeMap$, a.queryId$, result);\n  return result;\n}\n\nfunction createFrom(array, length_0){\n  var a, result;\n  a = array;\n  result = createFromSeed(0, length_0);\n  initValues(a.___clazz$, a.castableTypeMap$, a.queryId$, result);\n  return result;\n}\n\nfunction createFromSeed(seedType, length_0){\n  var array = new Array(length_0);\n  if (seedType == 3) {\n    for (var i = 0; i < length_0; ++i) {\n      array[i] = {l:0, m:0, h:0};\n    }\n  }\n   else if (seedType > 0 && seedType < 3) {\n    var value_0 = seedType == 1?0:false;\n    for (var i = 0; i < length_0; ++i) {\n      array[i] = value_0;\n    }\n  }\n  return array;\n}\n\nfunction initDim(arrayClass, castableTypeMap, queryId, length_0, seedType){\n  var result;\n  result = createFromSeed(seedType, length_0);\n  initValues(arrayClass, castableTypeMap, queryId, result);\n  return result;\n}\n\nfunction initValues(arrayClass, castableTypeMap, queryId, array){\n  $clinit_Array$ExpandoWrapper();\n  wrapArray(array, expandoNames_0, expandoValues_0);\n  array.___clazz$ = arrayClass;\n  array.castableTypeMap$ = castableTypeMap;\n  array.queryId$ = queryId;\n  return array;\n}\n\nfunction setCheck(array, index_0, value_0){\n  if (value_0 != null) {\n    if (array.queryId$ > 0 && !canCastUnsafe(value_0, array.queryId$)) {\n      throw new ArrayStoreException_0;\n    }\n     else if (array.queryId$ == -1 && (value_0.typeMarker$ == nullMethod || canCast(value_0, 1))) {\n      throw new ArrayStoreException_0;\n    }\n     else if (array.queryId$ < -1 && !(value_0.typeMarker$ != nullMethod && !canCast(value_0, 1)) && !canCastUnsafe(value_0, -array.queryId$)) {\n      throw new ArrayStoreException_0;\n    }\n  }\n  return array[index_0] = value_0;\n}\n\ndefineSeed(125, 1, {}, Array_0);\n_.queryId$ = 0;\nfunction $clinit_Array$ExpandoWrapper(){\n  $clinit_Array$ExpandoWrapper = nullMethod;\n  expandoNames_0 = [];\n  expandoValues_0 = [];\n  initExpandos(new Array_0, expandoNames_0, expandoValues_0);\n}\n\nfunction initExpandos(protoType, expandoNames, expandoValues){\n  var i = 0, value_0;\n  for (var name_0 in protoType) {\n    if (value_0 = protoType[name_0]) {\n      expandoNames[i] = name_0;\n      expandoValues[i] = value_0;\n      ++i;\n    }\n  }\n}\n\nfunction wrapArray(array, expandoNames, expandoValues){\n  $clinit_Array$ExpandoWrapper();\n  for (var i = 0, c = expandoNames.length; i < c; ++i) {\n    array[expandoNames[i]] = expandoValues[i];\n  }\n}\n\nvar expandoNames_0, expandoValues_0;\nfunction canCast(src_0, dstId){\n  return src_0.castableTypeMap$ && !!src_0.castableTypeMap$[dstId];\n}\n\nfunction canCastUnsafe(src_0, dstId){\n  return src_0.castableTypeMap$ && src_0.castableTypeMap$[dstId];\n}\n\nfunction dynamicCast(src_0, dstId){\n  if (src_0 != null && !canCastUnsafe(src_0, dstId)) {\n    throw new ClassCastException_0;\n  }\n  return src_0;\n}\n\nfunction dynamicCastJso(src_0){\n  if (src_0 != null && (src_0.typeMarker$ == nullMethod || canCast(src_0, 1))) {\n    throw new ClassCastException_0;\n  }\n  return src_0;\n}\n\nfunction instanceOf(src_0, dstId){\n  return src_0 != null && canCast(src_0, dstId);\n}\n\nfunction instanceOfJso(src_0){\n  return src_0 != null && src_0.typeMarker$ != nullMethod && !canCast(src_0, 1);\n}\n\nfunction isJavaObject(src_0){\n  return src_0.typeMarker$ == nullMethod || canCast(src_0, 1);\n}\n\nfunction maskUndefined(src_0){\n  return src_0 == null?null:src_0;\n}\n\nfunction round_int(x_0){\n  return ~~Math.max(Math.min(x_0, 2147483647), -2147483648);\n}\n\nfunction throwClassCastExceptionUnlessNull(o){\n  if (o != null) {\n    throw new ClassCastException_0;\n  }\n  return null;\n}\n\nfunction init(){\n  var runtimeValue;\n  isStatsAvailable() && onModuleStart('com.google.gwt.useragent.client.UserAgentAsserter');\n  runtimeValue = $getRuntimeValue();\n  $equals('ie10', runtimeValue) || ($wnd.alert('ERROR: Possible problem with your *.gwt.xml module file.\\nThe compile time user.agent value (ie10) does not match the runtime user.agent value (' + runtimeValue + '). Expect more errors.\\n') , undefined);\n  isStatsAvailable() && onModuleStart('com.google.gwt.user.client.DocumentModeAsserter');\n  $onModuleLoad();\n  isStatsAvailable() && onModuleStart('mhcs.client.View');\n  $onModuleLoad_0();\n}\n\nfunction getCachableJavaScriptException(e_0){\n  var jse = e_0.__gwt$exception;\n  if (!jse) {\n    jse = new JavaScriptException_0(e_0);\n    try {\n      e_0.__gwt$exception = jse;\n    }\n     catch (e) {\n    }\n  }\n  return jse;\n}\n\nfunction unwrap(e){\n  var jse;\n  if (instanceOf(e, Q$JavaScriptException)) {\n    jse = dynamicCast(e, Q$JavaScriptException);\n    if (jse.e !== ($clinit_JavaScriptException() , NOT_SET)) {\n      return jse.e === NOT_SET?null:jse.e;\n    }\n  }\n  return e;\n}\n\nfunction wrap(e){\n  if (instanceOf(e, Q$Throwable)) {\n    return e;\n  }\n  return e == null?new JavaScriptException_0(null):getCachableJavaScriptException(e);\n}\n\nfunction isStatsAvailable(){\n  return !!$stats;\n}\n\nfunction onModuleStart(mainClassName){\n  return $stats({moduleName:$moduleName, sessionId:$sessionId, subSystem:'startup', evtGroup:'moduleStartup', millis:(new Date).getTime(), type:'onModuleLoadStart', className:mainClassName});\n}\n\nfunction $adjustHorizontalConstraints(this$static, parentWidth, l){\n  var leftPx, rightPx, widthPx;\n  leftPx = l.left_0 * $getUnitSize(this$static, l.leftUnit, false);\n  rightPx = l.right * $getUnitSize(this$static, l.rightUnit, false);\n  widthPx = l.width_0 * $getUnitSize(this$static, l.widthUnit, false);\n  if (l.setLeft && !l.setTargetLeft) {\n    l.setLeft = false;\n    if (l.setWidth) {\n      l.setTargetRight = true;\n      l.sourceRight = (parentWidth - (leftPx + widthPx)) / $getUnitSize(this$static, l.targetRightUnit, false);\n    }\n     else {\n      l.setTargetWidth = true;\n      l.sourceWidth = (parentWidth - (leftPx + rightPx)) / $getUnitSize(this$static, l.targetWidthUnit, false);\n    }\n  }\n   else if (l.setWidth && !l.setTargetWidth) {\n    l.setWidth = false;\n    if (l.setLeft) {\n      l.setTargetRight = true;\n      l.sourceRight = (parentWidth - (leftPx + widthPx)) / $getUnitSize(this$static, l.targetRightUnit, false);\n    }\n     else {\n      l.setTargetLeft = true;\n      l.sourceLeft = (parentWidth - (rightPx + widthPx)) / $getUnitSize(this$static, l.targetLeftUnit, false);\n    }\n  }\n   else if (l.setRight && !l.setTargetRight) {\n    l.setRight = false;\n    if (l.setWidth) {\n      l.setTargetLeft = true;\n      l.sourceLeft = (parentWidth - (rightPx + widthPx)) / $getUnitSize(this$static, l.targetLeftUnit, false);\n    }\n     else {\n      l.setTargetWidth = true;\n      l.sourceWidth = (parentWidth - (leftPx + rightPx)) / $getUnitSize(this$static, l.targetWidthUnit, false);\n    }\n  }\n  l.setLeft = l.setTargetLeft;\n  l.setRight = l.setTargetRight;\n  l.setWidth = l.setTargetWidth;\n  l.leftUnit = l.targetLeftUnit;\n  l.rightUnit = l.targetRightUnit;\n  l.widthUnit = l.targetWidthUnit;\n}\n\nfunction $adjustVerticalConstraints(this$static, parentHeight, l){\n  var bottomPx, heightPx, topPx;\n  topPx = l.top_0 * $getUnitSize(this$static, l.topUnit, true);\n  bottomPx = l.bottom * $getUnitSize(this$static, l.bottomUnit, true);\n  heightPx = l.height * $getUnitSize(this$static, l.heightUnit, true);\n  if (l.setTop && !l.setTargetTop) {\n    l.setTop = false;\n    if (l.setHeight) {\n      l.setTargetBottom = true;\n      l.sourceBottom = (parentHeight - (topPx + heightPx)) / $getUnitSize(this$static, l.targetBottomUnit, true);\n    }\n     else {\n      l.setTargetHeight = true;\n      l.sourceHeight = (parentHeight - (topPx + bottomPx)) / $getUnitSize(this$static, l.targetHeightUnit, true);\n    }\n  }\n   else if (l.setHeight && !l.setTargetHeight) {\n    l.setHeight = false;\n    if (l.setTop) {\n      l.setTargetBottom = true;\n      l.sourceBottom = (parentHeight - (topPx + heightPx)) / $getUnitSize(this$static, l.targetBottomUnit, true);\n    }\n     else {\n      l.setTargetTop = true;\n      l.sourceTop = (parentHeight - (bottomPx + heightPx)) / $getUnitSize(this$static, l.targetTopUnit, true);\n    }\n  }\n   else if (l.setBottom && !l.setTargetBottom) {\n    l.setBottom = false;\n    if (l.setHeight) {\n      l.setTargetTop = true;\n      l.sourceTop = (parentHeight - (bottomPx + heightPx)) / $getUnitSize(this$static, l.targetTopUnit, true);\n    }\n     else {\n      l.setTargetHeight = true;\n      l.sourceHeight = (parentHeight - (topPx + bottomPx)) / $getUnitSize(this$static, l.targetHeightUnit, true);\n    }\n  }\n  l.setTop = l.setTargetTop;\n  l.setBottom = l.setTargetBottom;\n  l.setHeight = l.setTargetHeight;\n  l.topUnit = l.targetTopUnit;\n  l.bottomUnit = l.targetBottomUnit;\n  l.heightUnit = l.targetHeightUnit;\n}\n\nfunction $attachChild(this$static, child, before, userObject){\n  var container, layer;\n  container = $attachChild_0(this$static.parentElem, child, before);\n  layer = new Layout$Layer_0(container, child, userObject);\n  $add_10(this$static.layers, layer);\n  return layer;\n}\n\nfunction $getUnitSize(this$static, unit, vertical){\n  return $getUnitSizeInPixels(this$static.impl, this$static.parentElem, unit, vertical);\n}\n\nfunction $layout(this$static, duration, callback){\n  var l, l$iterator, l$iterator0, parentHeight, parentWidth;\n  !!this$static.animation && $cancel(this$static.animation);\n  if (duration == 0) {\n    for (l$iterator0 = new AbstractList$IteratorImpl_0(this$static.layers); l$iterator0.i < l$iterator0.this$0_0.size_1();) {\n      l = dynamicCast($next_2(l$iterator0), Q$Layout$Layer);\n      l.left_0 = l.sourceLeft = l.targetLeft;\n      l.top_0 = l.sourceTop = l.targetTop;\n      l.right = l.sourceRight = l.targetRight;\n      l.bottom = l.sourceBottom = l.targetBottom;\n      l.width_0 = l.sourceWidth = l.targetWidth;\n      l.height = l.sourceHeight = l.targetHeight;\n      l.setLeft = l.setTargetLeft;\n      l.setTop = l.setTargetTop;\n      l.setRight = l.setTargetRight;\n      l.setBottom = l.setTargetBottom;\n      l.setWidth = l.setTargetWidth;\n      l.setHeight = l.setTargetHeight;\n      l.leftUnit = l.targetLeftUnit;\n      l.topUnit = l.targetTopUnit;\n      l.rightUnit = l.targetRightUnit;\n      l.bottomUnit = l.targetBottomUnit;\n      l.widthUnit = l.targetWidthUnit;\n      l.heightUnit = l.targetHeightUnit;\n      $layout_0(this$static.impl, l);\n    }\n    !!callback && !!callback.this$0.callback && $doAfterLayout(callback.this$0.callback.this$1.this$0);\n    return;\n  }\n  parentWidth = this$static.parentElem.clientWidth | 0;\n  parentHeight = this$static.parentElem.clientHeight | 0;\n  for (l$iterator = new AbstractList$IteratorImpl_0(this$static.layers); l$iterator.i < l$iterator.this$0_0.size_1();) {\n    l = dynamicCast($next_2(l$iterator), Q$Layout$Layer);\n    $adjustHorizontalConstraints(this$static, parentWidth, l);\n    $adjustVerticalConstraints(this$static, parentHeight, l);\n  }\n  this$static.animation = new Layout$1_0(this$static, callback);\n  $run(this$static.animation, duration, currentTimeMillis());\n}\n\nfunction $removeChild_0(this$static, layer){\n  $removeChild_1(layer.container, layer.child);\n  $remove_13(this$static.layers, layer);\n}\n\nfunction Layout_0(parent_0){\n  this.impl = new LayoutImplIE8_0;\n  this.layers = new ArrayList_0;\n  this.parentElem = parent_0;\n  $initParent(this.impl, parent_0);\n}\n\ndefineSeed(134, 1, {}, Layout_0);\nfunction $onComplete(this$static){\n  this$static.this$0.animation = null;\n  $layout(this$static.this$0, 0, null);\n  !!this$static.val$callback && $onAnimationComplete(this$static.val$callback);\n}\n\nfunction Layout$1_0(this$0, val$callback){\n  this.this$0 = this$0;\n  this.val$callback = val$callback;\n  Animation_0.call(this);\n}\n\ndefineSeed(135, 3, {}, Layout$1_0);\n_.onCancel = function onCancel_0(){\n  $onComplete(this);\n}\n;\n_.onComplete = function onComplete_0(){\n  $onComplete(this);\n}\n;\n_.onUpdate = function onUpdate(progress){\n  var l, l$iterator, child;\n  for (l$iterator = new AbstractList$IteratorImpl_0(this.this$0.layers); l$iterator.i < l$iterator.this$0_0.size_1();) {\n    l = dynamicCast($next_2(l$iterator), Q$Layout$Layer);\n    l.setTargetLeft && (l.left_0 = l.sourceLeft + (l.targetLeft - l.sourceLeft) * progress);\n    l.setTargetRight && (l.right = l.sourceRight + (l.targetRight - l.sourceRight) * progress);\n    l.setTargetTop && (l.top_0 = l.sourceTop + (l.targetTop - l.sourceTop) * progress);\n    l.setTargetBottom && (l.bottom = l.sourceBottom + (l.targetBottom - l.sourceBottom) * progress);\n    l.setTargetWidth && (l.width_0 = l.sourceWidth + (l.targetWidth - l.sourceWidth) * progress);\n    l.setTargetHeight && (l.height = l.sourceHeight + (l.targetHeight - l.sourceHeight) * progress);\n    $layout_0(this.this$0.impl, l);\n    !!this.val$callback && (child = l.userObject , instanceOf(child, Q$RequiresResize) && dynamicCast(child, Q$RequiresResize).onResize_0() , undefined);\n  }\n}\n;\nfunction $setLeftRight(this$static, leftUnit, rightUnit){\n  this$static.setTargetLeft = this$static.setTargetRight = true;\n  this$static.setTargetWidth = false;\n  this$static.targetLeft = 0;\n  this$static.targetRight = 0;\n  this$static.targetLeftUnit = leftUnit;\n  this$static.targetRightUnit = rightUnit;\n}\n\nfunction $setLeftWidth(this$static, left, leftUnit, widthUnit){\n  this$static.setTargetLeft = this$static.setTargetWidth = true;\n  this$static.setTargetRight = false;\n  this$static.targetLeft = left;\n  this$static.targetWidth = 100;\n  this$static.targetLeftUnit = leftUnit;\n  this$static.targetWidthUnit = widthUnit;\n}\n\nfunction $setTopBottom(this$static, topUnit, bottomUnit){\n  this$static.setTargetTop = this$static.setTargetBottom = true;\n  this$static.setTargetHeight = false;\n  this$static.targetTop = 2.5;\n  this$static.targetBottom = 0;\n  this$static.targetTopUnit = topUnit;\n  this$static.targetBottomUnit = bottomUnit;\n}\n\nfunction $setTopHeight(this$static, top_0, topUnit, height, heightUnit){\n  this$static.setTargetTop = this$static.setTargetHeight = true;\n  this$static.setTargetBottom = false;\n  this$static.targetTop = top_0;\n  this$static.targetHeight = height;\n  this$static.targetTopUnit = topUnit;\n  this$static.targetHeightUnit = heightUnit;\n}\n\nfunction Layout$Layer_0(container, child, userObject){\n  this.targetLeftUnit = ($clinit_Style$Unit() , PX);\n  this.targetTopUnit = PX;\n  this.targetRightUnit = PX;\n  this.targetBottomUnit = PX;\n  this.container = container;\n  this.child = child;\n  this.userObject = userObject;\n}\n\ndefineSeed(136, 1, makeCastMap([Q$Layout$Layer]), Layout$Layer_0);\n_.bottom = 0;\n_.height = 0;\n_.left_0 = 0;\n_.right = 0;\n_.setBottom = false;\n_.setHeight = false;\n_.setLeft = false;\n_.setRight = false;\n_.setTargetBottom = true;\n_.setTargetHeight = false;\n_.setTargetLeft = true;\n_.setTargetRight = true;\n_.setTargetTop = true;\n_.setTargetWidth = false;\n_.setTop = false;\n_.setWidth = false;\n_.sourceBottom = 0;\n_.sourceHeight = 0;\n_.sourceLeft = 0;\n_.sourceRight = 0;\n_.sourceTop = 0;\n_.sourceWidth = 0;\n_.targetBottom = 0;\n_.targetHeight = 0;\n_.targetLeft = 0;\n_.targetRight = 0;\n_.targetTop = 0;\n_.targetWidth = 0;\n_.top_0 = 0;\n_.vPos = 2;\n_.visible = true;\n_.width_0 = 0;\nfunction $clinit_LayoutImpl(){\n  $clinit_LayoutImpl = nullMethod;\n  fixedRuler = createRuler(($clinit_Style$Unit() , CM), CM);\n  $appendChild($doc.body, fixedRuler);\n}\n\nfunction $attachChild_0(parent_0, child, before){\n  var beforeContainer, container;\n  container = $doc.createElement('div');\n  container.appendChild(child);\n  $setPropertyImpl(container.style, 'position', ($clinit_Style$Position() , 'absolute'));\n  $setPropertyImpl(container.style, 'overflow', ($clinit_Style$Overflow() , 'hidden'));\n  $fillParent(child);\n  beforeContainer = null;\n  !!before && (beforeContainer = $getParentElement(before));\n  parent_0.insertBefore(container, beforeContainer);\n  return container;\n}\n\nfunction $fillParent(elem){\n  var style;\n  style = elem.style;\n  $setPropertyImpl(style, 'position', ($clinit_Style$Position() , 'absolute'));\n  style['left'] = 0 + ($clinit_Style$Unit() , 'px');\n  style['top'] = '0px';\n  style['right'] = '0px';\n  style['bottom'] = '0px';\n}\n\nfunction $getUnitSizeInPixels(this$static, parent_0, unit, vertical){\n  if (!unit) {\n    return 1;\n  }\n  switch (unit.ordinal) {\n    case 1:\n      return (vertical?parent_0.clientHeight | 0:parent_0.clientWidth | 0) / 100;\n    case 2:\n      return ($getSubPixelOffsetWidth(this$static.relativeRuler) | 0) / 10;\n    case 3:\n      return ((this$static.relativeRuler.offsetHeight || 0) | 0) / 10;\n    case 7:\n      return ($getSubPixelOffsetWidth(fixedRuler) | 0) * 0.1;\n    case 8:\n      return ($getSubPixelOffsetWidth(fixedRuler) | 0) * 0.01;\n    case 6:\n      return ($getSubPixelOffsetWidth(fixedRuler) | 0) * 0.254;\n    case 4:\n      return ($getSubPixelOffsetWidth(fixedRuler) | 0) * 0.00353;\n    case 5:\n      return ($getSubPixelOffsetWidth(fixedRuler) | 0) * 0.0423;\n    default:case 0:\n      return 1;\n  }\n}\n\nfunction $initParent(this$static, parent_0){\n  $setPropertyImpl(parent_0.style, 'position', ($clinit_Style$Position() , 'relative'));\n  $appendChild(parent_0, this$static.relativeRuler = createRuler(($clinit_Style$Unit() , EM), EX));\n}\n\nfunction $removeChild_1(container, child){\n  var style;\n  $removeFromParent(container);\n  $getParentElement(child) == container && $removeFromParent(child);\n  style = child.style;\n  $setPropertyImpl(style, 'position', '');\n  $setPropertyImpl(style, 'left', '');\n  $setPropertyImpl(style, 'top', '');\n  $setPropertyImpl(style, 'width', '');\n  $setPropertyImpl(style, 'height', '');\n}\n\nfunction createRuler(widthUnit, heightUnit){\n  var ruler, style;\n  ruler = $doc.createElement('div');\n  $setInnerHTML(ruler, '&nbsp;');\n  style = ruler.style;\n  $setPropertyImpl(style, 'position', ($clinit_Style$Position() , 'absolute'));\n  $setPropertyImpl(style, 'zIndex', '-32767');\n  $setPropertyImpl(style, 'top', -20 + heightUnit.getType());\n  $setPropertyImpl(style, 'width', 10 + widthUnit.getType());\n  $setPropertyImpl(style, 'height', 10 + heightUnit.getType());\n  $setPropertyImpl(style, 'visibility', ($clinit_Style$Visibility() , 'hidden'));\n  $set(($clinit_State() , HIDDEN), ruler, initValues(_3Ljava_lang_Boolean_2_classLit, makeCastMap([Q$Serializable]), Q$Boolean, [($clinit_Boolean() , $clinit_Boolean() , TRUE)]));\n  return ruler;\n}\n\ndefineSeed(137, 1, {});\nvar fixedRuler;\nfunction $layout_0(this$static, layer){\n  var oldDisplay, style;\n  style = layer.container.style;\n  setLayer(layer.container, layer);\n  if (layer.visible) {\n    oldDisplay = style['display'];\n    $setPropertyImpl(style, 'display', '');\n    oldDisplay.length > 0 && $updateVisibility(this$static, layer.container);\n  }\n   else {\n    $setPropertyImpl(style, 'display', ($clinit_Style$Display() , 'none'));\n  }\n  layer.setLeft?$setValue(this$static, layer, 'left', layer.left_0, layer.leftUnit, false, false):$setPropertyImpl(style, 'left', '');\n  layer.setRight?$setValue(this$static, layer, 'right', layer.right, layer.rightUnit, false, false):$setPropertyImpl(style, 'right', '');\n  layer.setTop?$setValue(this$static, layer, 'top', layer.top_0, layer.topUnit, true, false):$setPropertyImpl(style, 'top', '');\n  layer.setBottom?$setValue(this$static, layer, 'bottom', layer.bottom, layer.bottomUnit, true, false):$setPropertyImpl(style, 'bottom', '');\n  layer.setWidth?$setValue(this$static, layer, 'width', layer.width_0, layer.widthUnit, false, true):$setPropertyImpl(style, 'width', '');\n  layer.setHeight?$setValue(this$static, layer, 'height', layer.height, layer.heightUnit, true, true):$setPropertyImpl(style, 'height', '');\n  style = layer.child.style;\n  switch (2) {\n    case 0:\n    case 1:\n    case 2:\n      style['left'] = 0 + ($clinit_Style$Unit() , 'px');\n      style['right'] = '0px';\n  }\n  switch (layer.vPos) {\n    case 0:\n      style['top'] = 0 + ($clinit_Style$Unit() , 'px');\n      $setPropertyImpl(style, 'bottom', '');\n      break;\n    case 1:\n      $setPropertyImpl(style, 'top', '');\n      style['bottom'] = 0 + ($clinit_Style$Unit() , 'px');\n      break;\n    case 2:\n      style['top'] = 0 + ($clinit_Style$Unit() , 'px');\n      style['bottom'] = '0px';\n  }\n}\n\nfunction $removeLayerRefs(parent_0){\n  for (var i = 0; i < parent_0.childNodes.length; ++i) {\n    var container = parent_0.childNodes[i];\n    container.__layer && (container.__layer = null);\n  }\n}\n\nfunction $setValue(this$static, layer, prop, value_0, unit, vertical, noNegative){\n  switch (unit.ordinal) {\n    case 0:\n    case 1:\n      break;\n    default:value_0 = value_0 * $getUnitSizeInPixels(this$static, layer.container, unit, vertical);\n      value_0 = round_int(value_0 + 0.5);\n      unit = ($clinit_Style$Unit() , PX);\n  }\n  noNegative && value_0 < 0 && (value_0 = 0);\n  layer.container.style[prop] = value_0 + unit.getType();\n}\n\nfunction $updateVisibility(this$static, container){\n  var i, layer, node, nodes;\n  layer = container.__layer;\n  !!layer && $layout_0(this$static, layer);\n  nodes = container.childNodes;\n  for (i = 0; i < nodes.length; ++i) {\n    node = nodes[i];\n    node.nodeType == 1 && $updateVisibility(this$static, node);\n  }\n}\n\nfunction LayoutImplIE8_0(){\n  $clinit_LayoutImpl();\n}\n\nfunction setLayer(container, layer){\n  container.__layer = layer;\n}\n\ndefineSeed(138, 137, {}, LayoutImplIE8_0);\nvar instance;\nfunction CommonResources_Bundle_ie10_default_InlineClientBundleGenerator_0(){\n}\n\ndefineSeed(141, 1, {}, CommonResources_Bundle_ie10_default_InlineClientBundleGenerator_0);\nvar inlineBlockStyle;\nfunction $ensureInjected(this$static){\n  if (!this$static.injected) {\n    this$static.injected = true;\n    $clinit_StyleInjector();\n    $push_0(toInject, '.GPBYFDEH{position:relative;display:inline-block;}');\n    schedule();\n    return true;\n  }\n  return false;\n}\n\nfunction CommonResources_Bundle_ie10_default_InlineClientBundleGenerator$1_0(){\n}\n\ndefineSeed(142, 1, {}, CommonResources_Bundle_ie10_default_InlineClientBundleGenerator$1_0);\n_.injected = false;\nfunction $clinit_CommonResources_Bundle_ie10_default_InlineClientBundleGenerator$inlineBlockStyleInitializer(){\n  $clinit_CommonResources_Bundle_ie10_default_InlineClientBundleGenerator$inlineBlockStyleInitializer = nullMethod;\n  inlineBlockStyle = new CommonResources_Bundle_ie10_default_InlineClientBundleGenerator$1_0;\n}\n\nfunction SafeUriString_0(uri_0){\n  if (uri_0 == null) {\n    throw new NullPointerException_1('uri is null');\n  }\n  this.uri_0 = uri_0;\n}\n\ndefineSeed(144, 1, makeCastMap([Q$SafeUri, Q$SafeUriString]), SafeUriString_0);\n_.equals$ = function equals_1(obj){\n  if (!instanceOf(obj, Q$SafeUri)) {\n    return false;\n  }\n  return $equals(this.uri_0, dynamicCast(dynamicCast(obj, Q$SafeUri), Q$SafeUriString).uri_0);\n}\n;\n_.hashCode$ = function hashCode_3(){\n  return getHashCode_0(this.uri_0);\n}\n;\nfunction $clinit_UriUtils(){\n  $clinit_UriUtils = nullMethod;\n  new RegExp('%5B', 'g');\n  new RegExp('%5D', 'g');\n}\n\nfunction $getItem(this$static, key){\n  return $getItem_0(this$static.storage, key);\n}\n\nfunction $removeItem(this$static, key){\n  $removeItem_0(this$static.storage, key);\n}\n\nfunction $setItem(this$static, key, data_0){\n  $setItem_0(this$static.storage, key, data_0);\n}\n\nfunction Storage_1(){\n  this.storage = 'localStorage';\n}\n\nfunction getLocalStorageIfSupported(){\n  if ((!supportDetectorImpl && (supportDetectorImpl = new Storage$StorageSupportDetector_0) , supportDetectorImpl).isLocalStorageSupported) {\n    !localStorage_0 && (localStorage_0 = new Storage_1);\n    return localStorage_0;\n  }\n  return null;\n}\n\ndefineSeed(146, 1, {}, Storage_1);\nvar localStorage_0, supportDetectorImpl;\nfunction Storage$StorageSupportDetector_0(){\n  this.isLocalStorageSupported = $wnd.localStorage != null;\n  $wnd.sessionStorage != null;\n}\n\ndefineSeed(147, 1, {}, Storage$StorageSupportDetector_0);\n_.isLocalStorageSupported = false;\nfunction $getItem_0(storage, key){\n  return $wnd[storage].getItem(key);\n}\n\nfunction $removeItem_0(storage, key){\n  $getItem_0(storage, key);\n  $wnd[storage].removeItem(key);\n}\n\nfunction $setItem_0(storage, key, data_0){\n  $getItem_0(storage, key);\n  $wnd[storage].setItem(key, data_0);\n}\n\ndefineSeed(150, 1, {});\nfunction PassthroughParser_0(){\n}\n\ndefineSeed(151, 1, {}, PassthroughParser_0);\nvar INSTANCE_1;\nfunction PassthroughRenderer_0(){\n}\n\ndefineSeed(152, 150, {}, PassthroughRenderer_0);\nvar INSTANCE_2;\nfunction $clinit_DOM(){\n  $clinit_DOM = nullMethod;\n  impl_0 = new DOMImplIE9_0;\n}\n\nfunction appendChild(parent_0, child){\n  $clinit_DOM();\n  $appendChild(parent_0, ($clinit_PotentialElement() , $resolve(child)));\n}\n\nfunction dispatchEvent_0(evt, elem){\n  $clinit_DOM();\n  var eventListener;\n  eventListener = getEventListener(elem);\n  if (!eventListener) {\n    return false;\n  }\n  dispatchEvent_1(evt, elem, eventListener);\n  return true;\n}\n\nfunction dispatchEvent_1(evt, elem, listener){\n  $clinit_DOM();\n  var prevCurrentEvent;\n  prevCurrentEvent = currentEvent;\n  currentEvent = evt;\n  elem == sCaptureElem && $eventGetTypeInt(evt.type) == 8192 && (sCaptureElem = null);\n  listener.onBrowserEvent(evt);\n  currentEvent = prevCurrentEvent;\n}\n\nfunction insertChild(parent_0, child, index_0){\n  $clinit_DOM();\n  $insertChild(parent_0, ($clinit_PotentialElement() , $resolve(child)), index_0);\n}\n\nfunction previewEvent(evt){\n  $clinit_DOM();\n  var ret;\n  ret = fire_5(handlers_0, evt);\n  if (!ret && !!evt) {\n    $eventStopPropagation(evt);\n    $eventPreventDefault(evt);\n  }\n  return ret;\n}\n\nfunction releaseCapture(elem){\n  $clinit_DOM();\n  !!sCaptureElem && elem == sCaptureElem && (sCaptureElem = null);\n  $releaseCapture(impl_0, elem);\n}\n\nfunction setCapture(elem){\n  $clinit_DOM();\n  sCaptureElem = elem;\n  $setCapture(impl_0, elem);\n}\n\nfunction sinkBitlessEvent(elem, eventTypeName){\n  $clinit_DOM();\n  $sinkBitlessEvent(impl_0, elem, eventTypeName);\n}\n\nfunction sinkEvents(elem, eventBits){\n  $clinit_DOM();\n  $sinkEvents(impl_0, elem, eventBits);\n}\n\nvar currentEvent = null, impl_0, sCaptureElem;\nfunction $onModuleLoad(){\n  var allowedModes, currentMode, i;\n  currentMode = $doc.compatMode;\n  allowedModes = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, ['CSS1Compat']);\n  for (i = 0; i < allowedModes.length; i++) {\n    if ($equals(allowedModes[i], currentMode)) {\n      return;\n    }\n  }\n  allowedModes.length == 1 && $equals('CSS1Compat', allowedModes[0]) && $equals('BackCompat', currentMode)?\"GWT no longer supports Quirks Mode (document.compatMode=' BackCompat').<br>Make sure your application's host HTML page has a Standards Mode (document.compatMode=' CSS1Compat') doctype,<br>e.g. by using &lt;!doctype html&gt; at the start of your application's HTML page.<br><br>To continue using this unsupported rendering mode and risk layout problems, suppress this message by adding<br>the following line to your*.gwt.xml module file:<br>&nbsp;&nbsp;&lt;extend-configuration-property name=\\\"document.compatMode\\\" value=\\\"\" + currentMode + '\"/&gt;':\"Your *.gwt.xml module configuration prohibits the use of the current doucment rendering mode (document.compatMode=' \" + currentMode + \"').<br>Modify your application's host HTML page doctype, or update your custom 'document.compatMode' configuration property settings.\";\n}\n\nfunction $getTypeInt(this$static){\n  return $clinit_DOM() , $eventGetTypeInt(this$static.type);\n}\n\nfunction addNativePreviewHandler(handler){\n  $clinit_DOM();\n  $maybeInitializeEventSystem(impl_0);\n  !TYPE_9 && (TYPE_9 = new GwtEvent$Type_0);\n  if (!handlers_0) {\n    handlers_0 = new HandlerManager_1(null, true);\n    singleton = new Event$NativePreviewEvent_0;\n  }\n  return $addHandler(handlers_0, TYPE_9, handler);\n}\n\nfunction getTypeInt(typeName){\n  return $eventGetTypeInt(($clinit_DOM() , typeName));\n}\n\nvar handlers_0;\nfunction $dispatch_3(this$static, handler){\n  $previewNativeEvent(handler.this$0, this$static);\n  singleton.isFirstHandler = false;\n}\n\nfunction $revive(this$static){\n  this$static.dead = false;\n  this$static.source = null;\n  this$static.isCanceled = false;\n  this$static.isConsumed = false;\n  this$static.isFirstHandler = true;\n  this$static.nativeEvent = null;\n}\n\nfunction $setNativeEvent_0(this$static, nativeEvent){\n  this$static.nativeEvent = nativeEvent;\n}\n\nfunction Event$NativePreviewEvent_0(){\n}\n\n",
"function fire_5(handlers, nativeEvent){\n  var lastIsCanceled, lastIsConsumed, lastIsFirstHandler, lastNativeEvent, ret;\n  if (!!TYPE_9 && !!handlers && $isEventHandled(handlers, TYPE_9)) {\n    lastIsCanceled = singleton.isCanceled;\n    lastIsConsumed = singleton.isConsumed;\n    lastIsFirstHandler = singleton.isFirstHandler;\n    lastNativeEvent = singleton.nativeEvent;\n    $revive(singleton);\n    $setNativeEvent_0(singleton, nativeEvent);\n    $fireEvent(handlers, singleton);\n    ret = !(singleton.isCanceled && !singleton.isConsumed);\n    singleton.isCanceled = lastIsCanceled;\n    singleton.isConsumed = lastIsConsumed;\n    singleton.isFirstHandler = lastIsFirstHandler;\n    singleton.nativeEvent = lastNativeEvent;\n    return ret;\n  }\n  return true;\n}\n\ndefineSeed(157, 95, {}, Event$NativePreviewEvent_0);\n_.dispatch = function dispatch_9(handler){\n  $dispatch_3(this, dynamicCast(handler, Q$Event$NativePreviewHandler));\n}\n;\n_.getAssociatedType = function getAssociatedType_10(){\n  return TYPE_9;\n}\n;\n_.revive = function revive_0(){\n  $revive(this);\n}\n;\n_.isCanceled = false;\n_.isConsumed = false;\n_.isFirstHandler = false;\nvar TYPE_9, singleton;\nfunction $clinit_History(){\n  $clinit_History = nullMethod;\n  impl_1 = new HistoryImpl_0;\n  $init(impl_1)?null:(impl_1 = null);\n}\n\nfunction addValueChangeHandler(handler){\n  $clinit_History();\n  return impl_1?$addValueChangeHandler(impl_1, handler):null;\n}\n\nvar impl_1;\nfunction addCloseHandler(handler){\n  maybeInitializeCloseHandlers();\n  return addHandler(TYPE_6?TYPE_6:(TYPE_6 = new GwtEvent$Type_0), handler);\n}\n\nfunction addHandler(type_0, handler){\n  return $addHandler((!handlers_1 && (handlers_1 = new Window$WindowHandlers_0) , handlers_1), type_0, handler);\n}\n\nfunction addResizeHandler(handler){\n  maybeInitializeCloseHandlers();\n  maybeInitializeResizeHandlers();\n  return addHandler((!TYPE_7 && (TYPE_7 = new GwtEvent$Type_0) , TYPE_7), handler);\n}\n\nfunction maybeInitializeCloseHandlers(){\n  if (!closeHandlersInitialized) {\n    $initHandler('function __gwt_initWindowCloseHandler(beforeunload, unload) {\\n  var wnd = window\\n  , oldOnBeforeUnload = wnd.onbeforeunload\\n  , oldOnUnload = wnd.onunload;\\n  \\n  wnd.onbeforeunload = function(evt) {\\n    var ret, oldRet;\\n    try {\\n      ret = beforeunload();\\n    } finally {\\n      oldRet = oldOnBeforeUnload && oldOnBeforeUnload(evt);\\n    }\\n    // Avoid returning null as IE6 will coerce it into a string.\\n    // Ensure that \"\" gets returned properly.\\n    if (ret != null) {\\n      return ret;\\n    }\\n    if (oldRet != null) {\\n      return oldRet;\\n    }\\n    // returns undefined.\\n  };\\n  \\n  wnd.onunload = function(evt) {\\n    try {\\n      unload();\\n    } finally {\\n      oldOnUnload && oldOnUnload(evt);\\n      wnd.onresize = null;\\n      wnd.onscroll = null;\\n      wnd.onbeforeunload = null;\\n      wnd.onunload = null;\\n    }\\n  };\\n  \\n  // Remove the reference once we\\'ve initialize the handler\\n  wnd.__gwt_initWindowCloseHandler = undefined;\\n}\\n', new WindowImplIE$1_0);\n    closeHandlersInitialized = true;\n  }\n}\n\nfunction maybeInitializeResizeHandlers(){\n  if (!resizeHandlersInitialized) {\n    $initHandler(\"function __gwt_initWindowResizeHandler(resize) {\\n  var wnd = window, oldOnResize = wnd.onresize;\\n  \\n  wnd.onresize = function(evt) {\\n    try {\\n      resize();\\n    } finally {\\n      oldOnResize && oldOnResize(evt);\\n    }\\n  };\\n  \\n  // Remove the reference once we've initialize the handler\\n  wnd.__gwt_initWindowResizeHandler = undefined;\\n}\\n\", new WindowImplIE$2_0);\n    resizeHandlersInitialized = true;\n  }\n}\n\nfunction onClosed(){\n  closeHandlersInitialized && fire_1((!handlers_1 && (handlers_1 = new Window$WindowHandlers_0) , handlers_1));\n}\n\nfunction onClosing(){\n  var event_0;\n  if (closeHandlersInitialized) {\n    event_0 = new Window$ClosingEvent_0;\n    !!handlers_1 && $fireEvent(handlers_1, event_0);\n    return null;\n  }\n  return null;\n}\n\nfunction onResize(){\n  var height, width_0;\n  if (resizeHandlersInitialized) {\n    width_0 = $getClientWidth($doc);\n    height = $getClientHeight($doc);\n    if (lastResizeWidth != width_0 || lastResizeHeight != height) {\n      lastResizeWidth = width_0;\n      lastResizeHeight = height;\n      fire_2((!handlers_1 && (handlers_1 = new Window$WindowHandlers_0) , handlers_1), width_0);\n    }\n  }\n}\n\nvar closeHandlersInitialized = false, handlers_1, lastResizeHeight = 0, lastResizeWidth = 0, resizeHandlersInitialized = false;\nfunction $clinit_Window$ClosingEvent(){\n  $clinit_Window$ClosingEvent = nullMethod;\n  TYPE_10 = new GwtEvent$Type_0;\n}\n\nfunction Window$ClosingEvent_0(){\n  $clinit_Window$ClosingEvent();\n}\n\ndefineSeed(160, 95, {}, Window$ClosingEvent_0);\n_.dispatch = function dispatch_10(handler){\n  throwClassCastExceptionUnlessNull(handler);\n  null.nullMethod();\n}\n;\n_.getAssociatedType = function getAssociatedType_11(){\n  return TYPE_10;\n}\n;\nvar TYPE_10;\nfunction Window$WindowHandlers_0(){\n  HandlerManager_0.call(this, null);\n}\n\ndefineSeed(161, 115, makeCastMap([Q$HasHandlers]), Window$WindowHandlers_0);\nfunction $eventGetTypeInt(eventType){\n  switch (eventType) {\n    case 'blur':\n      return 4096;\n    case 'change':\n      return 1024;\n    case 'click':\n      return 1;\n    case 'dblclick':\n      return 2;\n    case 'focus':\n      return 2048;\n    case 'keydown':\n      return 128;\n    case 'keypress':\n      return 256;\n    case 'keyup':\n      return 512;\n    case 'load':\n      return 32768;\n    case 'losecapture':\n      return 8192;\n    case 'mousedown':\n      return 4;\n    case 'mousemove':\n      return 64;\n    case 'mouseout':\n      return 32;\n    case 'mouseover':\n      return 16;\n    case 'mouseup':\n      return 8;\n    case 'scroll':\n      return 16384;\n    case 'error':\n      return 65536;\n    case 'DOMMouseScroll':\n    case 'mousewheel':\n      return 131072;\n    case 'contextmenu':\n      return 262144;\n    case 'paste':\n      return 524288;\n    case 'touchstart':\n      return 1048576;\n    case 'touchmove':\n      return 2097152;\n    case 'touchend':\n      return 4194304;\n    case 'touchcancel':\n      return 8388608;\n    case 'gesturestart':\n      return 16777216;\n    case 'gesturechange':\n      return 33554432;\n    case 'gestureend':\n      return 67108864;\n    default:return -1;\n  }\n}\n\nfunction $getEventsSunk(elem){\n  return elem.__eventBits || 0;\n}\n\nfunction $maybeInitializeEventSystem(this$static){\n  if (!eventSystemIsInitialized) {\n    $initEventSystem();\n    new DOMImpl$1_0(this$static);\n    eventSystemIsInitialized = true;\n  }\n}\n\nfunction cleanupDOM(dom){\n  var allElements, elem, i, listener;\n  allElements = $doc.getElementsByTagName('*');\n  for (i = 0; i < allElements.length; i++) {\n    elem = allElements[i];\n    listener = getEventListener(elem);\n    if (listener) {\n      $maybeInitializeEventSystem(dom);\n      $sinkEventsImpl(elem, 0);\n      setEventListener(elem, null);\n    }\n    maybeRemoveDisposableEvent(elem);\n  }\n}\n\nfunction getEventListener(elem){\n  var maybeListener = elem.__listener;\n  return !instanceOfJso(maybeListener) && instanceOf(maybeListener, Q$EventListener)?maybeListener:null;\n}\n\nfunction maybeRemoveDisposableEvent(elem){\n  var diEvents = elem.__gwt_disposeEvent;\n  if (diEvents) {\n    for (var i = 0, l = diEvents.length; i < l; i++) {\n      var diEvent = diEvents[i];\n      elem.removeEventListener(diEvent.event, diEvent.handler, diEvent.capture);\n      elem.__gwt_disposeEvent = null;\n    }\n  }\n}\n\nfunction setEventListener(elem, listener){\n  elem.__listener = listener;\n}\n\ndefineSeed(162, 1, {});\nvar eventSystemIsInitialized = false;\nfunction DOMImpl$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(163, 1, {}, DOMImpl$1_0);\nfunction $clinit_DOMImplStandard(){\n  $clinit_DOMImplStandard = nullMethod;\n  bitlessEventDispatchers = {_default_:dispatchEvent_3, dragenter:dispatchDragEvent, dragover:dispatchDragEvent};\n  captureEventDispatchers = {click:dispatchCapturedMouseEvent, dblclick:dispatchCapturedMouseEvent, mousedown:dispatchCapturedMouseEvent, mouseup:dispatchCapturedMouseEvent, mousemove:dispatchCapturedMouseEvent, mouseover:dispatchCapturedMouseEvent, mouseout:dispatchCapturedMouseEvent, mousewheel:dispatchCapturedMouseEvent, keydown:dispatchCapturedEvent, keyup:dispatchCapturedEvent, keypress:dispatchCapturedEvent, touchstart:dispatchCapturedMouseEvent, touchend:dispatchCapturedMouseEvent, touchmove:dispatchCapturedMouseEvent, touchcancel:dispatchCapturedMouseEvent, gesturestart:dispatchCapturedMouseEvent, gestureend:dispatchCapturedMouseEvent, gesturechange:dispatchCapturedMouseEvent};\n}\n\nfunction $disposeEventSystem(){\n  var foreach = foreach_0;\n  foreach(captureEvents, function(e, fn){\n    $wnd.removeEventListener(e, fn, true);\n  }\n  );\n}\n\nfunction $getChild(elem, index_0){\n  var count = 0, child = elem.firstChild;\n  while (child) {\n    if (child.nodeType == 1) {\n      if (index_0 == count)\n        return child;\n      ++count;\n    }\n    child = child.nextSibling;\n  }\n  return null;\n}\n\nfunction $getChildCount(elem){\n  var count = 0, child = elem.firstChild;\n  while (child) {\n    child.nodeType == 1 && ++count;\n    child = child.nextSibling;\n  }\n  return count;\n}\n\nfunction $initEventSystem(){\n  dispatchEvent_2 = $entry(dispatchEvent_3);\n  dispatchUnhandledEvent = $entry(dispatchUnhandledEvent_0);\n  var foreach = foreach_0;\n  var bitlessEvents = bitlessEventDispatchers;\n  foreach(bitlessEvents, function(e, fn){\n    bitlessEvents[e] = $entry(fn);\n  }\n  );\n  var captureEvents_0 = captureEventDispatchers;\n  foreach(captureEvents_0, function(e, fn){\n    captureEvents_0[e] = $entry(fn);\n  }\n  );\n  foreach(captureEvents_0, function(e, fn){\n    $wnd.addEventListener(e, fn, true);\n  }\n  );\n}\n\nfunction $insertChild(parent_0, toAdd, index_0){\n  var count = 0, child = parent_0.firstChild, before = null;\n  while (child) {\n    if (child.nodeType == 1) {\n      if (count == index_0) {\n        before = child;\n        break;\n      }\n      ++count;\n    }\n    child = child.nextSibling;\n  }\n  parent_0.insertBefore(toAdd, before);\n}\n\nfunction $releaseCapture(this$static, elem){\n  $maybeInitializeEventSystem(this$static);\n  captureElem == elem && (captureElem = null);\n}\n\nfunction $setCapture(this$static, elem){\n  $maybeInitializeEventSystem(this$static);\n  captureElem = elem;\n}\n\nfunction $sinkBitlessEvent(this$static, elem, eventTypeName){\n  $maybeInitializeEventSystem(this$static);\n  $sinkBitlessEventImpl(elem, eventTypeName);\n  $equals('dragover', eventTypeName) && $sinkBitlessEventImpl(elem, 'dragenter');\n}\n\nfunction $sinkBitlessEventImpl(elem, eventTypeName){\n  var dispatchMap = bitlessEventDispatchers;\n  var dispatcher = dispatchMap[eventTypeName] || dispatchMap['_default_'];\n  elem.addEventListener(eventTypeName, dispatcher, false);\n}\n\nfunction $sinkEvents(this$static, elem, bits){\n  $maybeInitializeEventSystem(this$static);\n  $sinkEventsImpl(elem, bits);\n}\n\nfunction $sinkEventsImpl(elem, bits){\n  var chMask = (elem.__eventBits || 0) ^ bits;\n  elem.__eventBits = bits;\n  if (!chMask)\n    return;\n  chMask & 1 && (elem.onclick = bits & 1?dispatchEvent_2:null);\n  chMask & 2 && (elem.ondblclick = bits & 2?dispatchEvent_2:null);\n  chMask & 4 && (elem.onmousedown = bits & 4?dispatchEvent_2:null);\n  chMask & 8 && (elem.onmouseup = bits & 8?dispatchEvent_2:null);\n  chMask & 16 && (elem.onmouseover = bits & 16?dispatchEvent_2:null);\n  chMask & 32 && (elem.onmouseout = bits & 32?dispatchEvent_2:null);\n  chMask & 64 && (elem.onmousemove = bits & 64?dispatchEvent_2:null);\n  chMask & 128 && (elem.onkeydown = bits & 128?dispatchEvent_2:null);\n  chMask & 256 && (elem.onkeypress = bits & 256?dispatchEvent_2:null);\n  chMask & 512 && (elem.onkeyup = bits & 512?dispatchEvent_2:null);\n  chMask & 1024 && (elem.onchange = bits & 1024?dispatchEvent_2:null);\n  chMask & 2048 && (elem.onfocus = bits & 2048?dispatchEvent_2:null);\n  chMask & 4096 && (elem.onblur = bits & 4096?dispatchEvent_2:null);\n  chMask & 8192 && (elem.onlosecapture = bits & 8192?dispatchEvent_2:null);\n  chMask & 16384 && (elem.onscroll = bits & 16384?dispatchEvent_2:null);\n  chMask & 32768 && (elem.onload = bits & 32768?dispatchUnhandledEvent:null);\n  chMask & 65536 && (elem.onerror = bits & 65536?dispatchEvent_2:null);\n  chMask & 131072 && (elem.onmousewheel = bits & 131072?dispatchEvent_2:null);\n  chMask & 262144 && (elem.oncontextmenu = bits & 262144?dispatchEvent_2:null);\n  chMask & 524288 && (elem.onpaste = bits & 524288?dispatchEvent_2:null);\n  chMask & 1048576 && (elem.ontouchstart = bits & 1048576?dispatchEvent_2:null);\n  chMask & 2097152 && (elem.ontouchmove = bits & 2097152?dispatchEvent_2:null);\n  chMask & 4194304 && (elem.ontouchend = bits & 4194304?dispatchEvent_2:null);\n  chMask & 8388608 && (elem.ontouchcancel = bits & 8388608?dispatchEvent_2:null);\n  chMask & 16777216 && (elem.ongesturestart = bits & 16777216?dispatchEvent_2:null);\n  chMask & 33554432 && (elem.ongesturechange = bits & 33554432?dispatchEvent_2:null);\n  chMask & 67108864 && (elem.ongestureend = bits & 67108864?dispatchEvent_2:null);\n}\n\nfunction dispatchCapturedEvent(evt){\n  previewEvent(evt);\n}\n\nfunction dispatchCapturedMouseEvent(evt){\n  var cancelled;\n  cancelled = !previewEvent(evt);\n  if (cancelled || !captureElem) {\n    return;\n  }\n  dispatchEvent_0(evt, captureElem) && $eventStopPropagation(evt);\n}\n\nfunction dispatchDragEvent(evt){\n  $eventPreventDefault(evt);\n  dispatchEvent_3(evt);\n}\n\nfunction dispatchEvent_3(evt){\n  var element;\n  element = getFirstAncestorWithListener(evt);\n  if (!element) {\n    return;\n  }\n  dispatchEvent_1(evt, element.nodeType != 1?null:element, getEventListener(element));\n}\n\nfunction dispatchUnhandledEvent_0(evt){\n  var element;\n  element = $eventGetCurrentTarget(evt);\n  $setPropertyString(element, '__gwtLastUnhandledEvent', evt.type);\n  dispatchEvent_3(evt);\n}\n\nfunction getFirstAncestorWithListener(evt){\n  var curElem;\n  curElem = $eventGetCurrentTarget(evt);\n  while (!!curElem && !getEventListener(curElem)) {\n    curElem = curElem.parentNode;\n  }\n  return curElem;\n}\n\ndefineSeed(166, 162, {});\nvar bitlessEventDispatchers, captureElem, captureEventDispatchers, dispatchEvent_2, dispatchUnhandledEvent;\ndefineSeed(165, 166, {});\nfunction DOMImplIE9_0(){\n  $clinit_DOMImplStandard();\n}\n\ndefineSeed(164, 165, {}, DOMImplIE9_0);\nfunction foreach_0(map_0, fn){\n  for (var e in map_0) {\n    map_0.hasOwnProperty(e) && fn(e, map_0[e]);\n  }\n}\n\nfunction $addValueChangeHandler(this$static, handler){\n  return $addHandler(this$static.handlers, (!TYPE_8 && (TYPE_8 = new GwtEvent$Type_0) , TYPE_8), handler);\n}\n\nfunction $init(this$static){\n  var token_0 = '';\n  var hash_0 = $wnd.location.hash;\n  hash_0.length > 0 && (token_0 = this$static.decodeFragment(hash_0.substring(1)));\n  setToken(token_0);\n  var historyImpl = this$static;\n  historyImpl.oldHandler = $wnd.onhashchange;\n  $wnd.onhashchange = $entry(function(){\n    var token = '', hash = $wnd.location.hash;\n    hash.length > 0 && (token = historyImpl.decodeFragment(hash.substring(1)));\n    historyImpl.newItemOnEvent(token);\n    var oldHandler = historyImpl.oldHandler;\n    oldHandler && oldHandler();\n  }\n  );\n  return true;\n}\n\nfunction HistoryImpl_0(){\n  this.handlers = new HandlerManager_0(null);\n}\n\nfunction setToken(token){\n  token_1 = token;\n}\n\ndefineSeed(168, 1, makeCastMap([Q$HasHandlers]), HistoryImpl_0);\n_.decodeFragment = function decodeFragment(encodedFragment){\n  return decodeURI(encodedFragment.replace('%23', '#'));\n}\n;\n_.fireEvent = function fireEvent_0(event_0){\n  $fireEvent(this.handlers, event_0);\n}\n;\n_.newItemOnEvent = function newItemOnEvent(historyToken){\n  historyToken = historyToken == null?'':historyToken;\n  if (!$equals(historyToken, token_1 == null?'':token_1)) {\n    token_1 = historyToken;\n    fire_4(this);\n  }\n}\n;\nvar token_1 = '';\nfunction $initHandler(initFunc, cmd){\n  var scriptElem;\n  scriptElem = $createScriptElement($doc, initFunc);\n  $appendChild($doc.body, scriptElem);\n  cmd.execute_0();\n  $removeChild($doc.body, scriptElem);\n}\n\nfunction WindowImplIE$1_0(){\n}\n\ndefineSeed(171, 1, {}, WindowImplIE$1_0);\n_.execute_0 = function execute_3(){\n  $wnd.__gwt_initWindowCloseHandler($entry(onClosing), $entry(onClosed));\n}\n;\nfunction WindowImplIE$2_0(){\n}\n\ndefineSeed(172, 1, {}, WindowImplIE$2_0);\n_.execute_0 = function execute_4(){\n  $wnd.__gwt_initWindowResizeHandler($entry(onResize));\n}\n;\nfunction $getElement(this$static){\n  return $clinit_DOM() , this$static.element;\n}\n\nfunction $replaceNode(node, newNode){\n  var p = node.parentNode;\n  if (!p) {\n    return;\n  }\n  p.insertBefore(newNode, node);\n  p.removeChild(node);\n}\n\nfunction $resolvePotentialElement(){\n  throw new UnsupportedOperationException_0;\n}\n\nfunction $setElement(this$static, elem){\n  $setElement_0(this$static, ($clinit_DOM() , elem));\n}\n\nfunction $setElement_0(this$static, elem){\n  this$static.element = elem;\n}\n\nfunction $setStyleName(this$static, style){\n  $setClassName(this$static.getStyleElement(), style);\n}\n\nfunction $setStyleName_0(this$static, style, add_0){\n  setStyleName(this$static.getStyleElement(), style, add_0);\n}\n\nfunction $sinkBitlessEvent_0(this$static, eventTypeName){\n  sinkBitlessEvent(($clinit_DOM() , this$static.element), eventTypeName);\n}\n\nfunction getStylePrimaryName(elem){\n  var fullClassName, spaceIdx;\n  fullClassName = elem.className;\n  spaceIdx = $indexOf_0(fullClassName, fromCodePoint(32));\n  if (spaceIdx >= 0) {\n    return $substring_0(fullClassName, 0, spaceIdx);\n  }\n  return fullClassName;\n}\n\nfunction setStyleName(elem, style, add_0){\n  if (!elem) {\n    throw new RuntimeException_1('Null widget handle. If you are creating a composite, ensure that initWidget() has been called.');\n  }\n  style = $trim(style);\n  if (style.length == 0) {\n    throw new IllegalArgumentException_0('Style names cannot be empty');\n  }\n  add_0?$addClassName(elem, style):$removeClassName(elem, style);\n}\n\nfunction setStylePrimaryName(elem, style){\n  if (!elem) {\n    throw new RuntimeException_1('Null widget handle. If you are creating a composite, ensure that initWidget() has been called.');\n  }\n  style = $trim(style);\n  if (style.length == 0) {\n    throw new IllegalArgumentException_0('Style names cannot be empty');\n  }\n  updatePrimaryAndDependentStyleNames(elem, style);\n}\n\nfunction setVisible(elem, visible){\n  elem.style.display = visible?'':'none';\n  visible?elem.removeAttribute('aria-hidden'):elem.setAttribute('aria-hidden', 'true');\n}\n\nfunction updatePrimaryAndDependentStyleNames(elem, newPrimaryStyle){\n  var classes = elem.className.split(/\\s+/);\n  if (!classes) {\n    return;\n  }\n  var oldPrimaryStyle = classes[0];\n  var oldPrimaryStyleLen = oldPrimaryStyle.length;\n  classes[0] = newPrimaryStyle;\n  for (var i = 1, n = classes.length; i < n; i++) {\n    var name_0 = classes[i];\n    name_0.length > oldPrimaryStyleLen && name_0.charAt(oldPrimaryStyleLen) == '-' && name_0.indexOf(oldPrimaryStyle) == 0 && (classes[i] = newPrimaryStyle + name_0.substring(oldPrimaryStyleLen));\n  }\n  elem.className = classes.join(' ');\n}\n\ndefineSeed(177, 1, makeCastMap([Q$HasVisibility, Q$UIObject]));\n_.getStyleElement = function getStyleElement(){\n  return $clinit_DOM() , this.element;\n}\n;\n_.resolvePotentialElement = function resolvePotentialElement(){\n  return $resolvePotentialElement();\n}\n;\n_.setHeight_0 = function setHeight(height){\n  ($clinit_DOM() , this.element).style['height'] = height;\n}\n;\n_.setVisible = function setVisible_0(visible){\n  setVisible(($clinit_DOM() , this.element), visible);\n}\n;\n_.setWidth_0 = function setWidth(width_0){\n  ($clinit_DOM() , this.element).style['width'] = width_0;\n}\n;\n_.toString$ = function toString_5(){\n  if (!this.element) {\n    return '(null handle)';\n  }\n  return ($clinit_DOM() , this.element).outerHTML;\n}\n;\nfunction $addDomHandler(this$static, handler, type_0){\n  var typeInt;\n  typeInt = getTypeInt(type_0.name_0);\n  typeInt == -1?$sinkBitlessEvent_0(this$static, type_0.name_0):this$static.sinkEvents(typeInt);\n  return $addHandler(!this$static.handlerManager?(this$static.handlerManager = new HandlerManager_0(this$static)):this$static.handlerManager, type_0, handler);\n}\n\nfunction $fireEvent_0(this$static, event_0){\n  !!this$static.handlerManager && $fireEvent(this$static.handlerManager, event_0);\n}\n\nfunction $onAttach(this$static){\n  var bitsToAdd;\n  if (this$static.isAttached()) {\n    throw new IllegalStateException_1(\"Should only call onAttach when the widget is detached from the browser's document\");\n  }\n  this$static.attached = true;\n  $clinit_DOM();\n  setEventListener(this$static.element, this$static);\n  bitsToAdd = this$static.eventsToSink;\n  this$static.eventsToSink = -1;\n  bitsToAdd > 0 && this$static.sinkEvents(bitsToAdd);\n  this$static.doAttachChildren();\n  this$static.onLoad();\n}\n\nfunction $onBrowserEvent(this$static, event_0){\n  var related;\n  switch ($clinit_DOM() , $eventGetTypeInt(event_0.type)) {\n    case 16:\n    case 32:\n      related = event_0.relatedTarget;\n      if (!!related && isOrHasChildImpl(this$static.element, related)) {\n        return;\n      }\n\n  }\n  fireNativeEvent(event_0, this$static, this$static.element);\n}\n\nfunction $onDetach(this$static){\n  if (!this$static.isAttached()) {\n    throw new IllegalStateException_1(\"Should only call onDetach when the widget is attached to the browser's document\");\n  }\n  try {\n    this$static.onUnload();\n  }\n   finally {\n    try {\n      this$static.doDetachChildren();\n    }\n     finally {\n      $clinit_DOM();\n      setEventListener(this$static.element, null);\n      this$static.attached = false;\n    }\n  }\n}\n\nfunction $removeFromParent_0(this$static){\n  if (!this$static.parent_0) {\n    $clinit_RootPanel();\n    $contains_0(widgetsToDetach, this$static) && detachNow(this$static);\n  }\n   else if (instanceOf(this$static.parent_0, Q$HasWidgets)) {\n    dynamicCast(this$static.parent_0, Q$HasWidgets).remove_0(this$static);\n  }\n   else if (this$static.parent_0) {\n    throw new IllegalStateException_1(\"This widget's parent does not implement HasWidgets\");\n  }\n}\n\nfunction $replaceElement(this$static, elem){\n  this$static.attached && ($clinit_DOM() , setEventListener(this$static.element, null));\n  !!this$static.element && $replaceNode(this$static.element, elem);\n  this$static.element = elem;\n  this$static.attached && ($clinit_DOM() , setEventListener(this$static.element, this$static));\n}\n\nfunction $setParent(this$static, parent_0){\n  var oldParent;\n  oldParent = this$static.parent_0;\n  if (!parent_0) {\n    try {\n      !!oldParent && oldParent.isAttached() && this$static.onDetach();\n    }\n     finally {\n      this$static.parent_0 = null;\n    }\n  }\n   else {\n    if (oldParent) {\n      throw new IllegalStateException_1('Cannot set a new parent without first clearing the old parent');\n    }\n    this$static.parent_0 = parent_0;\n    parent_0.isAttached() && this$static.onAttach();\n  }\n}\n\nfunction $sinkEvents_0(this$static, eventBitsToAdd){\n  this$static.eventsToSink == -1?sinkEvents(($clinit_DOM() , this$static.element), eventBitsToAdd | (this$static.element.__eventBits || 0)):(this$static.eventsToSink |= eventBitsToAdd);\n}\n\ndefineSeed(176, 177, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.doAttachChildren = function doAttachChildren(){\n}\n;\n_.doDetachChildren = function doDetachChildren(){\n}\n;\n_.fireEvent = function fireEvent_1(event_0){\n  $fireEvent_0(this, event_0);\n}\n;\n_.isAttached = function isAttached(){\n  return this.attached;\n}\n;\n_.onAttach = function onAttach(){\n  $onAttach(this);\n}\n;\n_.onBrowserEvent = function onBrowserEvent(event_0){\n  $onBrowserEvent(this, event_0);\n}\n;\n_.onDetach = function onDetach(){\n  $onDetach(this);\n}\n;\n_.onLoad = function onLoad(){\n}\n;\n_.onUnload = function onUnload(){\n}\n;\n_.sinkEvents = function sinkEvents_0(eventBitsToAdd){\n  $sinkEvents_0(this, eventBitsToAdd);\n}\n;\n_.attached = false;\n_.eventsToSink = 0;\nfunction $adopt(this$static, child){\n  $setParent(child, this$static);\n}\n\nfunction $clear(this$static){\n  var it;\n  it = new WidgetCollection$WidgetIterator_0(this$static.children);\n  while (it.index_0 < it.this$0.size_0) {\n    $next_0(it);\n    $remove_8(it);\n  }\n}\n\ndefineSeed(175, 176, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.doAttachChildren = function doAttachChildren_0(){\n  tryCommand(this, ($clinit_AttachDetachException() , attachCommand));\n}\n;\n_.doDetachChildren = function doDetachChildren_0(){\n  tryCommand(this, ($clinit_AttachDetachException() , detachCommand));\n}\n;\nfunction $add(this$static, child, container){\n  $removeFromParent_0(child);\n  $add_8(this$static.children, child);\n  $clinit_DOM();\n  $appendChild(container, ($clinit_PotentialElement() , $resolve(child.element)));\n  $setParent(child, this$static);\n}\n\nfunction $adjustIndex(this$static, child, beforeIndex){\n  var idx;\n  $checkIndexBoundsForInsertion(this$static, beforeIndex);\n  if (child.parent_0 == this$static) {\n    idx = $indexOf(this$static.children, child);\n    idx < beforeIndex && --beforeIndex;\n  }\n  return beforeIndex;\n}\n\nfunction $checkIndexBoundsForAccess(this$static, index_0){\n  if (index_0 < 0 || index_0 >= this$static.children.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n}\n\nfunction $checkIndexBoundsForInsertion(this$static, index_0){\n  if (index_0 < 0 || index_0 > this$static.children.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n}\n\nfunction $getWidget(this$static, index_0){\n  return $get(this$static.children, index_0);\n}\n\nfunction $getWidgetIndex(this$static, child){\n  return $indexOf(this$static.children, child);\n}\n\nfunction $insert(this$static, child, container, beforeIndex){\n  beforeIndex = $adjustIndex(this$static, child, beforeIndex);\n  $removeFromParent_0(child);\n  $insert_6(this$static.children, child, beforeIndex);\n  insertChild(container, ($clinit_DOM() , child.element), beforeIndex);\n  $setParent(child, this$static);\n}\n\nfunction $remove(this$static, index_0){\n  return $remove_0(this$static, $get(this$static.children, index_0));\n}\n\nfunction $remove_0(this$static, w){\n  var elem;\n  if (w.parent_0 != this$static) {\n    return false;\n  }\n  try {\n    $setParent(w, null);\n  }\n   finally {\n    elem = ($clinit_DOM() , w.element);\n    $removeChild($getParentElement(elem), elem);\n    $remove_7(this$static.children, w);\n  }\n  return true;\n}\n\nfunction ComplexPanel_0(){\n  this.children = new WidgetCollection_0(this);\n}\n\ndefineSeed(174, 175, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.iterator = function iterator_0(){\n  return new WidgetCollection$WidgetIterator_0(this.children);\n}\n;\n_.remove_0 = function remove(w){\n  return $remove_0(this, w);\n}\n;\nfunction $add_0(this$static, w){\n  $add(this$static, w, ($clinit_DOM() , this$static.element));\n}\n\nfunction $remove_1(this$static, w){\n  var removed;\n  removed = $remove_0(this$static, w);\n  removed && changeToStaticPositioning(($clinit_DOM() , w.element));\n  return removed;\n}\n\nfunction changeToStaticPositioning(elem){\n  $setPropertyImpl(elem.style, 'left', '');\n  $setPropertyImpl(elem.style, 'top', '');\n  $setPropertyImpl(elem.style, 'position', '');\n}\n\ndefineSeed(173, 174, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.remove_0 = function remove_0(w){\n  return $remove_1(this, w);\n}\n;\nfunction $clinit_AttachDetachException(){\n  $clinit_AttachDetachException = nullMethod;\n  attachCommand = new AttachDetachException$1_0;\n  detachCommand = new AttachDetachException$2_0;\n}\n\nfunction AttachDetachException_0(causes){\n  UmbrellaException_2.call(this, causes);\n}\n\nfunction tryCommand(hasWidgets, c){\n  $clinit_AttachDetachException();\n  var caught, e, w, w$iterator;\n  caught = null;\n  for (w$iterator = hasWidgets.iterator(); w$iterator.hasNext();) {\n    w = dynamicCast(w$iterator.next(), Q$Widget);\n    try {\n      c.execute_1(w);\n    }\n     catch ($e0) {\n      $e0 = wrap($e0);\n      if (instanceOf($e0, Q$Throwable)) {\n        e = $e0;\n        !caught && (caught = new HashSet_0);\n        $add_11(caught, e);\n      }\n       else \n        throw unwrap($e0);\n    }\n  }\n  if (caught) {\n    throw new AttachDetachException_0(caught);\n  }\n}\n\ndefineSeed(178, 120, makeCastMap([Q$UmbrellaException, Q$Serializable, Q$Throwable]), AttachDetachException_0);\nvar attachCommand, detachCommand;\nfunction AttachDetachException$1_0(){\n}\n\ndefineSeed(179, 1, {}, AttachDetachException$1_0);\n_.execute_1 = function execute_5(w){\n  w.onAttach();\n}\n;\nfunction AttachDetachException$2_0(){\n}\n\ndefineSeed(180, 1, {}, AttachDetachException$2_0);\n_.execute_1 = function execute_6(w){\n  w.onDetach();\n}\n;\nfunction FocusWidget_0(elem){\n  $setElement_0(this, ($clinit_DOM() , elem));\n}\n\ndefineSeed(183, 176, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.getTabIndex = function getTabIndex(){\n  return $getTabIndex(($clinit_DOM() , this.element));\n}\n;\n_.onAttach = function onAttach_0(){\n  var tabIndex;\n  $onAttach(this);\n  tabIndex = this.getTabIndex();\n  -1 == tabIndex && this.setTabIndex(0);\n}\n;\n_.setTabIndex = function setTabIndex(index_0){\n  $setTabIndex(($clinit_DOM() , this.element), index_0);\n}\n;\nfunction ButtonBase_0(elem){\n  FocusWidget_0.call(this, elem);\n}\n\ndefineSeed(182, 183, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction Button_0(){\n  var e;\n  ButtonBase_0.call(this, (e = $doc.createElement('BUTTON') , e.setAttribute('type', 'button') , e));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-Button');\n}\n\nfunction Button_1(html){\n  Button_0.call(this);\n  $setInnerHTML(($clinit_DOM() , this.element), html);\n}\n\nfunction Button_2(handler){\n  Button_1.call(this, 'Close');\n  $addDomHandler(this, handler, ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_0));\n}\n\n",
"defineSeed(181, 182, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Button_0, Button_1, Button_2);\nfunction $getWidgetTd(this$static, w){\n  if (w.parent_0 != this$static) {\n    return null;\n  }\n  return $clinit_DOM() , $clinit_DOM() , $getParentElement(w.element);\n}\n\nfunction $setCellHorizontalAlignment(td, align_0){\n  $setPropertyString(($clinit_DOM() , td), 'align', align_0.textAlignString);\n}\n\nfunction $setCellHorizontalAlignment_0(this$static, w, align_0){\n  var td;\n  td = $getWidgetTd(this$static, w);\n  !!td && $setPropertyString(($clinit_DOM() , td), 'align', align_0.textAlignString);\n}\n\nfunction $setCellVerticalAlignment(td, align_0){\n  $setCellVerticalAlignment_0(($clinit_DOM() , td), align_0);\n}\n\nfunction $setCellVerticalAlignment_0(td, align_0){\n  $setPropertyImpl(td.style, 'verticalAlign', align_0.verticalAlignString);\n}\n\nfunction CellPanel_0(){\n  ComplexPanel_0.call(this);\n  this.table = ($clinit_DOM() , $doc.createElement('table'));\n  this.body_0 = $doc.createElement('tbody');\n  $appendChild(this.table, ($clinit_PotentialElement() , $resolve(this.body_0)));\n  $setElement(this, this.table);\n}\n\ndefineSeed(184, 174, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction $replaceInputElement(this$static, elem){\n  var accessKey, checked, enabled, formValue, newInputElem, sunkEvents, tabIndex, uid;\n  newInputElem = elem;\n  tabIndex = $getTabIndex(this$static.inputElem);\n  checked = (this$static.attached?($clinit_Boolean() , $isChecked(this$static.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this$static.inputElem)?TRUE:FALSE)).value_0;\n  enabled = !this$static.inputElem.disabled;\n  formValue = this$static.inputElem.value;\n  uid = this$static.inputElem.id;\n  accessKey = this$static.inputElem.accessKey;\n  sunkEvents = ($clinit_DOM() , $getEventsSunk(this$static.inputElem));\n  setEventListener(this$static.inputElem, null);\n  $replaceChild(this$static.element, newInputElem, this$static.inputElem);\n  sinkEvents(elem, $getEventsSunk(this$static.inputElem));\n  sinkEvents(this$static.inputElem, 0);\n  this$static.inputElem = newInputElem;\n  sinkEvents(this$static.inputElem, sunkEvents);\n  $setId(this$static.inputElem, uid);\n  $equals('', accessKey) || $setAccessKey(this$static.inputElem, accessKey);\n  !!this$static.inputElem && $setTabIndex(this$static.inputElem, tabIndex);\n  $setValue_0(this$static, ($clinit_Boolean() , checked?TRUE:FALSE));\n  $setDisabled(this$static.inputElem, !enabled);\n  enabled?$setStyleName_0(this$static, getStylePrimaryName(this$static.element) + '-disabled', false):$setStyleName_0(this$static, getStylePrimaryName(this$static.element) + '-disabled', true);\n  $setAttribute(this$static.inputElem, 'value', formValue);\n  this$static.attached && setEventListener(this$static.inputElem, this$static);\n}\n\nfunction $setValue_0(this$static, value_0){\n  var oldValue;\n  !value_0 && (value_0 = ($clinit_Boolean() , FALSE));\n  oldValue = this$static.attached?($clinit_Boolean() , $isChecked(this$static.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this$static.inputElem)?TRUE:FALSE);\n  $setChecked(this$static.inputElem, value_0.value_0);\n  $setDefaultChecked(this$static.inputElem, value_0.value_0);\n  if (!!oldValue && oldValue.value_0 == value_0.value_0) {\n    return;\n  }\n}\n\nfunction CheckBox_0(){\n  var e;\n  CheckBox_1.call(this, ($clinit_DOM() , e = $doc.createElement('INPUT') , e.type = 'checkbox' , e.value = 'on' , e));\n  $setClassName(this.element, 'gwt-CheckBox');\n}\n\nfunction CheckBox_1(elem){\n  var uid;\n  ButtonBase_0.call(this, ($clinit_DOM() , $doc.createElement('span')));\n  this.inputElem = elem;\n  this.labelElem = $doc.createElement('label');\n  $appendChild(this.element, this.inputElem);\n  $appendChild(this.element, this.labelElem);\n  uid = $createUniqueId($doc);\n  $setPropertyString(this.inputElem, 'id', uid);\n  $setHtmlFor(this.labelElem, uid);\n  this.directionalTextHelper = new DirectionalTextHelper_0(this.labelElem);\n  !!this.inputElem && $setTabIndex(this.inputElem, 0);\n}\n\nfunction CheckBox_2(label_0){\n  CheckBox_0.call(this);\n  $setTextOrHtml(this.directionalTextHelper, label_0, false);\n}\n\ndefineSeed(185, 182, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), CheckBox_0, CheckBox_2);\n_.getTabIndex = function getTabIndex_0(){\n  return $getTabIndex(this.inputElem);\n}\n;\n_.onLoad = function onLoad_0(){\n  $clinit_DOM();\n  setEventListener(this.inputElem, this);\n}\n;\n_.onUnload = function onUnload_0(){\n  $clinit_DOM();\n  setEventListener(this.inputElem, null);\n  $setValue_0(this, this.attached?($clinit_Boolean() , $isChecked(this.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this.inputElem)?TRUE:FALSE));\n}\n;\n_.setTabIndex = function setTabIndex_0(index_0){\n  !!this.inputElem && $setTabIndex(this.inputElem, index_0);\n}\n;\n_.sinkEvents = function sinkEvents_1(eventBitsToAdd){\n  this.eventsToSink == -1?sinkEvents(this.inputElem, eventBitsToAdd | ($clinit_DOM() , $getEventsSunk(this.inputElem))):this.eventsToSink == -1?sinkEvents(($clinit_DOM() , this.element), eventBitsToAdd | (this.element.__eventBits || 0)):(this.eventsToSink |= eventBitsToAdd);\n}\n;\nfunction $initWidget(this$static, widget){\n  var elem;\n  if (this$static.widget) {\n    throw new IllegalStateException_1('Composite.initWidget() may only be called once.');\n  }\n  $removeFromParent_0(widget);\n  elem = ($clinit_DOM() , widget.element);\n  $setElement_0(this$static, elem);\n  isPotential(elem) && $setResolver(($clinit_PotentialElement() , elem), this$static);\n  this$static.widget = widget;\n  $setParent(widget, this$static);\n}\n\ndefineSeed(186, 176, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.isAttached = function isAttached_0(){\n  if (this.widget) {\n    return this.widget.attached;\n  }\n  return false;\n}\n;\n_.onAttach = function onAttach_1(){\n  if (this.eventsToSink != -1) {\n    $sinkEvents_0(this.widget, this.eventsToSink);\n    this.eventsToSink = -1;\n  }\n  $onAttach(this.widget);\n  $clinit_DOM();\n  setEventListener(this.element, this);\n}\n;\n_.onBrowserEvent = function onBrowserEvent_0(event_0){\n  $onBrowserEvent(this, event_0);\n  $onBrowserEvent(this.widget, event_0);\n}\n;\n_.onDetach = function onDetach_0(){\n  $onDetach_0(this.widget);\n}\n;\n_.resolvePotentialElement = function resolvePotentialElement_0(){\n  $setElement_0(this, ($clinit_DOM() , $resolvePotentialElement()));\n  return this.element;\n}\n;\nfunction $animate(this$static, duration){\n  $schedule_1(this$static.layoutCmd, duration);\n}\n\nfunction $doAfterLayout(this$static){\n  var layer;\n  if (this$static.hidingWidget) {\n    layer = dynamicCast(this$static.hidingWidget.layoutData, Q$Layout$Layer);\n    $setWidgetVisible(this$static.hidingWidget, layer, false);\n    $layout(this$static.layout, 0, null);\n    this$static.hidingWidget = null;\n  }\n}\n\nfunction $doBeforeLayout(this$static){\n  var direction, hDirection, newIndex, newLayer, oldIndex, oldLayer, vDirection;\n  oldLayer = !this$static.lastVisibleWidget?null:dynamicCast(this$static.lastVisibleWidget.layoutData, Q$Layout$Layer);\n  newLayer = !this$static.visibleWidget?null:dynamicCast(this$static.visibleWidget.layoutData, Q$Layout$Layer);\n  oldIndex = $getWidgetIndex(this$static, this$static.lastVisibleWidget);\n  newIndex = $getWidgetIndex(this$static, this$static.visibleWidget);\n  direction = oldIndex < newIndex?100:-100;\n  vDirection = this$static.isAnimationVertical?direction:0;\n  hDirection = this$static.isAnimationVertical?0:direction;\n  this$static.hidingWidget = null;\n  if (this$static.visibleWidget != this$static.lastVisibleWidget) {\n    if (oldLayer) {\n      $setTopHeight(oldLayer, 0, ($clinit_Style$Unit() , PCT), 100, PCT);\n      $setLeftWidth(oldLayer, 0, PCT, PCT);\n      $setWidgetVisible(this$static.lastVisibleWidget, oldLayer, true);\n    }\n    if (newLayer) {\n      $setTopHeight(newLayer, vDirection, ($clinit_Style$Unit() , PCT), 100, PCT);\n      $setLeftWidth(newLayer, hDirection, PCT, PCT);\n      $setWidgetVisible(this$static.visibleWidget, newLayer, true);\n    }\n    $layout(this$static.layout, 0, null);\n    this$static.hidingWidget = this$static.lastVisibleWidget;\n  }\n  if (oldLayer) {\n    $setTopHeight(oldLayer, -vDirection, ($clinit_Style$Unit() , PCT), 100, PCT);\n    $setLeftWidth(oldLayer, -hDirection, PCT, PCT);\n    $setWidgetVisible(this$static.lastVisibleWidget, oldLayer, true);\n  }\n  if (newLayer) {\n    $setTopHeight(newLayer, 0, ($clinit_Style$Unit() , PCT), 100, PCT);\n    $setLeftWidth(newLayer, 0, PCT, PCT);\n    $setWidgetVisible(this$static.visibleWidget, newLayer, true);\n  }\n  this$static.lastVisibleWidget = this$static.visibleWidget;\n}\n\nfunction $insert_0(this$static, widget, beforeIndex){\n  var before;\n  before = beforeIndex < this$static.children.size_0?$get(this$static.children, beforeIndex):null;\n  $insert_1(this$static, widget, before);\n}\n\nfunction $insert_1(this$static, widget, before){\n  var children, index_0, layer;\n  $removeFromParent_0(widget);\n  children = this$static.children;\n  if (!before) {\n    $insert_6(children, widget, children.size_0);\n  }\n   else {\n    index_0 = $indexOf(children, before);\n    $insert_6(children, widget, index_0);\n  }\n  layer = $attachChild(this$static.layout, ($clinit_DOM() , widget.element), before?before.element:null, widget);\n  layer.visible = false;\n  widget.setVisible(false);\n  widget.layoutData = layer;\n  $setParent(widget, this$static);\n  $schedule_1(this$static.layoutCmd, 0);\n}\n\nfunction $remove_2(this$static, w){\n  var layer, removed;\n  removed = $remove_0(this$static, w);\n  if (removed) {\n    layer = dynamicCast(w.layoutData, Q$Layout$Layer);\n    $removeChild_0(this$static.layout, layer);\n    w.layoutData = null;\n    this$static.visibleWidget == w && (this$static.visibleWidget = null);\n    this$static.hidingWidget == w && (this$static.hidingWidget = null);\n    this$static.lastVisibleWidget == w && (this$static.lastVisibleWidget = null);\n  }\n  return removed;\n}\n\nfunction $setWidgetVisible(w, layer, visible){\n  layer.visible = visible;\n  w.setVisible(visible);\n}\n\nfunction $showWidget(this$static, index_0){\n  $checkIndexBoundsForAccess(this$static, index_0);\n  $showWidget_0(this$static, $get(this$static.children, index_0));\n}\n\nfunction $showWidget_0(this$static, widget){\n  if (widget == this$static.visibleWidget) {\n    return;\n  }\n  this$static.visibleWidget = widget;\n  $animate(this$static, !widget?0:this$static.animationDuration);\n}\n\ndefineSeed(187, 174, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RequiresResize, Q$UIObject, Q$Widget]));\n_.onAttach = function onAttach_2(){\n  $onAttach(this);\n}\n;\n_.onDetach = function onDetach_1(){\n  $onDetach(this);\n  $removeLayerRefs(this.layout.parentElem);\n}\n;\n_.onResize_0 = function onResize_0(){\n  var child, child$iterator;\n  for (child$iterator = new WidgetCollection$WidgetIterator_0(this.children); child$iterator.index_0 < child$iterator.this$0.size_0;) {\n    child = $next_0(child$iterator);\n    instanceOf(child, Q$RequiresResize) && dynamicCast(child, Q$RequiresResize).onResize_0();\n  }\n}\n;\n_.remove_0 = function remove_1(w){\n  return $remove_2(this, w);\n}\n;\n_.animationDuration = 0;\n_.isAnimationVertical = false;\nfunction $schedule_0(this$static, duration, callback){\n  this$static.duration = duration;\n  this$static.callback = callback;\n  this$static.canceled = false;\n  if (!this$static.scheduled) {\n    this$static.scheduled = true;\n    $scheduleFinally(($clinit_SchedulerImpl() , INSTANCE_0), this$static);\n  }\n}\n\nfunction LayoutCommand_0(layout){\n  this.layout = layout;\n}\n\ndefineSeed(189, 1, {}, LayoutCommand_0);\n_.doBeforeLayout = function doBeforeLayout(){\n}\n;\n_.execute_0 = function execute_7(){\n  this.scheduled = false;\n  if (this.canceled) {\n    return;\n  }\n  this.doBeforeLayout();\n  $layout(this.layout, this.duration, new LayoutCommand$1_0(this));\n}\n;\n_.schedule = function schedule_0(duration, callback){\n  $schedule_0(this, duration, callback);\n}\n;\n_.canceled = false;\n_.duration = 0;\n_.scheduled = false;\nfunction $schedule_1(this$static, duration){\n  $schedule_0(this$static, duration, new DeckLayoutPanel$DeckAnimateCommand$1_0(this$static));\n}\n\nfunction DeckLayoutPanel$DeckAnimateCommand_0(this$0, layout){\n  this.this$0 = this$0;\n  LayoutCommand_0.call(this, layout);\n}\n\ndefineSeed(188, 189, {}, DeckLayoutPanel$DeckAnimateCommand_0);\n_.doBeforeLayout = function doBeforeLayout_0(){\n  $doBeforeLayout(this.this$0);\n}\n;\n_.schedule = function schedule_1(duration, callback){\n  $schedule_1(this, duration);\n}\n;\nfunction DeckLayoutPanel$DeckAnimateCommand$1_0(this$1){\n  this.this$1 = this$1;\n}\n\ndefineSeed(190, 1, {}, DeckLayoutPanel$DeckAnimateCommand$1_0);\nfunction $add_1(this$static, w){\n  if (this$static.getWidget()) {\n    throw new IllegalStateException_1('SimplePanel can only contain one child widget');\n  }\n  this$static.setWidget(w);\n}\n\nfunction $remove_3(this$static, w){\n  if (this$static.widget != w) {\n    return false;\n  }\n  try {\n    $setParent(w, null);\n  }\n   finally {\n    $removeChild(this$static.getContainerElement(), ($clinit_DOM() , w.element));\n    this$static.widget = null;\n  }\n  return true;\n}\n\nfunction $setWidget(this$static, w){\n  if (w == this$static.widget) {\n    return;\n  }\n  !!w && $removeFromParent_0(w);\n  !!this$static.widget && this$static.remove_0(this$static.widget);\n  this$static.widget = w;\n  if (w) {\n    $clinit_DOM();\n    $appendChild(this$static.getContainerElement(), ($clinit_PotentialElement() , $resolve($getElement(this$static.widget))));\n    $setParent(w, this$static);\n  }\n}\n\nfunction SimplePanel_0(){\n  SimplePanel_1.call(this, ($clinit_DOM() , $doc.createElement('div')));\n}\n\nfunction SimplePanel_1(elem){\n  $setElement_0(this, ($clinit_DOM() , elem));\n}\n\ndefineSeed(193, 175, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), SimplePanel_0);\n_.getContainerElement = function getContainerElement(){\n  return $clinit_DOM() , this.element;\n}\n;\n_.getWidget = function getWidget(){\n  return this.widget;\n}\n;\n_.iterator = function iterator_1(){\n  return new SimplePanel$1_0(this);\n}\n;\n_.remove_0 = function remove_2(w){\n  return $remove_3(this, w);\n}\n;\n_.setWidget = function setWidget(w){\n  $setWidget(this, w);\n}\n;\nfunction $eventTargetsPopup(this$static, event_0){\n  var target;\n  target = event_0.target;\n  if (is_0(target)) {\n    return isOrHasChildImpl(($clinit_DOM() , this$static.element), target);\n  }\n  return false;\n}\n\nfunction $getOffsetHeight(this$static){\n  return $getPropertyInt(($clinit_DOM() , this$static.element), 'offsetHeight');\n}\n\nfunction $getOffsetWidth(this$static){\n  return $getPropertyInt(($clinit_DOM() , this$static.element), 'offsetWidth');\n}\n\nfunction $hide(this$static){\n  if (!this$static.showing) {\n    return;\n  }\n  $setState(this$static.resizeAnimation, false, false);\n  fire_1(this$static);\n}\n\nfunction $maybeUpdateSize(this$static){\n  var w;\n  w = this$static.widget;\n  if (w) {\n    this$static.desiredHeight != null && w.setHeight_0(this$static.desiredHeight);\n    this$static.desiredWidth != null && w.setWidth_0(this$static.desiredWidth);\n  }\n}\n\nfunction $previewNativeEvent(this$static, event_0){\n  var eventTargetsPopupOrPartner, nativeEvent, target, type_0;\n  if (event_0.isCanceled || !this$static.previewAllNativeEvents && event_0.isConsumed) {\n    this$static.modal && (event_0.isCanceled = true);\n    return;\n  }\n  this$static.onPreviewNativeEvent(event_0);\n  if (event_0.isCanceled) {\n    return;\n  }\n  nativeEvent = event_0.nativeEvent;\n  eventTargetsPopupOrPartner = $eventTargetsPopup(this$static, nativeEvent);\n  eventTargetsPopupOrPartner && (event_0.isConsumed = true);\n  this$static.modal && (event_0.isCanceled = true);\n  type_0 = ($clinit_DOM() , $eventGetTypeInt(nativeEvent.type));\n  switch (type_0) {\n    case 512:\n    case 256:\n    case 128:\n      {\n        $eventGetKeyCode(nativeEvent) & 65535;\n        ($eventGetShiftKey(nativeEvent)?1:0) | ($eventGetMetaKey(nativeEvent)?8:0) | ($eventGetCtrlKey(nativeEvent)?2:0) | ($eventGetAltKey(nativeEvent)?4:0);\n        return;\n      }\n\n    case 4:\n    case 1048576:\n      if (sCaptureElem) {\n        event_0.isConsumed = true;\n        return;\n      }\n\n      if (!eventTargetsPopupOrPartner && this$static.autoHide) {\n        this$static.hide(true);\n        return;\n      }\n\n      break;\n    case 8:\n    case 64:\n    case 1:\n    case 2:\n    case 4194304:\n      {\n        if (sCaptureElem) {\n          event_0.isConsumed = true;\n          return;\n        }\n        break;\n      }\n\n    case 2048:\n      {\n        target = nativeEvent.target;\n        if (this$static.modal && !eventTargetsPopupOrPartner && !!target) {\n          target.blur && target != $doc.body && target.blur();\n          event_0.isCanceled = true;\n          return;\n        }\n        break;\n      }\n\n  }\n}\n\nfunction $setPopupPosition(this$static, left, top_0){\n  var elem;\n  this$static.leftPosition = left;\n  this$static.topPosition = top_0;\n  left -= 0;\n  top_0 -= 0;\n  elem = ($clinit_DOM() , this$static.element);\n  elem.style['left'] = left + ($clinit_Style$Unit() , 'px');\n  elem.style['top'] = top_0 + 'px';\n}\n\nfunction $setWidget_0(this$static, w){\n  $setWidget(this$static, w);\n  $maybeUpdateSize(this$static);\n}\n\nfunction $show(this$static){\n  if (this$static.showing) {\n    return;\n  }\n   else \n    this$static.attached && $removeFromParent_0(this$static);\n  $setState(this$static.resizeAnimation, true, false);\n}\n\nfunction $updateHandlers(this$static){\n  if (this$static.nativePreviewHandlerRegistration) {\n    $removeHandler(this$static.nativePreviewHandlerRegistration.real);\n    this$static.nativePreviewHandlerRegistration = null;\n  }\n  if (this$static.historyHandlerRegistration) {\n    $removeHandler(this$static.historyHandlerRegistration.real);\n    this$static.historyHandlerRegistration = null;\n  }\n  if (this$static.showing) {\n    this$static.nativePreviewHandlerRegistration = addNativePreviewHandler(new PopupPanel$3_0(this$static));\n    this$static.historyHandlerRegistration = addValueChangeHandler(new PopupPanel$4_0(this$static));\n  }\n}\n\ndefineSeed(192, 193, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.getContainerElement = function getContainerElement_0(){\n  return $clinit_DOM() , $getFirstChildElement(this.element);\n}\n;\n_.getStyleElement = function getStyleElement_0(){\n  return $getParentElement(($clinit_DOM() , $getFirstChildElement(this.element)));\n}\n;\n_.hide = function hide(autoClosed){\n  $hide(this);\n}\n;\n_.onPreviewNativeEvent = function onPreviewNativeEvent(event_0){\n  event_0.isFirstHandler && (event_0.nativeEvent , false) && (event_0.isCanceled = true);\n}\n;\n_.onUnload = function onUnload_1(){\n  this.showing && $setState(this.resizeAnimation, false, true);\n}\n;\n_.setHeight_0 = function setHeight_0(height){\n  this.desiredHeight = height;\n  $maybeUpdateSize(this);\n  height.length == 0 && (this.desiredHeight = null);\n}\n;\n_.setVisible = function setVisible_1(visible){\n  ($clinit_DOM() , this.element).style['visibility'] = visible?'visible':'hidden';\n}\n;\n_.setWidget = function setWidget_0(w){\n  $setWidget_0(this, w);\n}\n;\n_.setWidth_0 = function setWidth_0(width_0){\n  this.desiredWidth = width_0;\n  $maybeUpdateSize(this);\n  width_0.length == 0 && (this.desiredWidth = null);\n}\n;\n_.autoHide = false;\n_.autoHideOnHistoryEvents = false;\n_.isGlassEnabled = false;\n_.leftPosition = 0;\n_.modal = false;\n_.previewAllNativeEvents = false;\n_.showing = false;\n_.topPosition = 0;\ndefineSeed(191, 192, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.doAttachChildren = function doAttachChildren_1(){\n  $onAttach(this.decPanel);\n}\n;\n_.doDetachChildren = function doDetachChildren_1(){\n  $onDetach(this.decPanel);\n}\n;\n_.getWidget = function getWidget_0(){\n  return this.decPanel.widget;\n}\n;\n_.iterator = function iterator_2(){\n  return new SimplePanel$1_0(this.decPanel);\n}\n;\n_.remove_0 = function remove_3(w){\n  return $remove_3(this.decPanel, w);\n}\n;\n_.setWidget = function setWidget_1(w){\n  $setWidget(this.decPanel, w);\n  $maybeUpdateSize(this);\n}\n;\nfunction $getCellElement(this$static){\n  var td, tr;\n  tr = ($clinit_DOM() , $getChild(this$static.tbody, 0));\n  td = $getChild(tr, 1);\n  return $getFirstChildElement(td);\n}\n\nfunction DecoratorPanel_0(rowStyles){\n  var i, row, table, trElem;\n  SimplePanel_1.call(this, ($clinit_DOM() , $doc.createElement('table')));\n  table = this.element;\n  this.tbody = $doc.createElement('tbody');\n  appendChild(table, this.tbody);\n  $setPropertyInt(table, 'cellSpacing', 0);\n  $setPropertyInt(table, 'cellPadding', 0);\n  for (i = 0; i < rowStyles.length; i++) {\n    row = (trElem = $doc.createElement('tr') , $setClassName(trElem, rowStyles[i]) , appendChild(trElem, createTD(rowStyles[i] + 'Left')) , appendChild(trElem, createTD(rowStyles[i] + 'Center')) , appendChild(trElem, createTD(rowStyles[i] + 'Right')) , trElem);\n    appendChild(this.tbody, row);\n    i == 1 && (this.containerElem = $getFirstChildElement($getChild(row, 1)));\n  }\n  $setClassName(this.element, 'gwt-DecoratorPanel');\n}\n\nfunction createTD(styleName){\n  var inner, tdElem;\n  tdElem = ($clinit_DOM() , $doc.createElement('td'));\n  inner = $doc.createElement('div');\n  $appendChild(tdElem, ($clinit_PotentialElement() , $resolve(inner)));\n  $setClassName(tdElem, styleName);\n  $setClassName(inner, styleName + 'Inner');\n  return tdElem;\n}\n\ndefineSeed(194, 193, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), DecoratorPanel_0);\n_.getContainerElement = function getContainerElement_1(){\n  return $clinit_DOM() , this.containerElem;\n}\n;\nfunction $beginDragging(this$static, event_0){\n  $onMouseDown(this$static, (this$static.caption , $getX(event_0)), $getY(event_0));\n}\n\nfunction $continueDragging(this$static, event_0){\n  $onMouseMove(this$static, (this$static.caption , $getX(event_0)), $getY(event_0));\n}\n\nfunction $endDragging(this$static, event_0){\n  $onMouseUp(this$static, (this$static.caption , $getX(event_0) , $getY(event_0)));\n}\n\nfunction $hide_0(this$static, autoClosed){\n  if (this$static.resizeHandlerRegistration) {\n    $removeHandler(this$static.resizeHandlerRegistration.real);\n    this$static.resizeHandlerRegistration = null;\n  }\n  $hide(this$static);\n}\n\nfunction $isCaptionEvent(this$static, event_0){\n  var target;\n  target = event_0.target;\n  if (is_0(target)) {\n    return isOrHasChildImpl($getParentElement(($clinit_DOM() , $getCellElement(this$static.decPanel))), target);\n  }\n  return false;\n}\n\nfunction $onMouseDown(this$static, x_0, y_0){\n  if (!($clinit_DOM() , $clinit_DOM() , sCaptureElem)) {\n    this$static.dragging = true;\n    setCapture(this$static.element);\n    this$static.dragStartX = x_0;\n    this$static.dragStartY = y_0;\n  }\n}\n\nfunction $onMouseMove(this$static, x_0, y_0){\n  var absX, absY;\n  if (this$static.dragging) {\n    absX = x_0 + $getAbsoluteLeft(($clinit_DOM() , this$static.element));\n    absY = y_0 + ($getBoundingClientRectTop(this$static.element) + $wnd.pageYOffset | 0);\n    if (absX < this$static.clientLeft || absX >= this$static.windowWidth || absY < this$static.clientTop) {\n      return;\n    }\n    $setPopupPosition(this$static, absX - this$static.dragStartX, absY - this$static.dragStartY);\n  }\n}\n\nfunction $onMouseUp(this$static){\n  this$static.dragging = false;\n  releaseCapture(($clinit_DOM() , this$static.element));\n}\n\nfunction DialogBox_0(){\n  DialogBox_1.call(this, new DialogBox$CaptionImpl_0);\n}\n\nfunction DialogBox_1(captionWidget){\n  var mouseHandler, td, rowStyles;\n  SimplePanel_0.call(this);\n  this.glassResizer = new PopupPanel$1_0;\n  this.leftPosition = -1;\n  this.resizeAnimation = new PopupPanel$ResizeAnimation_0(this);\n  this.topPosition = -1;\n  $appendChild(($clinit_DOM() , this.element), $doc.createElement('div'));\n  $setPopupPosition(this, 0, 0);\n  $getParentElement($getFirstChildElement(this.element)).className = 'gwt-PopupPanel';\n  $getFirstChildElement(this.element).className = 'popupContent';\n  this.autoHide = false;\n  this.autoHideOnHistoryEvents = false;\n  this.modal = true;\n  rowStyles = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, ['dialogTop', 'dialogMiddle', 'dialogBottom']);\n  this.decPanel = new DecoratorPanel_0(rowStyles);\n  $setStyleName(this.decPanel, '');\n  setStylePrimaryName($getParentElement($getFirstChildElement(this.element)), 'gwt-DecoratedPopupPanel');\n  $setWidget_0(this, this.decPanel);\n  setStyleName($getFirstChildElement(this.element), 'popupContent', false);\n  setStyleName(this.decPanel.containerElem, 'dialogContent', true);\n  $removeFromParent_0(captionWidget);\n  this.caption = captionWidget;\n  td = $getCellElement(this.decPanel);\n  appendChild(td, $getElement(this.caption));\n  $adopt(this, this.caption);\n  $getParentElement($getFirstChildElement(this.element)).className = 'gwt-DialogBox';\n  this.windowWidth = $getClientWidth($doc);\n  this.clientLeft = 0;\n  this.clientTop = 0;\n  mouseHandler = new DialogBox$MouseHandler_0(this);\n  $addDomHandler(this, mouseHandler, ($clinit_MouseDownEvent() , $clinit_MouseDownEvent() , TYPE_1));\n  $addDomHandler(this, mouseHandler, ($clinit_MouseUpEvent() , $clinit_MouseUpEvent() , TYPE_5));\n  $addDomHandler(this, mouseHandler, ($clinit_MouseMoveEvent() , $clinit_MouseMoveEvent() , TYPE_2));\n  $addDomHandler(this, mouseHandler, ($clinit_MouseOverEvent() , $clinit_MouseOverEvent() , TYPE_4));\n  $addDomHandler(this, mouseHandler, ($clinit_MouseOutEvent() , $clinit_MouseOutEvent() , TYPE_3));\n}\n\ndefineSeed(195, 191, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), DialogBox_0);\n_.doAttachChildren = function doAttachChildren_2(){\n  try {\n    $onAttach(this.decPanel);\n  }\n   finally {\n    $onAttach(this.caption);\n  }\n}\n;\n_.doDetachChildren = function doDetachChildren_2(){\n  try {\n    $onDetach(this.decPanel);\n  }\n   finally {\n    $onDetach(this.caption);\n  }\n}\n;\n_.hide = function hide_0(autoClosed){\n  $hide_0(this, autoClosed);\n}\n;\n_.onBrowserEvent = function onBrowserEvent_1(event_0){\n  switch ($clinit_DOM() , $eventGetTypeInt(event_0.type)) {\n    case 4:\n    case 8:\n    case 64:\n    case 16:\n    case 32:\n      if (!this.dragging && !$isCaptionEvent(this, event_0)) {\n        return;\n      }\n\n  }\n  $onBrowserEvent(this, event_0);\n}\n;\n_.onPreviewNativeEvent = function onPreviewNativeEvent_0(event_0){\n  var nativeEvent;\n  nativeEvent = event_0.nativeEvent;\n  !event_0.isCanceled && $getTypeInt(event_0.nativeEvent) == 4 && $isCaptionEvent(this, nativeEvent) && $eventPreventDefault(nativeEvent);\n  event_0.isFirstHandler && (event_0.nativeEvent , false) && (event_0.isCanceled = true);\n}\n;\n_.clientLeft = 0;\n_.clientTop = 0;\n_.dragStartX = 0;\n_.dragStartY = 0;\n_.dragging = false;\n_.windowWidth = 0;\nfunction DialogBox$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(196, 1, makeCastMap([Q$ResizeHandler, Q$EventHandler]), DialogBox$1_0);\n_.onResize = function onResize_1(event_0){\n  this.this$0.windowWidth = event_0.width_0;\n}\n;\nfunction LabelBase_0(element){\n  $setElement_0(this, ($clinit_DOM() , element));\n  this.directionalTextHelper = new DirectionalTextHelper_0(this.element);\n}\n\ndefineSeed(200, 176, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction Label_0(element){\n  LabelBase_0.call(this, element, $equalsIgnoreCase('span', element.tagName));\n}\n\nfunction Label_1(text_0){\n  LabelBase_0.call(this, $doc.createElement('div'));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-Label');\n  $setTextOrHtml(this.directionalTextHelper, text_0, false);\n}\n\ndefineSeed(199, 200, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Label_1);\nfunction HTML_0(){\n  Label_0.call(this, $doc.createElement('div'));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-HTML');\n}\n\nfunction HTML_1(html){\n  HTML_0.call(this);\n  $setTextOrHtml(this.directionalTextHelper, html, true);\n}\n\ndefineSeed(198, 199, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), HTML_1);\nfunction DialogBox$CaptionImpl_0(){\n  HTML_0.call(this);\n  $setClassName(($clinit_DOM() , this.element), 'Caption');\n}\n\ndefineSeed(197, 198, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), DialogBox$CaptionImpl_0);\nfunction DialogBox$MouseHandler_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(201, 1, makeCastMap([Q$MouseDownHandler, Q$MouseMoveHandler, Q$MouseOutHandler, Q$MouseOverHandler, Q$MouseUpHandler, Q$EventHandler, Q$DialogBox$MouseHandler]), DialogBox$MouseHandler_0);\nfunction $setTextOrHtml(this$static, content_0, isHtml){\n  isHtml?$setInnerHTML(this$static.element, content_0):$setInnerText(this$static.element, content_0);\n  if (this$static.textDir != this$static.initialElementDir) {\n    this$static.textDir = this$static.initialElementDir;\n    setDirectionOnElement(this$static.element, this$static.initialElementDir);\n  }\n}\n\nfunction DirectionalTextHelper_0(element){\n  this.element = element;\n  this.initialElementDir = getDirectionOnElement(element);\n  this.textDir = this.initialElementDir;\n}\n\ndefineSeed(202, 1, {}, DirectionalTextHelper_0);\n",
"function $clinit_DockPanel(){\n  $clinit_DockPanel = nullMethod;\n  CENTER_0 = new DockPanel$DockLayoutConstant_0;\n  LINE_START = new DockPanel$DockLayoutConstant_0;\n  LINE_END = new DockPanel$DockLayoutConstant_0;\n  EAST = new DockPanel$DockLayoutConstant_0;\n  NORTH = new DockPanel$DockLayoutConstant_0;\n  SOUTH = new DockPanel$DockLayoutConstant_0;\n  WEST = new DockPanel$DockLayoutConstant_0;\n}\n\nfunction $add_2(this$static, widget, direction){\n  var layout;\n  if (direction == CENTER_0) {\n    if (widget == this$static.center) {\n      return;\n    }\n     else if (this$static.center) {\n      throw new IllegalArgumentException_0('Only one CENTER widget may be added');\n    }\n  }\n  $removeFromParent_0(widget);\n  $add_8(this$static.children, widget);\n  direction == CENTER_0 && (this$static.center = widget);\n  layout = new DockPanel$LayoutData_0(direction);\n  widget.layoutData = layout;\n  $setCellHorizontalAlignment_1(widget, this$static.horzAlign);\n  $setCellVerticalAlignment_1(widget, this$static.vertAlign);\n  $realizeTable(this$static);\n  $setParent(widget, this$static);\n}\n\nfunction $realizeTable(this$static){\n  var bodyElem, centerTd, child, colCount, dir_0, i, it, it0, layout, logicalLeftCol, logicalRightCol, northRow, row, rowCount, rows_0, southRow, td;\n  bodyElem = ($clinit_DOM() , this$static.body_0);\n  while ($getChildCount(bodyElem) > 0) {\n    $removeChild(bodyElem, $getChild(bodyElem, 0));\n  }\n  rowCount = 1;\n  colCount = 1;\n  for (it0 = new WidgetCollection$WidgetIterator_0(this$static.children); it0.index_0 < it0.this$0.size_0;) {\n    child = $next_0(it0);\n    dir_0 = dynamicCast(child.layoutData, Q$DockPanel$LayoutData).direction_0;\n    dir_0 == NORTH || dir_0 == SOUTH?++rowCount:(dir_0 == EAST || dir_0 == WEST || dir_0 == LINE_START || dir_0 == LINE_END) && ++colCount;\n  }\n  rows_0 = initDim(_3Lcom_google_gwt_user_client_ui_DockPanel$TmpRow_2_classLit, makeCastMap([Q$Serializable]), Q$DockPanel$TmpRow, rowCount, 0);\n  for (i = 0; i < rowCount; ++i) {\n    rows_0[i] = new DockPanel$TmpRow_0;\n    rows_0[i].tr = $doc.createElement('tr');\n    $appendChild(bodyElem, ($clinit_PotentialElement() , $resolve(rows_0[i].tr)));\n  }\n  logicalLeftCol = 0;\n  logicalRightCol = colCount - 1;\n  northRow = 0;\n  southRow = rowCount - 1;\n  centerTd = null;\n  for (it = new WidgetCollection$WidgetIterator_0(this$static.children); it.index_0 < it.this$0.size_0;) {\n    child = $next_0(it);\n    layout = dynamicCast(child.layoutData, Q$DockPanel$LayoutData);\n    td = $doc.createElement('td');\n    layout.td = td;\n    $setPropertyString(layout.td, 'align', layout.hAlign);\n    $setPropertyImpl(layout.td.style, 'verticalAlign', layout.vAlign);\n    $setPropertyString(layout.td, 'width', '');\n    $setPropertyString(layout.td, 'height', '');\n    if (layout.direction_0 == NORTH) {\n      insertChild(rows_0[northRow].tr, td, rows_0[northRow].center);\n      $appendChild(td, ($clinit_PotentialElement() , $resolve(child.element)));\n      $setPropertyInt(td, 'colSpan', logicalRightCol - logicalLeftCol + 1);\n      ++northRow;\n    }\n     else if (layout.direction_0 == SOUTH) {\n      insertChild(rows_0[southRow].tr, td, rows_0[southRow].center);\n      $appendChild(td, ($clinit_PotentialElement() , $resolve(child.element)));\n      $setPropertyInt(td, 'colSpan', logicalRightCol - logicalLeftCol + 1);\n      --southRow;\n    }\n     else if (layout.direction_0 == CENTER_0) {\n      centerTd = td;\n    }\n     else if ($shouldAddToLogicalLeftOfTable(layout.direction_0)) {\n      row = rows_0[northRow];\n      insertChild(row.tr, td, row.center++);\n      $appendChild(td, ($clinit_PotentialElement() , $resolve(child.element)));\n      $setPropertyInt(td, 'rowSpan', southRow - northRow + 1);\n      ++logicalLeftCol;\n    }\n     else if ($shouldAddToLogicalRightOfTable(layout.direction_0)) {\n      row = rows_0[northRow];\n      insertChild(row.tr, td, row.center);\n      $appendChild(td, ($clinit_PotentialElement() , $resolve(child.element)));\n      $setPropertyInt(td, 'rowSpan', southRow - northRow + 1);\n      --logicalRightCol;\n    }\n  }\n  if (this$static.center) {\n    row = rows_0[northRow];\n    insertChild(row.tr, centerTd, row.center);\n    $appendChild(centerTd, ($clinit_PotentialElement() , $resolve($getElement(this$static.center))));\n  }\n}\n\nfunction $setCellHorizontalAlignment_1(w, align_0){\n  var data_0;\n  data_0 = dynamicCast(w.layoutData, Q$DockPanel$LayoutData);\n  data_0.hAlign = align_0.textAlignString;\n  !!data_0.td && $setCellHorizontalAlignment(data_0.td, align_0);\n}\n\nfunction $setCellVerticalAlignment_1(w, align_0){\n  var data_0;\n  data_0 = dynamicCast(w.layoutData, Q$DockPanel$LayoutData);\n  data_0.vAlign = align_0.verticalAlignString;\n  !!data_0.td && $setCellVerticalAlignment(data_0.td, align_0);\n}\n\nfunction $setHorizontalAlignment(this$static, align_0){\n  this$static.horzAlign = align_0;\n}\n\nfunction $shouldAddToLogicalLeftOfTable(widgetDirection){\n  if (widgetDirection == LINE_START) {\n    return true;\n  }\n  return widgetDirection == WEST;\n}\n\nfunction $shouldAddToLogicalRightOfTable(widgetDirection){\n  if (widgetDirection == LINE_END) {\n    return true;\n  }\n  return widgetDirection == EAST;\n}\n\nfunction DockPanel_0(){\n  $clinit_DockPanel();\n  CellPanel_0.call(this);\n  this.horzAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT);\n  this.vertAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP);\n  $setPropertyInt(($clinit_DOM() , this.table), 'cellSpacing', 0);\n  $setPropertyInt(this.table, 'cellPadding', 0);\n}\n\ndefineSeed(203, 184, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), DockPanel_0);\n_.remove_0 = function remove_4(w){\n  var removed;\n  removed = $remove_0(this, w);\n  if (removed) {\n    w == this.center && (this.center = null);\n    $realizeTable(this);\n  }\n  return removed;\n}\n;\nvar CENTER_0, EAST, LINE_END, LINE_START, NORTH, SOUTH, WEST;\nfunction DockPanel$DockLayoutConstant_0(){\n}\n\ndefineSeed(204, 1, {}, DockPanel$DockLayoutConstant_0);\nfunction DockPanel$LayoutData_0(dir_0){\n  this.hAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT).textAlignString;\n  this.vAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP).verticalAlignString;\n  this.direction_0 = dir_0;\n}\n\ndefineSeed(205, 1, makeCastMap([Q$DockPanel$LayoutData]), DockPanel$LayoutData_0);\nfunction DockPanel$TmpRow_0(){\n}\n\ndefineSeed(206, 1, makeCastMap([Q$DockPanel$TmpRow]), DockPanel$TmpRow_0);\n_.center = 0;\nfunction $add_3(this$static, w){\n  $add(this$static, w, ($clinit_DOM() , this$static.element));\n}\n\nfunction $insert_2(this$static, w, beforeIndex){\n  $insert(this$static, w, ($clinit_DOM() , this$static.element), beforeIndex);\n}\n\nfunction FlowPanel_0(){\n  ComplexPanel_0.call(this);\n  $setElement_0(this, ($clinit_DOM() , $doc.createElement('div')));\n}\n\ndefineSeed(207, 174, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), FlowPanel_0);\nfunction $clinit_HasHorizontalAlignment(){\n  $clinit_HasHorizontalAlignment = nullMethod;\n  ALIGN_CENTER = new HasHorizontalAlignment$HorizontalAlignmentConstant_0(($clinit_Style$TextAlign() , 'center'));\n  new HasHorizontalAlignment$HorizontalAlignmentConstant_0('justify');\n  ALIGN_LEFT = new HasHorizontalAlignment$HorizontalAlignmentConstant_0('left');\n  ALIGN_RIGHT = new HasHorizontalAlignment$HorizontalAlignmentConstant_0('right');\n  ALIGN_LOCALE_START = ALIGN_LEFT;\n  ALIGN_DEFAULT = ALIGN_LOCALE_START;\n}\n\nvar ALIGN_CENTER, ALIGN_DEFAULT, ALIGN_LEFT, ALIGN_LOCALE_START, ALIGN_RIGHT;\ndefineSeed(208, 1, {});\nfunction HasHorizontalAlignment$HorizontalAlignmentConstant_0(textAlignString){\n  this.textAlignString = textAlignString;\n}\n\ndefineSeed(209, 208, {}, HasHorizontalAlignment$HorizontalAlignmentConstant_0);\nfunction $clinit_HasVerticalAlignment(){\n  $clinit_HasVerticalAlignment = nullMethod;\n  new HasVerticalAlignment$VerticalAlignmentConstant_0('bottom');\n  new HasVerticalAlignment$VerticalAlignmentConstant_0('middle');\n  ALIGN_TOP = new HasVerticalAlignment$VerticalAlignmentConstant_0('top');\n}\n\nvar ALIGN_TOP;\nfunction HasVerticalAlignment$VerticalAlignmentConstant_0(verticalAlignString){\n  this.verticalAlignString = verticalAlignString;\n}\n\ndefineSeed(210, 1, {}, HasVerticalAlignment$VerticalAlignmentConstant_0);\nfunction $add_4(this$static, w){\n  var td, td_0;\n  td = (td_0 = ($clinit_DOM() , $doc.createElement('td')) , $setCellHorizontalAlignment(td_0, this$static.horzAlign) , $setCellVerticalAlignment(td_0, this$static.vertAlign) , td_0);\n  $appendChild(this$static.tableRow, ($clinit_PotentialElement() , $resolve(td)));\n  $add(this$static, w, td);\n}\n\nfunction HorizontalPanel_0(){\n  CellPanel_0.call(this);\n  this.horzAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT);\n  this.vertAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP);\n  this.tableRow = ($clinit_DOM() , $doc.createElement('tr'));\n  $appendChild(this.body_0, ($clinit_PotentialElement() , $resolve(this.tableRow)));\n  $setPropertyString(this.table, 'cellSpacing', '0');\n  $setPropertyString(this.table, 'cellPadding', '0');\n}\n\ndefineSeed(211, 184, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), HorizontalPanel_0);\n_.remove_0 = function remove_5(w){\n  var removed, td;\n  td = ($clinit_DOM() , $clinit_DOM() , $getParentElement(w.element));\n  removed = $remove_0(this, w);\n  removed && $removeChild(this.tableRow, td);\n  return removed;\n}\n;\nfunction $clinit_Image(){\n  $clinit_Image = nullMethod;\n  new HashMap_0;\n}\n\nfunction $changeState(this$static, newState){\n  this$static.state = newState;\n}\n\nfunction Image_1(url_0){\n  $changeState(this, new Image$UnclippedState_0(this, url_0));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-Image');\n}\n\nfunction Image_2(url_0){\n  $clinit_Image();\n  Image_1.call(this, ($clinit_UriUtils() , new SafeUriString_0(url_0)));\n}\n\ndefineSeed(212, 176, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), Image_2);\n_.onBrowserEvent = function onBrowserEvent_2(event_0){\n  ($clinit_DOM() , $eventGetTypeInt(event_0.type)) == 32768 && !!this.state && $setPropertyString(this.element, '__gwtLastUnhandledEvent', '');\n  $onBrowserEvent(this, event_0);\n}\n;\n_.onLoad = function onLoad_1(){\n  $onLoad(this.state, this);\n}\n;\nfunction $onLoad(this$static, image){\n  var unhandledEvent;\n  unhandledEvent = $getPropertyString(($clinit_DOM() , image.element), '__gwtLastUnhandledEvent');\n  $equals('load', unhandledEvent) && (this$static.syntheticEventCommand = new Image$State$1_0(this$static, image) , $scheduleDeferred(($clinit_SchedulerImpl() , INSTANCE_0), this$static.syntheticEventCommand));\n}\n\ndefineSeed(213, 1, {});\n_.syntheticEventCommand = null;\nfunction Image$State$1_0(this$1, val$image){\n  this.this$1 = this$1;\n  this.val$image = val$image;\n}\n\ndefineSeed(214, 1, {}, Image$State$1_0);\n_.execute_0 = function execute_8(){\n  var evt, evt_0;\n  if (this.val$image.state != this.this$1 || this != this.this$1.syntheticEventCommand) {\n    return;\n  }\n  this.this$1.syntheticEventCommand = null;\n  if (!this.val$image.attached) {\n    $setPropertyString($getImageElement(this.val$image), '__gwtLastUnhandledEvent', 'load');\n    return;\n  }\n  evt = (evt_0 = $doc.createEvent('HTMLEvents') , evt_0.initEvent('load', false, false) , evt_0);\n  $dispatchEvent($getImageElement(this.val$image), evt);\n}\n;\nfunction $getImageElement(image){\n  return $clinit_DOM() , image.element;\n}\n\nfunction Image$UnclippedState_0(image, url_0){\n  $replaceElement(image, $doc.createElement('img'));\n  sinkEvents(($clinit_DOM() , image.element), 32768);\n  image.eventsToSink == -1?sinkEvents(image.element, 133398655 | (image.element.__eventBits || 0)):(image.eventsToSink |= 133398655);\n  !!image.state && $setPropertyString(image.element, '__gwtLastUnhandledEvent', '');\n  $imgSetSrc(image.element, url_0.uri_0);\n}\n\ndefineSeed(215, 213, {}, Image$UnclippedState_0);\nfunction $onAnimationComplete(this$static){\n  !!this$static.this$0.callback && $doAfterLayout(this$static.this$0.callback.this$1.this$0);\n}\n\nfunction LayoutCommand$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(216, 1, {}, LayoutCommand$1_0);\nfunction $add_5(this$static, widget){\n  $insert_3(this$static, widget, this$static.children.size_0);\n}\n\nfunction $insert_3(this$static, widget, beforeIndex){\n  var layer;\n  $removeFromParent_0(widget);\n  $insert_6(this$static.children, widget, beforeIndex);\n  layer = $attachChild(this$static.layout, ($clinit_DOM() , widget.element), null, widget);\n  widget.layoutData = layer;\n  $setParent(widget, this$static);\n  this$static.layoutCmd.schedule(0, null);\n}\n\nfunction $onDetach_0(this$static){\n  $onDetach(this$static);\n  $removeLayerRefs(this$static.layout.parentElem);\n}\n\nfunction $onResize(this$static){\n  var child, child$iterator;\n  for (child$iterator = new WidgetCollection$WidgetIterator_0(this$static.children); child$iterator.index_0 < child$iterator.this$0.size_0;) {\n    child = $next_0(child$iterator);\n    instanceOf(child, Q$RequiresResize) && dynamicCast(child, Q$RequiresResize).onResize_0();\n  }\n}\n\nfunction $setWidgetLeftRight(this$static, child, leftUnit, rightUnit){\n  $setLeftRight(dynamicCast(child.layoutData, Q$Layout$Layer), leftUnit, rightUnit);\n  this$static.layoutCmd.schedule(0, null);\n}\n\nfunction $setWidgetTopBottom(this$static, child, topUnit, bottomUnit){\n  $setTopBottom(dynamicCast(child.layoutData, Q$Layout$Layer), topUnit, bottomUnit);\n  this$static.layoutCmd.schedule(0, null);\n}\n\nfunction $setWidgetTopHeight(this$static, child, topUnit, heightUnit){\n  $setTopHeight(dynamicCast(child.layoutData, Q$Layout$Layer), 0, topUnit, 2.5, heightUnit);\n  this$static.layoutCmd.schedule(0, null);\n}\n\nfunction $setWidgetVerticalPosition(this$static, child){\n  dynamicCast(child.layoutData, Q$Layout$Layer).vPos = 1;\n  this$static.layoutCmd.schedule(0, null);\n}\n\nfunction LayoutPanel_0(){\n  ComplexPanel_0.call(this);\n  $setElement(this, $doc.createElement('div'));\n  this.layout = new Layout_0(($clinit_DOM() , this.element));\n  this.layoutCmd = new LayoutCommand_0(this.layout);\n}\n\ndefineSeed(217, 174, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RequiresResize, Q$UIObject, Q$Widget]), LayoutPanel_0);\n_.onAttach = function onAttach_3(){\n  $onAttach(this);\n}\n;\n_.onDetach = function onDetach_2(){\n  $onDetach_0(this);\n}\n;\n_.onResize_0 = function onResize_2(){\n  $onResize(this);\n}\n;\n_.remove_0 = function remove_6(w){\n  var removed;\n  removed = $remove_0(this, w);\n  removed && $removeChild_0(this.layout, dynamicCast(w.layoutData, Q$Layout$Layer));\n  return removed;\n}\n;\nfunction $checkIndex(this$static, index_0){\n  if (index_0 < 0 || index_0 >= ($clinit_DOM() , this$static.element).options.length) {\n    throw new IndexOutOfBoundsException_0;\n  }\n}\n\nfunction $getItemText(this$static, index_0){\n  $checkIndex(this$static, index_0);\n  return $getOptionText(($clinit_DOM() , this$static.element).options[index_0]);\n}\n\nfunction $getOptionText(option){\n  var text_0;\n  text_0 = option.text;\n  option.hasAttribute('bidiwrapped') && text_0.length > 1 && (text_0 = $substring_0(text_0, 1, text_0.length - 1));\n  return text_0;\n}\n\nfunction $getSelectElement(this$static){\n  return $clinit_DOM() , this$static.element;\n}\n\nfunction $insertItem(this$static, item_0){\n  $insertItem_0(this$static, item_0, item_0, -1);\n}\n\nfunction $insertItem_0(this$static, item_0, value_0, index_0){\n  var before, itemCount, option, select;\n  select = ($clinit_DOM() , this$static.element);\n  option = $doc.createElement('option');\n  option.text = item_0;\n  option.removeAttribute('bidiwrapped');\n  option.value = value_0;\n  itemCount = select.options.length;\n  (index_0 < 0 || index_0 > itemCount) && (index_0 = itemCount);\n  if (index_0 == itemCount) {\n    $selectAdd(select, option, null);\n  }\n   else {\n    before = select.options[index_0];\n    $selectAdd(select, option, before);\n  }\n}\n\nfunction $removeItem_1(this$static, index_0){\n  $checkIndex(this$static, index_0);\n  $selectRemoveOption(($clinit_DOM() , this$static.element), index_0);\n}\n\nfunction ListBox_0(){\n  FocusWidget_0.call(this, $doc.createElement('select'));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-ListBox');\n}\n\ndefineSeed(218, 183, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), ListBox_0);\nfunction ValueBoxBase_0(elem){\n  FocusWidget_0.call(this, elem);\n  new AutoDirectionHandler_0;\n}\n\ndefineSeed(222, 183, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\n_.onBrowserEvent = function onBrowserEvent_3(event_0){\n  var type_0;\n  type_0 = ($clinit_DOM() , $eventGetTypeInt(event_0.type));\n  (type_0 & 896) != 0?$onBrowserEvent(this, event_0):$onBrowserEvent(this, event_0);\n}\n;\n_.onLoad = function onLoad_2(){\n}\n;\nfunction $clinit_TextBoxBase(){\n  $clinit_TextBoxBase = nullMethod;\n  $clinit_ValueBoxBase$TextAlignment();\n}\n\nfunction TextBoxBase_0(elem){\n  ValueBoxBase_0.call(this, elem, (!INSTANCE_2 && (INSTANCE_2 = new PassthroughRenderer_0) , !INSTANCE_1 && (INSTANCE_1 = new PassthroughParser_0)));\n}\n\ndefineSeed(221, 222, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]));\nfunction TextBox_0(){\n  $clinit_TextBoxBase();\n  TextBox_1.call(this, $createInputElement($doc, 'text'), 'gwt-TextBox');\n}\n\nfunction TextBox_1(element, styleName){\n  TextBoxBase_0.call(this, element);\n  styleName != null && $setClassName(($clinit_DOM() , this.element), styleName);\n}\n\ndefineSeed(220, 221, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), TextBox_0);\nfunction PasswordTextBox_0(){\n  $clinit_TextBoxBase();\n  TextBox_1.call(this, $createInputElement($doc, 'password'), 'gwt-PasswordTextBox');\n}\n\ndefineSeed(219, 220, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), PasswordTextBox_0);\nfunction $onResize_0(){\n  var height, style, width_0, winHeight, winWidth;\n  style = null.nullMethod();\n  winWidth = $getClientWidth($doc);\n  winHeight = $getClientHeight($doc);\n  $setPropertyImpl(style, 'display', ($clinit_Style$Display() , 'none'));\n  style['width'] = 0 + ($clinit_Style$Unit() , 'px');\n  style['height'] = '0px';\n  width_0 = $getScrollWidth($doc);\n  height = $getScrollHeight($doc);\n  style['width'] = (width_0 > winWidth?width_0:winWidth) + 'px';\n  style['height'] = (height > winHeight?height:winHeight) + 'px';\n  $setPropertyImpl(style, 'display', 'block');\n}\n\nfunction PopupPanel$1_0(){\n}\n\ndefineSeed(223, 1, makeCastMap([Q$ResizeHandler, Q$EventHandler]), PopupPanel$1_0);\n_.onResize = function onResize_3(event_0){\n  $onResize_0();\n}\n;\nfunction PopupPanel$3_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(224, 1, makeCastMap([Q$EventHandler, Q$Event$NativePreviewHandler]), PopupPanel$3_0);\nfunction PopupPanel$4_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(225, 1, makeCastMap([Q$ValueChangeHandler, Q$EventHandler]), PopupPanel$4_0);\nfunction $maybeShowGlass(this$static){\n  if (this$static.showing) {\n    if (this$static.curPanel.isGlassEnabled) {\n      $appendChild($doc.body, this$static.curPanel.glass);\n      this$static.resizeRegistration = addResizeHandler(this$static.curPanel.glassResizer);\n      $onResize_0();\n      this$static.glassShowing = true;\n    }\n  }\n   else if (this$static.glassShowing) {\n    $removeChild($doc.body, this$static.curPanel.glass);\n    $removeHandler(this$static.resizeRegistration.real);\n    this$static.resizeRegistration = null;\n    this$static.glassShowing = false;\n  }\n}\n\nfunction $onComplete_0(this$static){\n  if (!this$static.showing) {\n    $maybeShowGlass(this$static);\n    this$static.isUnloading || $remove_1(($clinit_RootPanel() , get_1()), this$static.curPanel);\n    $getElement(this$static.curPanel);\n  }\n  $setClip($getElement(this$static.curPanel), 'rect(auto, auto, auto, auto)');\n  $setPropertyImpl($getElement(this$static.curPanel).style, 'overflow', 'visible');\n}\n\nfunction $onInstantaneousRun(this$static){\n  $maybeShowGlass(this$static);\n  if (this$static.showing) {\n    $setPropertyImpl($getElement(this$static.curPanel).style, 'position', 'absolute');\n    this$static.curPanel.topPosition != -1 && $setPopupPosition(this$static.curPanel, this$static.curPanel.leftPosition, this$static.curPanel.topPosition);\n    $add_0(($clinit_RootPanel() , get_1()), this$static.curPanel);\n    $getElement(this$static.curPanel);\n  }\n   else {\n    this$static.isUnloading || $remove_1(($clinit_RootPanel() , get_1()), this$static.curPanel);\n    $getElement(this$static.curPanel);\n  }\n  $setPropertyImpl($getElement(this$static.curPanel).style, 'overflow', 'visible');\n}\n\nfunction $onUpdate(this$static, progress){\n  var bottom, height, left, right, top_0, width_0;\n  this$static.showing || (progress = 1 - progress);\n  top_0 = 0;\n  left = 0;\n  right = 0;\n  bottom = 0;\n  height = round_int(progress * this$static.offsetHeight_0);\n  width_0 = round_int(progress * this$static.offsetWidth_0);\n  switch (0) {\n    case 2:\n    case 0:\n      top_0 = this$static.offsetHeight_0 - height >> 1;\n      left = this$static.offsetWidth_0 - width_0 >> 1;\n      right = left + width_0;\n      bottom = top_0 + height;\n  }\n  $setClip($getElement(this$static.curPanel), 'rect(' + top_0 + 'px, ' + right + 'px, ' + bottom + 'px, ' + left + 'px)');\n}\n\nfunction $setState(this$static, showing, isUnloading){\n  this$static.isUnloading = isUnloading;\n  $cancel(this$static);\n  this$static.curPanel.showing = showing;\n  $updateHandlers(this$static.curPanel);\n  this$static.showing = showing;\n  $onInstantaneousRun(this$static);\n}\n\nfunction PopupPanel$ResizeAnimation_0(panel){\n  Animation_0.call(this);\n  this.curPanel = null;\n  this.offsetWidth_0 = -1;\n  this.curPanel = panel;\n}\n\ndefineSeed(226, 3, {}, PopupPanel$ResizeAnimation_0);\n_.onComplete = function onComplete_1(){\n  $onComplete_0(this);\n}\n;\n_.onStart = function onStart_0(){\n  this.offsetHeight_0 = $getOffsetHeight(this.curPanel);\n  this.offsetWidth_0 = $getOffsetWidth(this.curPanel);\n  $setPropertyImpl($getElement(this.curPanel).style, 'overflow', 'hidden');\n  $onUpdate(this, (1 + cos_0(3.141592653589793)) / 2);\n}\n;\n_.onUpdate = function onUpdate_0(progress){\n  $onUpdate(this, progress);\n}\n;\n_.glassShowing = false;\n_.isUnloading = false;\n_.offsetHeight_0 = 0;\n_.offsetWidth_0 = 0;\n_.showing = false;\nfunction $clinit_PotentialElement(){\n  $clinit_PotentialElement = nullMethod;\n  declareShim();\n}\n\nfunction $resolve(this$static){\n  return this$static.__gwt_resolve?this$static.__gwt_resolve():this$static;\n}\n\nfunction $setResolver(this$static, resolver){\n  this$static.__gwt_resolve = buildResolveCallback(resolver);\n}\n\nfunction buildResolveCallback(resolver){\n  return function(){\n    this.__gwt_resolve = cannotResolveTwice;\n    return resolver.resolvePotentialElement();\n  }\n  ;\n}\n\nfunction cannotResolveTwice(){\n  throw 'A PotentialElement cannot be resolved twice.';\n}\n\nfunction declareShim(){\n  var shim = function(){\n  }\n  ;\n  shim.prototype = {className:'', clientHeight:0, clientWidth:0, dir:'', getAttribute:function(name_0, value_0){\n    return this[name_0];\n  }\n  , href:'', id:'', lang:'', nodeType:1, removeAttribute:function(name_0, value_0){\n    this[name_0] = undefined;\n  }\n  , setAttribute:function(name_0, value_0){\n    this[name_0] = value_0;\n  }\n  , src:'', style:{}, title:''};\n  $wnd.GwtPotentialElementShim = shim;\n}\n\nfunction isPotential(o){\n  $clinit_PotentialElement();\n  try {\n    return !!o && !!o.__gwt_resolve;\n  }\n   catch (e) {\n    return false;\n  }\n}\n\nfunction $sinkEvents_1(this$static, eventBitsToAdd){\n  if (this$static.eventsToSink == -1) {\n    sinkEvents(this$static.inputElem, eventBitsToAdd | ($clinit_DOM() , $getEventsSunk(this$static.inputElem)));\n    sinkEvents(this$static.labelElem, eventBitsToAdd | $getEventsSunk(this$static.labelElem));\n  }\n   else {\n    this$static.eventsToSink == -1?sinkEvents(this$static.inputElem, eventBitsToAdd | ($clinit_DOM() , $getEventsSunk(this$static.inputElem))):this$static.eventsToSink == -1?sinkEvents(($clinit_DOM() , this$static.element), eventBitsToAdd | (this$static.element.__eventBits || 0)):(this$static.eventsToSink |= eventBitsToAdd);\n  }\n}\n\nfunction RadioButton_0(name_0){\n  CheckBox_1.call(this, ($clinit_DOM() , $createInputRadioElement($doc, name_0)));\n  $setClassName(this.element, 'gwt-RadioButton');\n  $sinkEvents_1(this, 1);\n  $sinkEvents_1(this, 8);\n  $sinkEvents_1(this, 4096);\n  $sinkEvents_1(this, 128);\n}\n\ndefineSeed(228, 185, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), RadioButton_0);\n_.onBrowserEvent = function onBrowserEvent_4(event_0){\n  var target;\n  switch ($clinit_DOM() , $eventGetTypeInt(event_0.type)) {\n    case 8:\n    case 4096:\n    case 128:\n      this.oldValue = this.attached?($clinit_Boolean() , $isChecked(this.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this.inputElem)?TRUE:FALSE);\n      break;\n    case 1:\n      target = event_0.target;\n      if (is_0(target) && isOrHasChildImpl(this.labelElem, target)) {\n        this.oldValue = this.attached?($clinit_Boolean() , $isChecked(this.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this.inputElem)?TRUE:FALSE);\n        return;\n      }\n\n      $onBrowserEvent(this, event_0);\n      fireIfNotEqual(this, this.oldValue, this.attached?($clinit_Boolean() , $isChecked(this.inputElem)?TRUE:FALSE):($clinit_Boolean() , $isDefaultChecked(this.inputElem)?TRUE:FALSE));\n      return;\n  }\n  $onBrowserEvent(this, event_0);\n}\n;\n_.sinkEvents = function sinkEvents_2(eventBitsToAdd){\n  $sinkEvents_1(this, eventBitsToAdd);\n}\n;\ndefineSeed(229, 186, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$RequiresResize, Q$UIObject, Q$Widget]));\n_.onResize_0 = function onResize_4(){\n  $onResize(this.widget);\n}\n;\nfunction RootLayoutPanel_0(){\n  LayoutPanel_0.call(this);\n  addResizeHandler(new RootLayoutPanel$1_0(this));\n}\n\nfunction get_0(){\n  if (!singleton_0) {\n    singleton_0 = new RootLayoutPanel_0;\n    $add_0(($clinit_RootPanel() , get_1()), singleton_0);\n  }\n  return singleton_0;\n}\n\ndefineSeed(230, 217, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RequiresResize, Q$UIObject, Q$Widget]), RootLayoutPanel_0);\n_.onLoad = function onLoad_3(){\n  $fillParent(this.layout.parentElem);\n}\n;\nvar singleton_0;\nfunction RootLayoutPanel$1_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(231, 1, makeCastMap([Q$ResizeHandler, Q$EventHandler]), RootLayoutPanel$1_0);\n_.onResize = function onResize_5(event_0){\n  $onResize(this.this$0);\n}\n;\nfunction $clinit_RootPanel(){\n  $clinit_RootPanel = nullMethod;\n  maybeDetachCommand = new RootPanel$1_0;\n  rootPanels = new HashMap_0;\n  widgetsToDetach = new HashSet_0;\n}\n\nfunction RootPanel_0(elem){\n  ComplexPanel_0.call(this);\n  $setElement_0(this, ($clinit_DOM() , elem));\n  $onAttach(this);\n}\n\nfunction detachNow(widget){\n  $clinit_RootPanel();\n  try {\n    widget.onDetach();\n  }\n   finally {\n    $remove_14(widgetsToDetach, widget);\n  }\n}\n\nfunction detachWidgets(){\n  $clinit_RootPanel();\n  try {\n    tryCommand(widgetsToDetach, maybeDetachCommand);\n  }\n   finally {\n    $clearImpl(widgetsToDetach.map_0);\n    $clearImpl(rootPanels);\n  }\n}\n\nfunction get_1(){\n  $clinit_RootPanel();\n  var rp;\n  rp = dynamicCast($get_0(rootPanels, null), Q$RootPanel);\n  if (rp) {\n    return rp;\n  }\n  rootPanels.size_0 == 0 && addCloseHandler(new RootPanel$3_0);\n  rp = new RootPanel$DefaultRootPanel_0;\n  $put(rootPanels, null, rp);\n  $add_11(widgetsToDetach, rp);\n  return rp;\n}\n\ndefineSeed(232, 173, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]));\nvar maybeDetachCommand, rootPanels, widgetsToDetach;\nfunction RootPanel$1_0(){\n}\n\ndefineSeed(233, 1, {}, RootPanel$1_0);\n_.execute_1 = function execute_9(w){\n  w.isAttached() && w.onDetach();\n}\n;\nfunction RootPanel$3_0(){\n}\n\ndefineSeed(234, 1, makeCastMap([Q$CloseHandler, Q$EventHandler]), RootPanel$3_0);\nfunction RootPanel$DefaultRootPanel_0(){\n  RootPanel_0.call(this, $doc.body);\n}\n\ndefineSeed(235, 232, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RootPanel, Q$UIObject, Q$Widget]), RootPanel$DefaultRootPanel_0);\nfunction $next(this$static){\n  if (!this$static.hasElement || !this$static.this$0.widget) {\n    throw new NoSuchElementException_0;\n  }\n  this$static.hasElement = false;\n  return this$static.returned = this$static.this$0.widget;\n}\n\nfunction SimplePanel$1_0(this$0){\n  this.this$0 = this$0;\n  this.hasElement = !!this.this$0.widget;\n}\n\ndefineSeed(236, 1, {}, SimplePanel$1_0);\n_.hasNext = function hasNext(){\n  return this.hasElement;\n}\n;\n_.next = function next_0(){\n  return $next(this);\n}\n;\n_.remove_1 = function remove_7(){\n  !!this.returned && this.this$0.remove_0(this.returned);\n}\n;\n_.hasElement = false;\n_.returned = null;\nfunction $add_6(this$static, child){\n  $insert_5(this$static, child, 'Logout', this$static.deckPanel.children.size_0);\n}\n\n",
"function $insert_4(this$static, child, tab, beforeIndex){\n  var idx;\n  idx = $getWidgetIndex(this$static.deckPanel, child);\n  if (idx != -1) {\n    $remove_5(this$static, child);\n    idx < beforeIndex && --beforeIndex;\n  }\n  $insert_0(this$static.deckPanel, child, beforeIndex);\n  $add_9(this$static.tabs, beforeIndex, tab);\n  $insert_2(this$static.tabBar, tab, beforeIndex);\n  $addDomHandler(tab, new TabLayoutPanel$1_0(this$static, child), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_0));\n  setStyleName(child.getStyleElement(), 'gwt-TabLayoutPanelContent', true);\n  this$static.selectedIndex_0 == -1?$selectTab(this$static, 0):this$static.selectedIndex_0 >= beforeIndex && ++this$static.selectedIndex_0;\n}\n\nfunction $insert_5(this$static, child, text_0, beforeIndex){\n  var contents;\n  contents = new Label_1(text_0);\n  $insert_4(this$static, child, new TabLayoutPanel$Tab_0(this$static, contents), beforeIndex);\n}\n\nfunction $remove_4(this$static, index_0){\n  var child, tab;\n  if (index_0 < 0 || index_0 >= this$static.deckPanel.children.size_0) {\n    return false;\n  }\n  child = $getWidget(this$static.deckPanel, index_0);\n  $remove(this$static.tabBar, index_0);\n  $remove_2(this$static.deckPanel, child);\n  $setStyleName_0(child, 'gwt-TabLayoutPanelContent', false);\n  tab = dynamicCast($remove_12(this$static.tabs, index_0), Q$TabLayoutPanel$Tab);\n  $removeFromParent_0(tab.widget);\n  if (index_0 == this$static.selectedIndex_0) {\n    this$static.selectedIndex_0 = -1;\n    this$static.deckPanel.children.size_0 > 0 && $selectTab(this$static, 0);\n  }\n   else \n    index_0 < this$static.selectedIndex_0 && --this$static.selectedIndex_0;\n  return true;\n}\n\nfunction $remove_5(this$static, w){\n  var index_0;\n  index_0 = $getWidgetIndex(this$static.deckPanel, w);\n  if (index_0 == -1) {\n    return false;\n  }\n  return $remove_4(this$static, index_0);\n}\n\nfunction $selectTab(this$static, index_0){\n  if (index_0 == this$static.selectedIndex_0) {\n    return;\n  }\n  fire_0(valueOf(index_0));\n  this$static.selectedIndex_0 != -1 && $setSelected(dynamicCast($get_1(this$static.tabs, this$static.selectedIndex_0), Q$TabLayoutPanel$Tab), false);\n  $showWidget(this$static.deckPanel, index_0);\n  $setSelected(dynamicCast($get_1(this$static.tabs, index_0), Q$TabLayoutPanel$Tab), true);\n  this$static.selectedIndex_0 = index_0;\n  fire_3(valueOf(index_0));\n}\n\nfunction $selectTab_0(this$static, child){\n  $selectTab(this$static, $getWidgetIndex(this$static.deckPanel, child));\n}\n\nfunction TabLayoutPanel_0(barUnit){\n  var panel;\n  this.deckPanel = new TabLayoutPanel$TabbedDeckLayoutPanel_0(this);\n  this.tabBar = new FlowPanel_0;\n  this.tabs = new ArrayList_0;\n  panel = new LayoutPanel_0;\n  $initWidget(this, panel);\n  $add_5(panel, this.tabBar);\n  $setWidgetLeftRight(panel, this.tabBar, ($clinit_Style$Unit() , PX), PX);\n  $setWidgetTopHeight(panel, this.tabBar, PX, barUnit);\n  $setWidgetVerticalPosition(panel, this.tabBar);\n  $setStyleName_0(this.deckPanel, 'gwt-TabLayoutPanelContentContainer', true);\n  $add_5(panel, this.deckPanel);\n  $setWidgetLeftRight(panel, this.deckPanel, PX, PX);\n  $setWidgetTopBottom(panel, this.deckPanel, barUnit, PX);\n  ($clinit_DOM() , this.tabBar.element).style['width'] = '16384px';\n  $setStyleName(this.tabBar, 'gwt-TabLayoutPanelTabs');\n  $setClassName(this.element, 'gwt-TabLayoutPanel');\n}\n\ndefineSeed(237, 229, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RequiresResize, Q$UIObject, Q$Widget]), TabLayoutPanel_0);\n_.iterator = function iterator_3(){\n  return new WidgetCollection$WidgetIterator_0(this.deckPanel.children);\n}\n;\n_.remove_0 = function remove_8(w){\n  return $remove_5(this, w);\n}\n;\n_.selectedIndex_0 = -1;\nfunction TabLayoutPanel$1_0(this$0, val$child){\n  this.this$0 = this$0;\n  this.val$child = val$child;\n}\n\ndefineSeed(238, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), TabLayoutPanel$1_0);\n_.onClick = function onClick(event_0){\n  $selectTab_0(this.this$0, this.val$child);\n}\n;\nfunction $setSelected(this$static, selected){\n  selected?$setStyleName_0(this$static, getStylePrimaryName(($clinit_DOM() , this$static.element)) + '-selected', true):$setStyleName_0(this$static, getStylePrimaryName(($clinit_DOM() , this$static.element)) + '-selected', false);\n}\n\nfunction $setWidget_1(this$static, w){\n  this$static.replacingWidget = true;\n  $setWidget(this$static, w);\n  this$static.replacingWidget = false;\n}\n\nfunction TabLayoutPanel$Tab_0(this$0, child){\n  var style;\n  this.this$0 = this$0;\n  SimplePanel_1.call(this, $doc.createElement('div'));\n  $appendChild(($clinit_DOM() , this.element), this.inner = $doc.createElement('div'));\n  $setWidget_1(this, child);\n  $setClassName(this.element, 'gwt-TabLayoutPanelTab');\n  $setClassName(this.inner, 'gwt-TabLayoutPanelTabInner');\n  $addClassName(this.element, (style = (!instance && (instance = new CommonResources_Bundle_ie10_default_InlineClientBundleGenerator_0) , $clinit_CommonResources_Bundle_ie10_default_InlineClientBundleGenerator$inlineBlockStyleInitializer() , inlineBlockStyle) , $ensureInjected(style) , 'GPBYFDEH'));\n}\n\ndefineSeed(239, 193, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$TabLayoutPanel$Tab, Q$UIObject, Q$Widget]), TabLayoutPanel$Tab_0);\n_.getContainerElement = function getContainerElement_2(){\n  return this.inner;\n}\n;\n_.remove_0 = function remove_9(w){\n  var index_0;\n  index_0 = $indexOf_1(this.this$0.tabs, this, 0);\n  return this.replacingWidget || index_0 < 0?$remove_3(this, w):$remove_4(this.this$0, index_0);\n}\n;\n_.setWidget = function setWidget_2(w){\n  $setWidget_1(this, w);\n}\n;\n_.replacingWidget = false;\nfunction TabLayoutPanel$TabbedDeckLayoutPanel_0(this$0){\n  this.this$0 = this$0;\n  ComplexPanel_0.call(this);\n  this.animationDuration = 0;\n  $setElement(this, $doc.createElement('div'));\n  this.layout = new Layout_0(($clinit_DOM() , this.element));\n  this.layoutCmd = new DeckLayoutPanel$DeckAnimateCommand_0(this, this.layout);\n}\n\ndefineSeed(240, 187, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$RequiresResize, Q$UIObject, Q$Widget]), TabLayoutPanel$TabbedDeckLayoutPanel_0);\n_.remove_0 = function remove_10(w){\n  return $remove_5(this.this$0, w);\n}\n;\nfunction TextArea_1(){\n  $clinit_TextBoxBase();\n  TextBoxBase_0.call(this, $doc.createElement('textarea'));\n  $setClassName(($clinit_DOM() , this.element), 'gwt-TextArea');\n}\n\ndefineSeed(241, 221, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$IsWidget, Q$UIObject, Q$Widget]), TextArea_1);\nfunction $clinit_ValueBoxBase$TextAlignment(){\n  $clinit_ValueBoxBase$TextAlignment = nullMethod;\n  CENTER_1 = new ValueBoxBase$TextAlignment$1_0;\n  JUSTIFY_0 = new ValueBoxBase$TextAlignment$2_0;\n  LEFT_0 = new ValueBoxBase$TextAlignment$3_0;\n  RIGHT_0 = new ValueBoxBase$TextAlignment$4_0;\n  $VALUES_6 = initValues(_3Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit, makeCastMap([Q$Serializable]), Q$ValueBoxBase$TextAlignment, [CENTER_1, JUSTIFY_0, LEFT_0, RIGHT_0]);\n}\n\nfunction ValueBoxBase$TextAlignment_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction values_7(){\n  $clinit_ValueBoxBase$TextAlignment();\n  return $VALUES_6;\n}\n\ndefineSeed(242, 55, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]));\nvar $VALUES_6, CENTER_1, JUSTIFY_0, LEFT_0, RIGHT_0;\nfunction ValueBoxBase$TextAlignment$1_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'CENTER', 0);\n}\n\ndefineSeed(243, 242, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$1_0);\nfunction ValueBoxBase$TextAlignment$2_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'JUSTIFY', 1);\n}\n\ndefineSeed(244, 242, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$2_0);\nfunction ValueBoxBase$TextAlignment$3_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'LEFT', 2);\n}\n\ndefineSeed(245, 242, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$3_0);\nfunction ValueBoxBase$TextAlignment$4_0(){\n  ValueBoxBase$TextAlignment_0.call(this, 'RIGHT', 3);\n}\n\ndefineSeed(246, 242, makeCastMap([Q$ValueBoxBase$TextAlignment, Q$Serializable, Q$Comparable, Q$Enum]), ValueBoxBase$TextAlignment$4_0);\nfunction $add_7(this$static, w){\n  var td, tr, td_0;\n  tr = ($clinit_DOM() , $doc.createElement('tr'));\n  td = (td_0 = $doc.createElement('td') , $setCellHorizontalAlignment(td_0, this$static.horzAlign) , $setCellVerticalAlignment(td_0, this$static.vertAlign) , td_0);\n  $appendChild(tr, ($clinit_PotentialElement() , $resolve(td)));\n  $appendChild(this$static.body_0, $resolve(tr));\n  $add(this$static, w, td);\n}\n\nfunction VerticalPanel_0(){\n  CellPanel_0.call(this);\n  this.horzAlign = ($clinit_HasHorizontalAlignment() , ALIGN_DEFAULT);\n  this.vertAlign = ($clinit_HasVerticalAlignment() , ALIGN_TOP);\n  $setPropertyString(($clinit_DOM() , this.table), 'cellSpacing', '0');\n  $setPropertyString(this.table, 'cellPadding', '0');\n}\n\ndefineSeed(247, 184, makeCastMap([Q$HasAttachHandlers, Q$HasHandlers, Q$EventListener, Q$HasVisibility, Q$HasWidgets, Q$IsWidget, Q$UIObject, Q$Widget]), VerticalPanel_0);\n_.remove_0 = function remove_11(w){\n  var removed, td;\n  td = ($clinit_DOM() , $clinit_DOM() , $getParentElement(w.element));\n  removed = $remove_0(this, w);\n  removed && $removeChild(this.body_0, $getParentElement(td));\n  return removed;\n}\n;\nfunction $add_8(this$static, w){\n  $insert_6(this$static, w, this$static.size_0);\n}\n\nfunction $get(this$static, index_0){\n  if (index_0 < 0 || index_0 >= this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  return this$static.array[index_0];\n}\n\nfunction $indexOf(this$static, w){\n  var i;\n  for (i = 0; i < this$static.size_0; ++i) {\n    if (this$static.array[i] == w) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction $insert_6(this$static, w, beforeIndex){\n  var i, i0, newArray;\n  if (beforeIndex < 0 || beforeIndex > this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  if (this$static.size_0 == this$static.array.length) {\n    newArray = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable]), Q$Widget, this$static.array.length * 2, 0);\n    for (i = 0; i < this$static.array.length; ++i) {\n      setCheck(newArray, i, this$static.array[i]);\n    }\n    this$static.array = newArray;\n  }\n  ++this$static.size_0;\n  for (i0 = this$static.size_0 - 1; i0 > beforeIndex; --i0) {\n    setCheck(this$static.array, i0, this$static.array[i0 - 1]);\n  }\n  setCheck(this$static.array, beforeIndex, w);\n}\n\nfunction $remove_6(this$static, index_0){\n  var i;\n  if (index_0 < 0 || index_0 >= this$static.size_0) {\n    throw new IndexOutOfBoundsException_0;\n  }\n  --this$static.size_0;\n  for (i = index_0; i < this$static.size_0; ++i) {\n    setCheck(this$static.array, i, this$static.array[i + 1]);\n  }\n  setCheck(this$static.array, this$static.size_0, null);\n}\n\nfunction $remove_7(this$static, w){\n  var index_0;\n  index_0 = $indexOf(this$static, w);\n  if (index_0 == -1) {\n    throw new NoSuchElementException_0;\n  }\n  $remove_6(this$static, index_0);\n}\n\nfunction WidgetCollection_0(parent_0){\n  this.parent_0 = parent_0;\n  this.array = initDim(_3Lcom_google_gwt_user_client_ui_Widget_2_classLit, makeCastMap([Q$Serializable]), Q$Widget, 4, 0);\n}\n\ndefineSeed(248, 1, {}, WidgetCollection_0);\n_.iterator = function iterator_4(){\n  return new WidgetCollection$WidgetIterator_0(this);\n}\n;\n_.size_0 = 0;\nfunction $next_0(this$static){\n  if (this$static.index_0 >= this$static.this$0.size_0) {\n    throw new NoSuchElementException_0;\n  }\n  this$static.currentWidget = this$static.this$0.array[this$static.index_0];\n  ++this$static.index_0;\n  return this$static.currentWidget;\n}\n\nfunction $remove_8(this$static){\n  if (!this$static.currentWidget) {\n    throw new IllegalStateException_0;\n  }\n  this$static.this$0.parent_0.remove_0(this$static.currentWidget);\n  --this$static.index_0;\n  this$static.currentWidget = null;\n}\n\nfunction WidgetCollection$WidgetIterator_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(249, 1, {}, WidgetCollection$WidgetIterator_0);\n_.hasNext = function hasNext_0(){\n  return this.index_0 < this.this$0.size_0;\n}\n;\n_.next = function next_1(){\n  return $next_0(this);\n}\n;\n_.remove_1 = function remove_12(){\n  $remove_8(this);\n}\n;\n_.index_0 = 0;\nfunction $setClip(popup, rect){\n  $setPropertyImpl(popup.style, 'clip', rect);\n}\n\nfunction $getRuntimeValue(){\n  var ua = navigator.userAgent.toLowerCase();\n  var makeVersion = function(result){\n    return parseInt(result[1]) * 1000 + parseInt(result[2]);\n  }\n  ;\n  if (function(){\n    return ua.indexOf('webkit') != -1;\n  }\n  ())\n    return 'safari';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 10;\n  }\n  ())\n    return 'ie10';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 9;\n  }\n  ())\n    return 'ie9';\n  if (function(){\n    return ua.indexOf('msie') != -1 && $doc.documentMode >= 8;\n  }\n  ())\n    return 'ie8';\n  if (function(){\n    return ua.indexOf('gecko') != -1;\n  }\n  ())\n    return 'gecko1_8';\n  return 'unknown';\n}\n\nfunction $removeHandler(this$static){\n  $doRemove(this$static.this$0, this$static.val$type, this$static.val$handler);\n}\n\nfunction SimpleEventBus$1_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$handler = val$handler;\n}\n\ndefineSeed(253, 1, {}, SimpleEventBus$1_0);\nfunction SimpleEventBus$2_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$handler = val$handler;\n}\n\ndefineSeed(254, 1, makeCastMap([Q$SimpleEventBus$Command]), SimpleEventBus$2_0);\n_.execute_0 = function execute_10(){\n  $doAddNow(this.this$0, this.val$type, this.val$handler);\n}\n;\nfunction SimpleEventBus$3_0(this$0, val$type, val$handler){\n  this.this$0 = this$0;\n  this.val$type = val$type;\n  this.val$handler = val$handler;\n}\n\ndefineSeed(255, 1, makeCastMap([Q$SimpleEventBus$Command]), SimpleEventBus$3_0);\n_.execute_0 = function execute_11(){\n  $doRemoveNow(this.this$0, this.val$type, this.val$handler);\n}\n;\nfunction ArrayStoreException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(256, 19, makeCastMap([Q$Serializable, Q$Throwable]), ArrayStoreException_0);\nfunction $clinit_Boolean(){\n  $clinit_Boolean = nullMethod;\n  FALSE = new Boolean_1(false);\n  TRUE = new Boolean_1(true);\n}\n\nfunction Boolean_1(value_0){\n  this.value_0 = value_0;\n}\n\ndefineSeed(257, 1, makeCastMap([Q$Serializable, Q$Boolean, Q$Comparable]), Boolean_1);\n_.equals$ = function equals_2(o){\n  return instanceOf(o, Q$Boolean) && dynamicCast(o, Q$Boolean).value_0 == this.value_0;\n}\n;\n_.hashCode$ = function hashCode_4(){\n  return this.value_0?1231:1237;\n}\n;\n_.toString$ = function toString_6(){\n  return this.value_0?'true':'false';\n}\n;\n_.value_0 = false;\nvar FALSE, TRUE;\nfunction digit(c){\n  if (c >= 48 && c < 58) {\n    return c - 48;\n  }\n  if (c >= 97 && c < 97) {\n    return c - 97 + 10;\n  }\n  if (c >= 65 && c < 65) {\n    return c - 65 + 10;\n  }\n  return -1;\n}\n\nfunction Class_0(){\n}\n\nfunction createForArray(packageName, className, seedId){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId != 0?-seedId:0) && setClassLiteral(seedId != 0?-seedId:0, clazz);\n  clazz.modifiers = 4;\n  return clazz;\n}\n\nfunction createForClass(packageName, className, seedId){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId) && setClassLiteral(seedId, clazz);\n  return clazz;\n}\n\nfunction createForEnum(packageName, className, seedId, enumConstantsFunc){\n  var clazz;\n  clazz = new Class_0;\n  clazz.typeName = packageName + className;\n  isInstantiable(seedId) && setClassLiteral(seedId, clazz);\n  clazz.modifiers = enumConstantsFunc?8:0;\n  return clazz;\n}\n\nfunction getSeedFunction(clazz){\n  var func = seedTable[clazz.seedId];\n  clazz = null;\n  return func;\n}\n\nfunction isInstantiable(seedId){\n  return typeof seedId == 'number' && seedId > 0;\n}\n\nfunction setClassLiteral(seedId, clazz){\n  var proto;\n  clazz.seedId = seedId;\n  if (seedId == 2) {\n    proto = String.prototype;\n  }\n   else {\n    if (seedId > 0) {\n      var seed = getSeedFunction(clazz);\n      if (seed) {\n        proto = seed.prototype;\n      }\n       else {\n        seed = seedTable[seedId] = function(){\n        }\n        ;\n        seed.___clazz$ = clazz;\n        return;\n      }\n    }\n     else {\n      return;\n    }\n  }\n  proto.___clazz$ = clazz;\n}\n\ndefineSeed(259, 1, {}, Class_0);\n_.toString$ = function toString_7(){\n  return ((this.modifiers & 2) != 0?'interface ':(this.modifiers & 1) != 0?'':'class ') + this.typeName;\n}\n;\n_.modifiers = 0;\n_.seedId = 0;\nfunction ClassCastException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(260, 19, makeCastMap([Q$Serializable, Q$Throwable]), ClassCastException_0);\nfunction IllegalArgumentException_0(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(261, 19, makeCastMap([Q$Serializable, Q$Throwable]), IllegalArgumentException_0);\nfunction IllegalStateException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction IllegalStateException_1(s){\n  RuntimeException_1.call(this, s);\n}\n\ndefineSeed(262, 19, makeCastMap([Q$Serializable, Q$Throwable]), IllegalStateException_0, IllegalStateException_1);\nfunction IndexOutOfBoundsException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction IndexOutOfBoundsException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(263, 19, makeCastMap([Q$Serializable, Q$Throwable]), IndexOutOfBoundsException_0, IndexOutOfBoundsException_1);\nfunction __parseAndValidateInt(s){\n  var i, isTooLow, length_0, startIndex, toReturn;\n  if (s == null) {\n    throw new NumberFormatException_0('null');\n  }\n  length_0 = s.length;\n  startIndex = length_0 > 0 && (s.charCodeAt(0) == 45 || s.charCodeAt(0) == 43)?1:0;\n  for (i = startIndex; i < length_0; i++) {\n    if (digit(s.charCodeAt(i)) == -1) {\n      throw new NumberFormatException_0('For input string: \"' + s + '\"');\n    }\n  }\n  toReturn = parseInt(s, 10);\n  isTooLow = toReturn < -2147483648;\n  if (isNaN(toReturn)) {\n    throw new NumberFormatException_0('For input string: \"' + s + '\"');\n  }\n   else if (isTooLow || toReturn > 2147483647) {\n    throw new NumberFormatException_0('For input string: \"' + s + '\"');\n  }\n  return toReturn;\n}\n\ndefineSeed(265, 1, makeCastMap([Q$Serializable, Q$Number]));\nfunction Integer_0(value_0){\n  this.value_0 = value_0;\n}\n\nfunction toPowerOfTwoString(value_0){\n  var buf, digits, pos;\n  buf = initDim(_3C_classLit, makeCastMap([Q$Serializable]), -1, 8, 1);\n  digits = ($clinit_Number$__Digits() , digits_0);\n  pos = 7;\n  if (value_0 >= 0) {\n    while (value_0 > 15) {\n      buf[pos--] = digits[value_0 & 15];\n      value_0 >>= 4;\n    }\n  }\n   else {\n    while (pos > 0) {\n      buf[pos--] = digits[value_0 & 15];\n      value_0 >>= 4;\n    }\n  }\n  buf[pos] = digits[value_0 & 15];\n  return __valueOf(buf, pos, 8);\n}\n\nfunction valueOf(i){\n  var rebase, result;\n  if (i > -129 && i < 128) {\n    rebase = i + 128;\n    result = ($clinit_Integer$BoxedValues() , boxedValues)[rebase];\n    !result && (result = boxedValues[rebase] = new Integer_0(i));\n    return result;\n  }\n  return new Integer_0(i);\n}\n\ndefineSeed(264, 265, makeCastMap([Q$Serializable, Q$Comparable, Q$Integer, Q$Number]), Integer_0);\n_.equals$ = function equals_3(o){\n  return instanceOf(o, Q$Integer) && dynamicCast(o, Q$Integer).value_0 == this.value_0;\n}\n;\n_.hashCode$ = function hashCode_5(){\n  return this.value_0;\n}\n;\n_.toString$ = function toString_8(){\n  return '' + this.value_0;\n}\n;\n_.value_0 = 0;\nfunction $clinit_Integer$BoxedValues(){\n  $clinit_Integer$BoxedValues = nullMethod;\n  boxedValues = initDim(_3Ljava_lang_Integer_2_classLit, makeCastMap([Q$Serializable]), Q$Integer, 256, 0);\n}\n\nvar boxedValues;\nfunction cos_0(x_0){\n  return Math.cos(x_0);\n}\n\nfunction max_0(y_0){\n  return 5 > y_0?5:y_0;\n}\n\nfunction NullPointerException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction NullPointerException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(268, 19, makeCastMap([Q$Serializable, Q$Throwable]), NullPointerException_0, NullPointerException_1);\nfunction $clinit_Number$__Digits(){\n  $clinit_Number$__Digits = nullMethod;\n  digits_0 = initValues(_3C_classLit, makeCastMap([Q$Serializable]), -1, [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122]);\n}\n\nvar digits_0;\nfunction NumberFormatException_0(message){\n  IllegalArgumentException_0.call(this, message);\n}\n\ndefineSeed(270, 261, makeCastMap([Q$Serializable, Q$Throwable]), NumberFormatException_0);\nfunction StackTraceElement_0(methodName){\n  this.className_0 = 'Unknown';\n  this.methodName = methodName;\n  this.lineNumber = -1;\n}\n\ndefineSeed(271, 1, makeCastMap([Q$Serializable, Q$StackTraceElement]), StackTraceElement_0);\n_.toString$ = function toString_9(){\n  return this.className_0 + '.' + this.methodName + '(Unknown Source' + (this.lineNumber >= 0?':' + this.lineNumber:'') + ')';\n}\n;\n_.lineNumber = 0;\nfunction $charAt(this$static, index_0){\n  return this$static.charCodeAt(index_0);\n}\n\nfunction $equals(this$static, other){\n  if (!instanceOf(other, Q$String)) {\n    return false;\n  }\n  return String(this$static) == other;\n}\n\nfunction $equalsIgnoreCase(this$static, other){\n  if (other == null)\n    return false;\n  return this$static == other || this$static.toLowerCase() == other.toLowerCase();\n}\n\nfunction $indexOf_0(this$static, str){\n  return this$static.indexOf(str);\n}\n\nfunction $split(this$static, regex, maxMatch){\n  var compiled = new RegExp(regex, 'g');\n  var out = [];\n  var count = 0;\n  var trail = this$static;\n  var lastTrail = null;\n  while (true) {\n    var matchObj = compiled.exec(trail);\n    if (matchObj == null || trail == '' || count == maxMatch - 1 && maxMatch > 0) {\n      out[count] = trail;\n      break;\n    }\n     else {\n      out[count] = trail.substring(0, matchObj.index);\n      trail = trail.substring(matchObj.index + matchObj[0].length, trail.length);\n      compiled.lastIndex = 0;\n      if (lastTrail == trail) {\n        out[count] = trail.substring(0, 1);\n        trail = trail.substring(1);\n      }\n      lastTrail = trail;\n      count++;\n    }\n  }\n  if (maxMatch == 0 && this$static.length > 0) {\n    var lastNonEmpty = out.length;\n    while (lastNonEmpty > 0 && out[lastNonEmpty - 1] == '') {\n      --lastNonEmpty;\n    }\n    lastNonEmpty < out.length && out.splice(lastNonEmpty, out.length - lastNonEmpty);\n  }\n  var jr = __createArray(out.length);\n  for (var i = 0; i < out.length; ++i) {\n    jr[i] = out[i];\n  }\n  return jr;\n}\n\nfunction $substring(this$static, beginIndex){\n  return this$static.substr(beginIndex, this$static.length - beginIndex);\n}\n\nfunction $substring_0(this$static, beginIndex, endIndex){\n  return this$static.substr(beginIndex, endIndex - beginIndex);\n}\n\nfunction $trim(this$static){\n  if (this$static.length == 0 || this$static[0] > ' ' && this$static[this$static.length - 1] > ' ') {\n    return this$static;\n  }\n  var r1 = this$static.replace(/^(\\s*)/, '');\n  var r2 = r1.replace(/\\s*$/, '');\n  return r2;\n}\n\nfunction __createArray(numElements){\n  return initDim(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, numElements, 0);\n}\n\nfunction __valueOf(x_0, start_0, end){\n  x_0 = x_0.slice(start_0, end);\n  return String.fromCharCode.apply(null, x_0);\n}\n\nfunction fromCharCode(ch_0){\n  return String.fromCharCode(ch_0);\n}\n\nfunction fromCodePoint(codePoint){\n  var hiSurrogate, loSurrogate;\n  if (codePoint >= 65536) {\n    hiSurrogate = 55296 + (codePoint - 65536 >> 10 & 1023) & 65535;\n    loSurrogate = 56320 + (codePoint - 65536 & 1023) & 65535;\n    return fromCharCode(hiSurrogate) + fromCharCode(loSurrogate);\n  }\n   else {\n    return String.fromCharCode(codePoint & 65535);\n  }\n}\n\n_ = String.prototype;\n_.castableTypeMap$ = makeCastMap([Q$String, Q$Serializable, Q$CharSequence, Q$Comparable]);\n_.equals$ = function equals_4(other){\n  return $equals(this, other);\n}\n;\n_.hashCode$ = function hashCode_6(){\n  return getHashCode_0(this);\n}\n;\n_.toString$ = _.toString;\nfunction $clinit_String$HashCache(){\n  $clinit_String$HashCache = nullMethod;\n  back_0 = {};\n  front = {};\n}\n\nfunction compute(str){\n  var hashCode, i, n, nBatch;\n  hashCode = 0;\n  n = str.length;\n  nBatch = n - 4;\n  i = 0;\n  while (i < nBatch) {\n    hashCode = str.charCodeAt(i + 3) + 31 * (str.charCodeAt(i + 2) + 31 * (str.charCodeAt(i + 1) + 31 * (str.charCodeAt(i) + 31 * hashCode))) | 0;\n    i += 4;\n  }\n  while (i < n) {\n    hashCode = hashCode * 31 + $charAt(str, i++);\n  }\n  return hashCode | 0;\n}\n\nfunction getHashCode_0(str){\n  $clinit_String$HashCache();\n  var key = ':' + str;\n  var result = front[key];\n  if (result != null) {\n    return result;\n  }\n  result = back_0[key];\n  result == null && (result = compute(str));\n  increment();\n  return front[key] = result;\n}\n\nfunction increment(){\n  if (count_0 == 256) {\n    back_0 = front;\n    front = {};\n    count_0 = 0;\n  }\n  ++count_0;\n}\n\nvar back_0, count_0 = 0, front;\nfunction StringBuffer_0(){\n  this.impl = new StringBufferImplAppend_0;\n}\n\ndefineSeed(273, 1, makeCastMap([Q$CharSequence]), StringBuffer_0);\n_.toString$ = function toString_10(){\n  return this.impl.string;\n}\n;\nfunction $append_0(this$static, x_0){\n  $append(this$static.impl, x_0);\n  return this$static;\n}\n\nfunction StringBuilder_0(s){\n  this.impl = new StringBufferImplAppend_0;\n  $append(this.impl, s);\n}\n\ndefineSeed(274, 1, makeCastMap([Q$CharSequence]), StringBuilder_0);\n_.toString$ = function toString_11(){\n  return this.impl.string;\n}\n;\nfunction UnsupportedOperationException_0(){\n  RuntimeException_0.call(this);\n}\n\nfunction UnsupportedOperationException_1(message){\n  RuntimeException_1.call(this, message);\n}\n\ndefineSeed(275, 19, makeCastMap([Q$Serializable, Q$Throwable]), UnsupportedOperationException_0, UnsupportedOperationException_1);\nfunction $advanceToFind(iter, o){\n  var t;\n  while (iter.hasNext()) {\n    t = iter.next();\n    if (o == null?t == null:equals__devirtual$(o, t)) {\n      return iter;\n    }\n  }\n  return null;\n}\n\nfunction $toString(this$static){\n  var comma, iter, sb, value_0;\n  sb = new StringBuffer_0;\n  comma = null;\n  $append(sb.impl, '[');\n  iter = this$static.iterator();\n  while (iter.hasNext()) {\n    comma != null?($append(sb.impl, comma) , sb):(comma = ', ');\n    value_0 = iter.next();\n    $append(sb.impl, value_0 === this$static?'(this Collection)':'' + value_0);\n  }\n  $append(sb.impl, ']');\n  return sb.impl.string;\n}\n\ndefineSeed(276, 1, {});\n_.add_0 = function add_1(o){\n  throw new UnsupportedOperationException_1('Add not supported on this collection');\n}\n;\n_.contains_0 = function contains(o){\n  var iter;\n  iter = $advanceToFind(this.iterator(), o);\n  return !!iter;\n}\n;\n_.isEmpty = function isEmpty(){\n  return this.size_1() == 0;\n}\n;\n_.remove_2 = function remove_13(o){\n  var iter;\n  iter = $advanceToFind(this.iterator(), o);\n  if (iter) {\n    iter.remove_1();\n    return true;\n  }\n   else {\n    return false;\n  }\n}\n;\n_.toString$ = function toString_12(){\n  return $toString(this);\n}\n;\nfunction $keySet(this$static){\n  var entrySet;\n  entrySet = new AbstractHashMap$EntrySet_0(this$static);\n  return new AbstractMap$1_0(this$static, entrySet);\n}\n\ndefineSeed(278, 1, makeCastMap([Q$Map]));\n_.equals$ = function equals_5(obj){\n  var entry, entry$iterator, otherKey, otherMap, otherValue;\n  if (obj === this) {\n    return true;\n  }\n  if (!instanceOf(obj, Q$Map)) {\n    return false;\n  }\n  otherMap = dynamicCast(obj, Q$Map);\n  if (this.size_0 != otherMap.size_0) {\n    return false;\n  }\n  for (entry$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(otherMap)).this$0); $hasNext(entry$iterator.iter);) {\n    entry = entry$iterator.last = dynamicCast($next_2(entry$iterator.iter), Q$Map$Entry);\n    otherKey = entry.getKey();\n    otherValue = entry.getValue();\n    if (!(otherKey == null?this.nullSlotLive:instanceOf(otherKey, Q$String)?$hasStringValue(this, dynamicCast(otherKey, Q$String)):$hasHashValue(this, otherKey, ~~hashCode__devirtual$(otherKey)))) {\n      return false;\n    }\n    if (!equalsWithNullCheck(otherValue, otherKey == null?this.nullSlot:instanceOf(otherKey, Q$String)?$getStringValue(this, dynamicCast(otherKey, Q$String)):$getHashValue(this, otherKey, ~~hashCode__devirtual$(otherKey)))) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_7(){\n  var entry, entry$iterator, hashCode;\n  hashCode = 0;\n  for (entry$iterator = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this)).this$0); $hasNext(entry$iterator.iter);) {\n    entry = entry$iterator.last = dynamicCast($next_2(entry$iterator.iter), Q$Map$Entry);\n    hashCode += entry.hashCode$();\n    hashCode = ~~hashCode;\n  }\n  return hashCode;\n}\n;\n_.toString$ = function toString_13(){\n  var comma, entry, iter, s;\n  s = '{';\n  comma = false;\n  for (iter = new AbstractHashMap$EntrySetIterator_0((new AbstractHashMap$EntrySet_0(this)).this$0); $hasNext(iter.iter);) {\n    entry = iter.last = dynamicCast($next_2(iter.iter), Q$Map$Entry);\n    comma?(s += ', '):(comma = true);\n    s += '' + entry.getKey();\n    s += '=';\n    s += '' + entry.getValue();\n  }\n  return s + '}';\n}\n;\nfunction $addAllHashEntries(this$static, dest){\n  var hashCodeMap = this$static.hashCodeMap;\n  for (var hashCode in hashCodeMap) {\n    var hashCodeInt = parseInt(hashCode, 10);\n    if (hashCode == hashCodeInt) {\n      var array = hashCodeMap[hashCodeInt];\n      for (var i = 0, c = array.length; i < c; ++i) {\n        dest.add_0(array[i]);\n      }\n    }\n  }\n}\n\n",
"function $addAllStringEntries(this$static, dest){\n  var stringMap = this$static.stringMap;\n  for (var key in stringMap) {\n    if (key.charCodeAt(0) == 58) {\n      var entry = new AbstractHashMap$MapEntryString_0(this$static, key.substring(1));\n      dest.add_0(entry);\n    }\n  }\n}\n\nfunction $clearImpl(this$static){\n  this$static.hashCodeMap = [];\n  this$static.stringMap = {};\n  this$static.nullSlotLive = false;\n  this$static.nullSlot = null;\n  this$static.size_0 = 0;\n}\n\nfunction $containsKey(this$static, key){\n  return key == null?this$static.nullSlotLive:instanceOf(key, Q$String)?$hasStringValue(this$static, dynamicCast(key, Q$String)):$hasHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $get_0(this$static, key){\n  return key == null?this$static.nullSlot:instanceOf(key, Q$String)?$getStringValue(this$static, dynamicCast(key, Q$String)):$getHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $getHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        return entry.getValue();\n      }\n    }\n  }\n  return null;\n}\n\nfunction $getStringValue(this$static, key){\n  return this$static.stringMap[':' + key];\n}\n\nfunction $hasHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction $hasStringValue(this$static, key){\n  return ':' + key in this$static.stringMap;\n}\n\nfunction $put(this$static, key, value_0){\n  return key == null?$putNullSlot(this$static, value_0):instanceOf(key, Q$String)?$putStringValue(this$static, dynamicCast(key, Q$String), value_0):$putHashValue(this$static, key, value_0, ~~hashCode__devirtual$(key));\n}\n\nfunction $putHashValue(this$static, key, value_0, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        var previous = entry.getValue();\n        entry.setValue(value_0);\n        return previous;\n      }\n    }\n  }\n   else {\n    array = this$static.hashCodeMap[hashCode] = [];\n  }\n  var entry = new MapEntryImpl_0(key, value_0);\n  array.push(entry);\n  ++this$static.size_0;\n  return null;\n}\n\nfunction $putNullSlot(this$static, value_0){\n  var result;\n  result = this$static.nullSlot;\n  this$static.nullSlot = value_0;\n  if (!this$static.nullSlotLive) {\n    this$static.nullSlotLive = true;\n    ++this$static.size_0;\n  }\n  return result;\n}\n\nfunction $putStringValue(this$static, key, value_0){\n  var result, stringMap = this$static.stringMap;\n  key = ':' + key;\n  key in stringMap?(result = stringMap[key]):++this$static.size_0;\n  stringMap[key] = value_0;\n  return result;\n}\n\nfunction $remove_9(this$static, key){\n  return key == null?$removeNullSlot(this$static):instanceOf(key, Q$String)?$removeStringValue(this$static, dynamicCast(key, Q$String)):$removeHashValue(this$static, key, ~~hashCode__devirtual$(key));\n}\n\nfunction $removeHashValue(this$static, key, hashCode){\n  var array = this$static.hashCodeMap[hashCode];\n  if (array) {\n    for (var i = 0, c = array.length; i < c; ++i) {\n      var entry = array[i];\n      var entryKey = entry.getKey();\n      if (this$static.equalsBridge(key, entryKey)) {\n        array.length == 1?delete this$static.hashCodeMap[hashCode]:array.splice(i, 1);\n        --this$static.size_0;\n        return entry.getValue();\n      }\n    }\n  }\n  return null;\n}\n\nfunction $removeNullSlot(this$static){\n  var result;\n  result = this$static.nullSlot;\n  this$static.nullSlot = null;\n  if (this$static.nullSlotLive) {\n    this$static.nullSlotLive = false;\n    --this$static.size_0;\n  }\n  return result;\n}\n\nfunction $removeStringValue(this$static, key){\n  var result, stringMap = this$static.stringMap;\n  key = ':' + key;\n  if (key in stringMap) {\n    result = stringMap[key];\n    --this$static.size_0;\n    delete stringMap[key];\n  }\n  return result;\n}\n\ndefineSeed(277, 278, makeCastMap([Q$Map]));\n_.equalsBridge = function equalsBridge(value1, value2){\n  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);\n}\n;\n_.nullSlotLive = false;\n_.size_0 = 0;\ndefineSeed(280, 276, makeCastMap([Q$Set]));\n_.equals$ = function equals_6(o){\n  var iter, other, otherItem;\n  if (o === this) {\n    return true;\n  }\n  if (!instanceOf(o, Q$Set)) {\n    return false;\n  }\n  other = dynamicCast(o, Q$Set);\n  if (other.size_1() != this.size_1()) {\n    return false;\n  }\n  for (iter = other.iterator(); iter.hasNext();) {\n    otherItem = iter.next();\n    if (!this.contains_0(otherItem)) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_8(){\n  var hashCode, iter, next;\n  hashCode = 0;\n  for (iter = this.iterator(); iter.hasNext();) {\n    next = iter.next();\n    if (next != null) {\n      hashCode += hashCode__devirtual$(next);\n      hashCode = ~~hashCode;\n    }\n  }\n  return hashCode;\n}\n;\nfunction $contains(this$static, o){\n  var entry, key, value_0;\n  if (instanceOf(o, Q$Map$Entry)) {\n    entry = dynamicCast(o, Q$Map$Entry);\n    key = entry.getKey();\n    if ($containsKey(this$static.this$0, key)) {\n      value_0 = $get_0(this$static.this$0, key);\n      return $equals_0(entry.getValue(), value_0);\n    }\n  }\n  return false;\n}\n\nfunction AbstractHashMap$EntrySet_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(279, 280, makeCastMap([Q$Set]), AbstractHashMap$EntrySet_0);\n_.contains_0 = function contains_0(o){\n  return $contains(this, o);\n}\n;\n_.iterator = function iterator_5(){\n  return new AbstractHashMap$EntrySetIterator_0(this.this$0);\n}\n;\n_.remove_2 = function remove_14(entry){\n  var key;\n  if ($contains(this, entry)) {\n    key = dynamicCast(entry, Q$Map$Entry).getKey();\n    $remove_9(this.this$0, key);\n    return true;\n  }\n  return false;\n}\n;\n_.size_1 = function size_1(){\n  return this.this$0.size_0;\n}\n;\nfunction $next_1(this$static){\n  return this$static.last = dynamicCast($next_2(this$static.iter), Q$Map$Entry);\n}\n\nfunction $remove_10(this$static){\n  if (!this$static.last) {\n    throw new IllegalStateException_1('Must call next() before remove().');\n  }\n   else {\n    $remove_11(this$static.iter);\n    $remove_9(this$static.this$0, this$static.last.getKey());\n    this$static.last = null;\n  }\n}\n\nfunction AbstractHashMap$EntrySetIterator_0(this$0){\n  var list;\n  this.this$0 = this$0;\n  list = new ArrayList_0;\n  this$0.nullSlotLive && $add_10(list, new AbstractHashMap$MapEntryNull_0(this$0));\n  $addAllStringEntries(this$0, list);\n  $addAllHashEntries(this$0, list);\n  this.iter = new AbstractList$IteratorImpl_0(list);\n}\n\ndefineSeed(281, 1, {}, AbstractHashMap$EntrySetIterator_0);\n_.hasNext = function hasNext_1(){\n  return $hasNext(this.iter);\n}\n;\n_.next = function next_2(){\n  return $next_1(this);\n}\n;\n_.remove_1 = function remove_15(){\n  $remove_10(this);\n}\n;\n_.last = null;\ndefineSeed(283, 1, makeCastMap([Q$Map$Entry]));\n_.equals$ = function equals_7(other){\n  var entry;\n  if (instanceOf(other, Q$Map$Entry)) {\n    entry = dynamicCast(other, Q$Map$Entry);\n    if (equalsWithNullCheck(this.getKey(), entry.getKey()) && equalsWithNullCheck(this.getValue(), entry.getValue())) {\n      return true;\n    }\n  }\n  return false;\n}\n;\n_.hashCode$ = function hashCode_9(){\n  var keyHash, valueHash;\n  keyHash = 0;\n  valueHash = 0;\n  this.getKey() != null && (keyHash = hashCode__devirtual$(this.getKey()));\n  this.getValue() != null && (valueHash = hashCode__devirtual$(this.getValue()));\n  return keyHash ^ valueHash;\n}\n;\n_.toString$ = function toString_14(){\n  return this.getKey() + '=' + this.getValue();\n}\n;\nfunction AbstractHashMap$MapEntryNull_0(this$0){\n  this.this$0 = this$0;\n}\n\ndefineSeed(282, 283, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryNull_0);\n_.getKey = function getKey(){\n  return null;\n}\n;\n_.getValue = function getValue(){\n  return this.this$0.nullSlot;\n}\n;\n_.setValue = function setValue(object){\n  return $putNullSlot(this.this$0, object);\n}\n;\nfunction AbstractHashMap$MapEntryString_0(this$0, key){\n  this.this$0 = this$0;\n  this.key = key;\n}\n\ndefineSeed(284, 283, makeCastMap([Q$Map$Entry]), AbstractHashMap$MapEntryString_0);\n_.getKey = function getKey_0(){\n  return this.key;\n}\n;\n_.getValue = function getValue_0(){\n  return $getStringValue(this.this$0, this.key);\n}\n;\n_.setValue = function setValue_0(object){\n  return $putStringValue(this.this$0, this.key, object);\n}\n;\nfunction checkIndex(index_0, size_0){\n  (index_0 < 0 || index_0 >= size_0) && indexOutOfBounds(index_0, size_0);\n}\n\nfunction indexOutOfBounds(index_0, size_0){\n  throw new IndexOutOfBoundsException_1('Index: ' + index_0 + ', Size: ' + size_0);\n}\n\ndefineSeed(285, 276, makeCastMap([Q$List]));\n_.add_1 = function add_2(index_0, element){\n  throw new UnsupportedOperationException_1('Add not supported on this list');\n}\n;\n_.add_0 = function add_3(obj){\n  this.add_1(this.size_1(), obj);\n  return true;\n}\n;\n_.equals$ = function equals_8(o){\n  var elem, elemOther, iter, iterOther, other;\n  if (o === this) {\n    return true;\n  }\n  if (!instanceOf(o, Q$List)) {\n    return false;\n  }\n  other = dynamicCast(o, Q$List);\n  if (this.size_1() != other.size_1()) {\n    return false;\n  }\n  iter = new AbstractList$IteratorImpl_0(this);\n  iterOther = other.iterator();\n  while (iter.i < iter.this$0_0.size_1()) {\n    elem = $next_2(iter);\n    elemOther = $next_2(iterOther);\n    if (!(elem == null?elemOther == null:equals__devirtual$(elem, elemOther))) {\n      return false;\n    }\n  }\n  return true;\n}\n;\n_.hashCode$ = function hashCode_10(){\n  var iter, k, obj;\n  k = 1;\n  iter = new AbstractList$IteratorImpl_0(this);\n  while (iter.i < iter.this$0_0.size_1()) {\n    obj = $next_2(iter);\n    k = 31 * k + (obj == null?0:hashCode__devirtual$(obj));\n    k = ~~k;\n  }\n  return k;\n}\n;\n_.iterator = function iterator_6(){\n  return new AbstractList$IteratorImpl_0(this);\n}\n;\n_.listIterator = function listIterator(){\n  return new AbstractList$ListIteratorImpl_0(this, 0);\n}\n;\n_.listIterator_0 = function listIterator_0(from){\n  return new AbstractList$ListIteratorImpl_0(this, from);\n}\n;\n_.remove_3 = function remove_16(index_0){\n  throw new UnsupportedOperationException_1('Remove not supported on this list');\n}\n;\nfunction $hasNext(this$static){\n  return this$static.i < this$static.this$0_0.size_1();\n}\n\nfunction $next_2(this$static){\n  if (this$static.i >= this$static.this$0_0.size_1()) {\n    throw new NoSuchElementException_0;\n  }\n  return this$static.this$0_0.get_0(this$static.last = this$static.i++);\n}\n\nfunction $remove_11(this$static){\n  if (this$static.last < 0) {\n    throw new IllegalStateException_0;\n  }\n  this$static.this$0_0.remove_3(this$static.last);\n  this$static.i = this$static.last;\n  this$static.last = -1;\n}\n\nfunction AbstractList$IteratorImpl_0(this$0){\n  this.this$0_0 = this$0;\n}\n\ndefineSeed(286, 1, {}, AbstractList$IteratorImpl_0);\n_.hasNext = function hasNext_2(){\n  return $hasNext(this);\n}\n;\n_.next = function next_3(){\n  return $next_2(this);\n}\n;\n_.remove_1 = function remove_17(){\n  $remove_11(this);\n}\n;\n_.i = 0;\n_.last = -1;\nfunction $previous(this$static){\n  if (this$static.i <= 0) {\n    throw new NoSuchElementException_0;\n  }\n  return this$static.this$0.get_0(this$static.last = --this$static.i);\n}\n\nfunction AbstractList$ListIteratorImpl_0(this$0, start_0){\n  var size_0;\n  this.this$0 = this$0;\n  AbstractList$IteratorImpl_0.call(this, this$0);\n  size_0 = this$0.size_1();\n  (start_0 < 0 || start_0 > size_0) && indexOutOfBounds(start_0, size_0);\n  this.i = start_0;\n}\n\ndefineSeed(287, 286, {}, AbstractList$ListIteratorImpl_0);\nfunction $iterator(this$static){\n  var outerIter;\n  outerIter = new AbstractHashMap$EntrySetIterator_0(this$static.val$entrySet.this$0);\n  return new AbstractMap$1$1_0(outerIter);\n}\n\nfunction AbstractMap$1_0(this$0, val$entrySet){\n  this.this$0 = this$0;\n  this.val$entrySet = val$entrySet;\n}\n\ndefineSeed(288, 280, makeCastMap([Q$Set]), AbstractMap$1_0);\n_.contains_0 = function contains_1(key){\n  return $containsKey(this.this$0, key);\n}\n;\n_.iterator = function iterator_7(){\n  return $iterator(this);\n}\n;\n_.size_1 = function size_2(){\n  return this.val$entrySet.this$0.size_0;\n}\n;\nfunction AbstractMap$1$1_0(val$outerIter){\n  this.val$outerIter = val$outerIter;\n}\n\ndefineSeed(289, 1, {}, AbstractMap$1$1_0);\n_.hasNext = function hasNext_3(){\n  return $hasNext(this.val$outerIter.iter);\n}\n;\n_.next = function next_4(){\n  var entry;\n  entry = $next_1(this.val$outerIter);\n  return entry.getKey();\n}\n;\n_.remove_1 = function remove_18(){\n  $remove_10(this.val$outerIter);\n}\n;\nfunction $$init(this$static){\n  this$static.array = initDim(_3Ljava_lang_Object_2_classLit, makeCastMap([Q$Serializable]), Q$Object, 0, 0);\n}\n\nfunction $add_9(this$static, index_0, o){\n  (index_0 < 0 || index_0 > this$static.size_0) && indexOutOfBounds(index_0, this$static.size_0);\n  splice_0(this$static.array, index_0, 0, o);\n  ++this$static.size_0;\n}\n\nfunction $add_10(this$static, o){\n  setCheck(this$static.array, this$static.size_0++, o);\n  return true;\n}\n\nfunction $get_1(this$static, index_0){\n  checkIndex(index_0, this$static.size_0);\n  return this$static.array[index_0];\n}\n\nfunction $indexOf_1(this$static, o, index_0){\n  for (; index_0 < this$static.size_0; ++index_0) {\n    if (equalsWithNullCheck(o, this$static.array[index_0])) {\n      return index_0;\n    }\n  }\n  return -1;\n}\n\nfunction $remove_12(this$static, index_0){\n  var previous;\n  previous = (checkIndex(index_0, this$static.size_0) , this$static.array[index_0]);\n  splice(this$static.array, index_0, 1);\n  --this$static.size_0;\n  return previous;\n}\n\nfunction $remove_13(this$static, o){\n  var i;\n  i = $indexOf_1(this$static, o, 0);\n  if (i == -1) {\n    return false;\n  }\n  $remove_12(this$static, i);\n  return true;\n}\n\nfunction $toArray(this$static, out){\n  var i;\n  out.length < this$static.size_0 && (out = createFrom(out, this$static.size_0));\n  for (i = 0; i < this$static.size_0; ++i) {\n    setCheck(out, i, this$static.array[i]);\n  }\n  out.length > this$static.size_0 && setCheck(out, this$static.size_0, null);\n  return out;\n}\n\nfunction ArrayList_0(){\n  $$init(this);\n}\n\nfunction ArrayList_1(c){\n  $$init(this);\n  spliceArray(this.array, 0, 0, cloneSubrange(c.array, c.size_0));\n  this.size_0 = this.array.length;\n}\n\nfunction splice(array, index_0, deleteCount){\n  array.splice(index_0, deleteCount);\n}\n\nfunction splice_0(array, index_0, deleteCount, value_0){\n  array.splice(index_0, deleteCount, value_0);\n}\n\nfunction spliceArray(array, index_0, deleteCount, values){\n  Array.prototype.splice.apply(array, [index_0, deleteCount].concat(values));\n}\n\ndefineSeed(290, 285, makeCastMap([Q$Serializable, Q$List]), ArrayList_0, ArrayList_1);\n_.add_1 = function add_4(index_0, o){\n  $add_9(this, index_0, o);\n}\n;\n_.add_0 = function add_5(o){\n  return $add_10(this, o);\n}\n;\n_.contains_0 = function contains_2(o){\n  return $indexOf_1(this, o, 0) != -1;\n}\n;\n_.get_0 = function get_2(index_0){\n  return $get_1(this, index_0);\n}\n;\n_.isEmpty = function isEmpty_0(){\n  return this.size_0 == 0;\n}\n;\n_.remove_3 = function remove_19(index_0){\n  return $remove_12(this, index_0);\n}\n;\n_.remove_2 = function remove_20(o){\n  return $remove_13(this, o);\n}\n;\n_.size_1 = function size_3(){\n  return this.size_0;\n}\n;\n_.size_0 = 0;\nfunction $clinit_Collections(){\n  $clinit_Collections = nullMethod;\n  EMPTY_LIST = new Collections$EmptyList_0;\n}\n\nvar EMPTY_LIST;\nfunction Collections$EmptyList_0(){\n}\n\ndefineSeed(292, 285, makeCastMap([Q$Serializable, Q$List]), Collections$EmptyList_0);\n_.contains_0 = function contains_3(object){\n  return false;\n}\n;\n_.get_0 = function get_3(location_0){\n  throw new IndexOutOfBoundsException_0;\n}\n;\n_.size_1 = function size_4(){\n  return 0;\n}\n;\nfunction $equals_0(value1, value2){\n  return maskUndefined(value1) === maskUndefined(value2) || value1 != null && equals__devirtual$(value1, value2);\n}\n\nfunction HashMap_0(){\n  $clearImpl(this);\n}\n\ndefineSeed(293, 277, makeCastMap([Q$Serializable, Q$Map]), HashMap_0);\nfunction $add_11(this$static, o){\n  var old;\n  old = $put(this$static.map_0, o, this$static);\n  return old == null;\n}\n\nfunction $contains_0(this$static, o){\n  return $containsKey(this$static.map_0, o);\n}\n\nfunction $remove_14(this$static, o){\n  return $remove_9(this$static.map_0, o) != null;\n}\n\nfunction HashSet_0(){\n  this.map_0 = new HashMap_0;\n}\n\ndefineSeed(294, 280, makeCastMap([Q$Serializable, Q$Set]), HashSet_0);\n_.add_0 = function add_6(o){\n  return $add_11(this, o);\n}\n;\n_.contains_0 = function contains_4(o){\n  return $contains_0(this, o);\n}\n;\n_.isEmpty = function isEmpty_1(){\n  return this.map_0.size_0 == 0;\n}\n;\n_.iterator = function iterator_8(){\n  return $iterator($keySet(this.map_0));\n}\n;\n_.remove_2 = function remove_21(o){\n  return $remove_14(this, o);\n}\n;\n_.size_1 = function size_5(){\n  return this.map_0.size_0;\n}\n;\n_.toString$ = function toString_15(){\n  return $toString($keySet(this.map_0));\n}\n;\nfunction MapEntryImpl_0(key, value_0){\n  this.key = key;\n  this.value_0 = value_0;\n}\n\ndefineSeed(295, 283, makeCastMap([Q$Map$Entry]), MapEntryImpl_0);\n_.getKey = function getKey_1(){\n  return this.key;\n}\n;\n_.getValue = function getValue_1(){\n  return this.value_0;\n}\n;\n_.setValue = function setValue_1(value_0){\n  var old;\n  old = this.value_0;\n  this.value_0 = value_0;\n  return old;\n}\n;\nfunction NoSuchElementException_0(){\n  RuntimeException_0.call(this);\n}\n\ndefineSeed(296, 19, makeCastMap([Q$Serializable, Q$Throwable]), NoSuchElementException_0);\nfunction equalsWithNullCheck(a, b){\n  return maskUndefined(a) === maskUndefined(b) || a != null && equals__devirtual$(a, b);\n}\n\nfunction Configuration_0(configString){\n  var i, moduleStrings;\n  moduleStrings = $split(configString, ';', 0);\n  this.id_0 = __parseAndValidateInt(moduleStrings[0]);\n  for (i = 1; i < moduleStrings.length; i++) {\n    null[null.length] = new Module_1(moduleStrings[i]);\n  }\n}\n\ndefineSeed(298, 1, {}, Configuration_0);\n_.toString$ = function toString_16(){\n  var configString, m$index, m$max;\n  configString = '' + this.id_0 + ';';\n  for (m$index = 0 , m$max = null.length; m$index < m$max; ++m$index) {\n    configString += null.nullMethod();\n    configString += ';';\n  }\n  return $substring_0(configString, 0, configString.length - 2);\n}\n;\n_.id_0 = -1;\nfunction $clinit_Handlers(){\n  $clinit_Handlers = nullMethod;\n  varModule = new Module_0;\n}\n\nvar varModule;\nfunction Handlers$1_0(){\n}\n\ndefineSeed(300, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), Handlers$1_0);\n_.onClick = function onClick_0(event_0){\n  $clinit_Handlers();\n  varModule = new Module_0;\n}\n;\nfunction $clinit_Module(){\n  $clinit_Module = nullMethod;\n  moduleStrings_0 = initValues(_3Ljava_lang_String_2_classLit, makeCastMap([Q$Serializable]), Q$String, ['Air Lock', 'Plain', 'Dormitory', 'Sanitation', 'Food & Water', 'Gym & Relaxation', 'Canteen', 'Power', 'Control', 'Medical']);\n}\n\nfunction $setCoordinates(this$static, landedCoordinates){\n  this$static.coordinates = landedCoordinates;\n}\n\nfunction $setId_0(this$static, id_0){\n  this$static.id_0 = id_0;\n}\n\nfunction $setInUse(this$static, inUse){\n  this$static.inUse = inUse;\n}\n\nfunction $setOrientation(this$static, orientation){\n  this$static.orientation = orientation;\n}\n\nfunction $setStatus(this$static, status_0){\n  this$static.status_0 = status_0;\n}\n\nfunction $setType(this$static, type_0){\n  this$static.type_0 = type_0;\n}\n\nfunction $toString_0(this$static){\n  var storeString;\n  storeString = '';\n  storeString += this$static.type_0.name_0 + ',';\n  storeString += '' + this$static.id_0 + ',';\n  storeString += $toString_1(this$static.coordinates) + ',';\n  storeString += this$static.status_0.name_0 + ',';\n  storeString += '' + this$static.orientation + ',';\n  this$static.inUse?(storeString += 'true'):(storeString += 'false');\n  return storeString;\n}\n\nfunction Module_0(){\n  $clinit_Module();\n  this.inUse = false;\n  this.type_0 = null;\n  this.id_0 = 0;\n  this.coordinates = null;\n  this.status_0 = null;\n  this.orientation = 0;\n}\n\nfunction Module_1(strModuleString){\n  $clinit_Module();\n  var moduleParts;\n  moduleParts = $split(strModuleString, ',', 0);\n  $setType(this, ($clinit_ModuleType() , $equals(moduleParts[0], 'AIRLOCK')?AIRLOCK:$equals(moduleParts[0], 'FOODWATERSTORAGE')?FOODWATERSTORAGE:$equals(moduleParts[0], 'POWER')?POWER:$equals(moduleParts[0], 'CONTROL')?CONTROL:$equals(moduleParts[0], 'CANTEEN')?CANTEEN:$equals(moduleParts[0], 'PLAIN')?PLAIN:$equals(moduleParts[0], 'DORMITORY')?DORMITORY:$equals(moduleParts[0], 'SANITATION')?SANITATION:$equals(moduleParts[0], 'GYMRELAXATION')?GYMRELAXATION:$equals(moduleParts[0], 'MEDICAL')?MEDICAL:null));\n  $setId_0(this, __parseAndValidateInt(moduleParts[1]));\n  $setCoordinates(this, new Point_1(moduleParts[2]));\n  $setStatus(this, ($clinit_ModuleStatus() , $equals(moduleParts[3], 'USABLE')?USABLE:$equals(moduleParts[3], 'USABLEAFTERREPAIR')?USABLEAFTERREPAIR:$equals(moduleParts[3], 'BEYONDREPAIR')?BEYONDREPAIR:null));\n  $setOrientation(this, __parseAndValidateInt(moduleParts[4]));\n  $setInUse(this, $equals(moduleParts[4], 'true'));\n}\n\nfunction Module_2(type_0, id_0, coordinates, status_0, orientation, inUse){\n  $clinit_Module();\n  this.type_0 = type_0;\n  this.id_0 = id_0;\n  this.coordinates = coordinates;\n  this.status_0 = status_0;\n  this.orientation = orientation;\n  this.inUse = inUse;\n}\n\ndefineSeed(301, 1, makeCastMap([Q$Module]), Module_0, Module_1, Module_2);\n_.toString$ = function toString_17(){\n  return $toString_0(this);\n}\n;\n_.id_0 = 0;\n_.inUse = false;\n_.orientation = 0;\nvar moduleStrings_0;\nfunction $clinit_ModuleStatus(){\n  $clinit_ModuleStatus = nullMethod;\n  USABLE = new ModuleStatus_0('USABLE', 0);\n  USABLEAFTERREPAIR = new ModuleStatus_0('USABLEAFTERREPAIR', 1);\n  BEYONDREPAIR = new ModuleStatus_0('BEYONDREPAIR', 2);\n  $VALUES_7 = initValues(_3Lmhcs_client_ModuleStatus_2_classLit, makeCastMap([Q$Serializable]), Q$ModuleStatus, [USABLE, USABLEAFTERREPAIR, BEYONDREPAIR]);\n}\n\nfunction ModuleStatus_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction getStatusFromUserString(str){\n  $clinit_ModuleStatus();\n  return $equals(str, 'Usable')?USABLE:$equals(str, 'Damaged')?USABLEAFTERREPAIR:$equals(str, 'Unusable')?BEYONDREPAIR:null;\n}\n\nfunction values_8(){\n  $clinit_ModuleStatus();\n  return $VALUES_7;\n}\n\ndefineSeed(302, 55, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$ModuleStatus]), ModuleStatus_0);\nvar $VALUES_7, BEYONDREPAIR, USABLE, USABLEAFTERREPAIR;\nfunction $clinit_ModuleType(){\n  $clinit_ModuleType = nullMethod;\n  AIRLOCK = new ModuleType_0('AIRLOCK', 0);\n  FOODWATERSTORAGE = new ModuleType_0('FOODWATERSTORAGE', 1);\n  POWER = new ModuleType_0('POWER', 2);\n  CONTROL = new ModuleType_0('CONTROL', 3);\n  CANTEEN = new ModuleType_0('CANTEEN', 4);\n  PLAIN = new ModuleType_0('PLAIN', 5);\n  DORMITORY = new ModuleType_0('DORMITORY', 6);\n  SANITATION = new ModuleType_0('SANITATION', 7);\n  GYMRELAXATION = new ModuleType_0('GYMRELAXATION', 8);\n  MEDICAL = new ModuleType_0('MEDICAL', 9);\n  $VALUES_8 = initValues(_3Lmhcs_client_ModuleType_2_classLit, makeCastMap([Q$Serializable]), Q$ModuleType, [AIRLOCK, FOODWATERSTORAGE, POWER, CONTROL, CANTEEN, PLAIN, DORMITORY, SANITATION, GYMRELAXATION, MEDICAL]);\n}\n\nfunction ModuleType_0(enum$name, enum$ordinal){\n  Enum_0.call(this, enum$name, enum$ordinal);\n}\n\nfunction getTypeFromUserString(str){\n  $clinit_ModuleType();\n  return $equals(str, 'Air Lock')?AIRLOCK:$equals(str, 'Food & Water')?FOODWATERSTORAGE:$equals(str, 'Power')?POWER:$equals(str, 'Control')?CONTROL:$equals(str, 'Canteen')?CANTEEN:$equals(str, 'Plain')?PLAIN:$equals(str, 'Dormitory')?DORMITORY:$equals(str, 'Sanitation')?SANITATION:$equals(str, 'Gym & Relaxation')?GYMRELAXATION:$equals(str, 'Medical')?MEDICAL:null;\n}\n\nfunction values_9(){\n  $clinit_ModuleType();\n  return $VALUES_8;\n}\n\ndefineSeed(303, 55, makeCastMap([Q$Serializable, Q$Comparable, Q$Enum, Q$ModuleType]), ModuleType_0);\nvar $VALUES_8, AIRLOCK, CANTEEN, CONTROL, DORMITORY, FOODWATERSTORAGE, GYMRELAXATION, MEDICAL, PLAIN, POWER, SANITATION;\nfunction $toString_1(this$static){\n  return '' + this$static.x_0 + ' ' + this$static.y_0;\n}\n\nfunction Point_0(xp, yp){\n  this.x_0 = xp;\n  this.y_0 = yp;\n}\n\nfunction Point_1(str){\n  this.x_0 = __parseAndValidateInt($split(str, ' ', 0)[0]);\n  this.x_0 = __parseAndValidateInt($split(str, ' ', 0)[1]);\n}\n\ndefineSeed(304, 1, {}, Point_0, Point_1);\n_.toString$ = function toString_18(){\n  return $toString_1(this);\n}\n;\n_.x_0 = 0;\n_.y_0 = 0;\n",
"function $onModuleLoad_0(){\n  var addUserButton, buildConfigButton, cPass, cPassword, changePassword, changePasswordButton, coPass, coPassword, configDock, configHorPanel, configListBox, configVerPanel, confirmPassword, currentPassword, deleteConfigButton, i, loginPanel, m, m$iterator, map_0, moduleCoordinates, moduleDetails, moduleDetailsLabel, moduleRequirements, moduleRequirementsLabel, modulesAddButton, modulesCenterVerPanel, modulesDock, modulesEastCondition, modulesEastId, modulesEastOrientation, modulesEastType, modulesEastVerPanel, modulesImage, modulesLblCondition, modulesLblId, modulesLblOrientation, modulesLblType, modulesListBox, modulesRemoveButton, modulesSaveButton, modulesSouthVerPanel, modulesWestHorPanel, modulesWestVerPanel, nPass, nPassword, newPassword, passwordEnable, passwordEntry, radAirLock, radAll, radCanteen, radControl, radDorm, radFoodAndWater, radGymAndRelax, radMedical, radNone, radPlain, radPower, radSanitation, removeUserButton, roverPathButton, settingsPassPanel, settingsPassVertPanel, settingsUserPanel, settingsVertPanel, submitButton, tabPanel, userNameEntry, users, weatherPanel, weatherText, xCoordinate, xPanel, xTextBox, yCoordinate, yPanel, yTextBox;\n  tabPanel = new TabLayoutPanel_0(($clinit_Style$Unit() , EM));\n  loginPanel = new FlowPanel_0;\n  modulesDock = new DockPanel_0;\n  configDock = new DockPanel_0;\n  settingsPassVertPanel = new VerticalPanel_0;\n  weatherPanel = new SimplePanel_0;\n  userNameEntry = new TextBox_0;\n  passwordEntry = new PasswordTextBox_0;\n  submitButton = new Button_1('Log In');\n  modulesWestVerPanel = new VerticalPanel_0;\n  modulesWestHorPanel = new HorizontalPanel_0;\n  modulesListBox = new ListBox_0;\n  modulesAddButton = new Button_0;\n  modulesRemoveButton = new Button_0;\n  modulesImage = new Image_2('images/image');\n  modulesCenterVerPanel = new VerticalPanel_0;\n  moduleDetailsLabel = new HTML_1('Module Details');\n  moduleDetails = new TextArea_1;\n  modulesSouthVerPanel = new VerticalPanel_0;\n  moduleRequirementsLabel = new HTML_1('Module Requirements');\n  moduleRequirements = new TextArea_1;\n  modulesEastVerPanel = new VerticalPanel_0;\n  modulesLblId = new HTML_1('ID Number');\n  modulesEastId = new TextBox_0;\n  modulesLblType = new HTML_1('Type');\n  modulesEastType = new ListBox_0;\n  modulesLblCondition = new HTML_1('Condition');\n  modulesEastCondition = new ListBox_0;\n  modulesLblOrientation = new HTML_1('Orientation');\n  modulesEastOrientation = new ListBox_0;\n  moduleCoordinates = new HorizontalPanel_0;\n  xPanel = new VerticalPanel_0;\n  yPanel = new VerticalPanel_0;\n  xCoordinate = new HTML_1('X-Coordinate');\n  yCoordinate = new HTML_1('Y-Coordinate');\n  xTextBox = new TextBox_0;\n  yTextBox = new TextBox_0;\n  configListBox = new ListBox_0;\n  map_0 = new Image_2('images/marsMap');\n  configVerPanel = new VerticalPanel_0;\n  radAirLock = new CheckBox_2('Air Lock');\n  radPlain = new CheckBox_2('Plain');\n  radDorm = new CheckBox_2('Dormitory');\n  radSanitation = new CheckBox_2('Sanitation');\n  radFoodAndWater = new CheckBox_2('Food & Water');\n  radGymAndRelax = new CheckBox_2('Gym & Relaxation');\n  radCanteen = new CheckBox_2('Canteen');\n  radPower = new CheckBox_2('Power');\n  radControl = new CheckBox_2('Control');\n  radMedical = new CheckBox_2('Medical');\n  radAll = new RadioButton_0('Select All');\n  radNone = new RadioButton_0('Deselect All');\n  configHorPanel = new HorizontalPanel_0;\n  roverPathButton = new Button_0;\n  deleteConfigButton = new Button_0;\n  buildConfigButton = new Button_0;\n  settingsVertPanel = new VerticalPanel_0;\n  settingsUserPanel = new HorizontalPanel_0;\n  users = new ListBox_0;\n  addUserButton = new Button_0;\n  removeUserButton = new Button_0;\n  settingsPassPanel = new HorizontalPanel_0;\n  passwordEnable = new CheckBox_0;\n  changePasswordButton = new Button_0;\n  changePassword = new HTML_1('Change Password');\n  currentPassword = new HorizontalPanel_0;\n  cPassword = new PasswordTextBox_0;\n  cPass = new HTML_1('Current Password');\n  newPassword = new HorizontalPanel_0;\n  nPassword = new PasswordTextBox_0;\n  nPass = new HTML_1('New Password');\n  confirmPassword = new HorizontalPanel_0;\n  coPassword = new PasswordTextBox_0;\n  coPass = new HTML_1('Current Password');\n  weatherText = new HTML_1('Place holder for the weather');\n  tabPanel.deckPanel.animationDuration = 1000;\n  ($clinit_DOM() , tabPanel.element).style['marginBottom'] = '10px';\n  loginPanel.element.style['height'] = '1500px';\n  $add_3(loginPanel, new Label_1('username:'));\n  $add(loginPanel, userNameEntry, loginPanel.element);\n  $add_3(loginPanel, new Label_1('password:'));\n  $add(loginPanel, passwordEntry, loginPanel.element);\n  $add(loginPanel, submitButton, loginPanel.element);\n  $addDomHandler(submitButton, new View$1_0(passwordEntry, tabPanel), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_0));\n  $setSize(modulesListBox.element, 10);\n  modulesListBox.element.style['height'] = '600px';\n  modulesListBox.element.style['width'] = '300px';\n  $selectClear(modulesListBox.element);\n  for (m$iterator = new AbstractList$IteratorImpl_0(getModuleList()); m$iterator.i < m$iterator.this$0_0.size_1();) {\n    m = dynamicCast($next_2(m$iterator), Q$Module);\n    $insertItem(modulesListBox, 'Module #' + m.id_0);\n  }\n  $addDomHandler(modulesListBox, new View$2_0(modulesListBox), ($clinit_ChangeEvent() , $clinit_ChangeEvent() , TYPE));\n  modulesAddButton.element.style['height'] = '50px';\n  modulesAddButton.element.style['width'] = '150px';\n  modulesRemoveButton.element.style['height'] = '50px';\n  modulesRemoveButton.element.style['width'] = '150px';\n  $setInnerText(modulesAddButton.element, 'ADD');\n  $setInnerText(modulesRemoveButton.element, 'REMOVE');\n  $addDomHandler(modulesRemoveButton, new View$3_0(modulesListBox), TYPE_0);\n  $add_4(modulesWestHorPanel, modulesAddButton);\n  $add_4(modulesWestHorPanel, modulesRemoveButton);\n  $addDomHandler(modulesAddButton, ($clinit_Handlers() , new Handlers$1_0), TYPE_0);\n  $add_7(modulesWestVerPanel, modulesListBox);\n  $add_7(modulesWestVerPanel, modulesWestHorPanel);\n  modulesImage.element.style['height'] = '200px';\n  modulesImage.element.style['width'] = '250px';\n  moduleDetails.element.style['height'] = '175px';\n  moduleDetails.element.style['width'] = '800px';\n  $add_7(modulesCenterVerPanel, moduleDetailsLabel);\n  $add_7(modulesCenterVerPanel, moduleDetails);\n  $setPropertyString(moduleRequirements.element, 'value', 'module requirements module requirements module requirements');\n  moduleRequirements.element['readOnly'] = true;\n  $setStyleName_0(moduleRequirements, getStylePrimaryName(moduleRequirements.element) + '-readonly', true);\n  moduleRequirements.element.style['height'] = '175px';\n  moduleRequirements.element.style['width'] = '800px';\n  $add_7(modulesSouthVerPanel, moduleRequirementsLabel);\n  $add_7(modulesSouthVerPanel, moduleRequirements);\n  modulesEastId.element.style['width'] = '300px';\n  for (i = 0; i < ($clinit_Module() , moduleStrings_0).length; i++) {\n    $insertItem(modulesEastType, moduleStrings_0[i]);\n  }\n  $setSize(modulesEastType.element, 10);\n  modulesEastType.element.style['width'] = '300px';\n  $insertItem_0(modulesEastCondition, 'Usable', 'Usable', -1);\n  $insertItem_0(modulesEastCondition, 'Damaged', 'Damaged', -1);\n  $insertItem_0(modulesEastCondition, 'Unusable', 'Unusable', -1);\n  $setSize(modulesEastCondition.element, 3);\n  modulesEastCondition.element.style['width'] = '300px';\n  $insertItem_0(modulesEastOrientation, '0 turns', '0 turns', -1);\n  $insertItem_0(modulesEastOrientation, '1 turns', '1 turns', -1);\n  $insertItem_0(modulesEastOrientation, '2 turns', '2 turns', -1);\n  $setSize(modulesEastOrientation.element, 3);\n  modulesEastOrientation.element.style['width'] = '300px';\n  xTextBox.element.style['width'] = '140px';\n  yTextBox.element.style['width'] = '140px';\n  $add_7(xPanel, xCoordinate);\n  $add_7(xPanel, xTextBox);\n  $add_7(yPanel, yCoordinate);\n  $add_7(yPanel, yTextBox);\n  $add_4(moduleCoordinates, xPanel);\n  $add_4(moduleCoordinates, yPanel);\n  modulesSaveButton = new Button_0;\n  modulesSaveButton.element.style['height'] = '50px';\n  modulesSaveButton.element.style['width'] = '300px';\n  $setInnerText(modulesSaveButton.element, 'SAVE');\n  $addDomHandler(modulesSaveButton, new View$4_0(modulesEastType, modulesEastId, xTextBox, yTextBox, modulesEastCondition, modulesEastOrientation, modulesListBox), TYPE_0);\n  $add_7(modulesEastVerPanel, modulesLblId);\n  $add_7(modulesEastVerPanel, modulesEastId);\n  $add_7(modulesEastVerPanel, modulesLblType);\n  $add_7(modulesEastVerPanel, modulesEastType);\n  $add_7(modulesEastVerPanel, modulesLblCondition);\n  $add_7(modulesEastVerPanel, modulesEastCondition);\n  $add_7(modulesEastVerPanel, modulesLblOrientation);\n  $add_7(modulesEastVerPanel, modulesEastOrientation);\n  $add_7(modulesEastVerPanel, moduleCoordinates);\n  $add_7(modulesEastVerPanel, modulesSaveButton);\n  $setPropertyInt(modulesEastVerPanel.table, 'cellSpacing', 12);\n  $setPropertyInt(modulesDock.table, 'cellSpacing', 5);\n  $setHorizontalAlignment(modulesDock, ($clinit_HasHorizontalAlignment() , ALIGN_CENTER));\n  $setPropertyString(modulesDock.table, 'border', '2');\n  modulesDock.element.style['width'] = '1500px';\n  modulesDock.element.style['height'] = '600px';\n  $add_2(modulesDock, new HTML_1('Modules'), ($clinit_DockPanel() , NORTH));\n  $add_2(modulesDock, new HTML_1('Naples Spring 2015'), SOUTH);\n  $add_2(modulesDock, modulesEastVerPanel, EAST);\n  $add_2(modulesDock, modulesWestVerPanel, WEST);\n  $add_2(modulesDock, modulesImage, NORTH);\n  $add_2(modulesDock, modulesSouthVerPanel, SOUTH);\n  $add_2(modulesDock, modulesCenterVerPanel, CENTER_0);\n  $setSize(configListBox.element, 10);\n  configListBox.element.style['height'] = '650px';\n  configListBox.element.style['width'] = '300px';\n  map_0.element.style['height'] = '560px';\n  map_0.element.style['width'] = '1000px';\n  $setTextOrHtml(radAirLock.directionalTextHelper, 'Air Lock', false);\n  $setTextOrHtml(radPlain.directionalTextHelper, 'Plain', false);\n  $setTextOrHtml(radDorm.directionalTextHelper, 'Dormitory', false);\n  $setTextOrHtml(radSanitation.directionalTextHelper, 'Sanitation', false);\n  $setTextOrHtml(radFoodAndWater.directionalTextHelper, 'Food & Water', false);\n  $setTextOrHtml(radGymAndRelax.directionalTextHelper, 'Gym & Relaxation', false);\n  $setTextOrHtml(radCanteen.directionalTextHelper, 'Canteen', false);\n  $setTextOrHtml(radPower.directionalTextHelper, 'Power', false);\n  $setTextOrHtml(radControl.directionalTextHelper, 'Control', false);\n  $setTextOrHtml(radMedical.directionalTextHelper, 'Medical', false);\n  $setTextOrHtml(radNone.directionalTextHelper, 'Deselect All', false);\n  $setTextOrHtml(radAll.directionalTextHelper, 'Select All', false);\n  $replaceInputElement(radAll, $createInputRadioElement($doc, 'MapModules'));\n  $replaceInputElement(radNone, $createInputRadioElement($doc, 'MapModules'));\n  $add_7(configVerPanel, radAirLock);\n  $add_7(configVerPanel, radPlain);\n  $add_7(configVerPanel, radDorm);\n  $add_7(configVerPanel, radSanitation);\n  $add_7(configVerPanel, radFoodAndWater);\n  $add_7(configVerPanel, radGymAndRelax);\n  $add_7(configVerPanel, radCanteen);\n  $add_7(configVerPanel, radPower);\n  $add_7(configVerPanel, radControl);\n  $add_7(configVerPanel, radMedical);\n  $add_7(configVerPanel, radAll);\n  $add_7(configVerPanel, radNone);\n  configVerPanel.element.style['height'] = '600px';\n  roverPathButton.element.style['height'] = '50px';\n  roverPathButton.element.style['width'] = '300px';\n  deleteConfigButton.element.style['height'] = '50px';\n  deleteConfigButton.element.style['width'] = '300px';\n  buildConfigButton.element.style['height'] = '50px';\n  buildConfigButton.element.style['width'] = '300px';\n  $setInnerText(roverPathButton.element, 'Rover Path');\n  $setInnerText(deleteConfigButton.element, 'Delete Configuration');\n  $setInnerText(buildConfigButton.element, 'Build Configuration');\n  $add_4(configHorPanel, roverPathButton);\n  $add_4(configHorPanel, deleteConfigButton);\n  $add_4(configHorPanel, buildConfigButton);\n  $setPropertyInt(configDock.table, 'cellSpacing', 5);\n  $setHorizontalAlignment(configDock, ALIGN_CENTER);\n  $setPropertyString(configDock.table, 'border', '2');\n  configDock.element.style['width'] = '1500px';\n  configDock.element.style['height'] = '600px';\n  $add_2(configDock, new HTML_1('Configurations'), NORTH);\n  $add_2(configDock, new HTML_1('Naples Spring 2015'), SOUTH);\n  $add_2(configDock, configVerPanel, EAST);\n  $add_2(configDock, configListBox, WEST);\n  $add_2(configDock, new HTML_1('Map'), NORTH);\n  $add_2(configDock, configHorPanel, SOUTH);\n  $add_2(configDock, map_0, CENTER_0);\n  $setInnerText(addUserButton.element, 'Add User');\n  $setInnerText(removeUserButton.element, 'Remove User');\n  addUserButton.element.style['height'] = '35px';\n  addUserButton.element.style['width'] = '130px';\n  removeUserButton.element.style['height'] = '35px';\n  removeUserButton.element.style['width'] = '130px';\n  $add_4(settingsUserPanel, users);\n  $add_4(settingsUserPanel, addUserButton);\n  $add_4(settingsUserPanel, removeUserButton);\n  $setPropertyInt(settingsUserPanel.table, 'cellSpacing', 10);\n  $setTextOrHtml(passwordEnable.directionalTextHelper, 'Password Enabled', false);\n  passwordEnable.element.style['height'] = '20px';\n  $setInnerText(changePasswordButton.element, 'Change Password');\n  changePasswordButton.element.style['height'] = '35px';\n  changePasswordButton.element.style['width'] = '130px';\n  $add_4(settingsPassPanel, passwordEnable);\n  $add_4(settingsPassPanel, changePasswordButton);\n  $setPropertyInt(settingsPassPanel.table, 'cellSpacing', 10);\n  changePassword.element.style['height'] = '20px';\n  $setPropertyInt(settingsPassVertPanel.table, 'cellSpacing', 5);\n  $add_4(currentPassword, cPassword);\n  $add_4(currentPassword, cPass);\n  $setPropertyInt(currentPassword.table, 'cellSpacing', 10);\n  $add_4(newPassword, nPassword);\n  $add_4(newPassword, nPass);\n  $setPropertyInt(newPassword.table, 'cellSpacing', 10);\n  $add_4(confirmPassword, coPassword);\n  $add_4(confirmPassword, coPass);\n  $setPropertyInt(confirmPassword.table, 'cellSpacing', 10);\n  $add_7(settingsPassVertPanel, changePassword);\n  $add_7(settingsPassVertPanel, currentPassword);\n  $add_7(settingsPassVertPanel, newPassword);\n  $add_7(settingsPassVertPanel, confirmPassword);\n  $setPropertyInt(settingsPassVertPanel.table, 'cellSpacing', 5);\n  $setPropertyString(settingsPassVertPanel.table, 'border', '2');\n  $add_7(settingsVertPanel, settingsUserPanel);\n  $add_7(settingsVertPanel, settingsPassPanel);\n  $add_7(settingsVertPanel, settingsPassVertPanel);\n  $setPropertyInt(settingsVertPanel.table, 'cellSpacing', 10);\n  $setPropertyString(settingsVertPanel.table, 'border', '2');\n  $add_1(weatherPanel, weatherText);\n  $insert_5(tabPanel, modulesDock, 'Modules', tabPanel.deckPanel.children.size_0);\n  $insert_5(tabPanel, configDock, 'Configurations', tabPanel.deckPanel.children.size_0);\n  $insert_5(tabPanel, settingsVertPanel, 'Settings', tabPanel.deckPanel.children.size_0);\n  $insert_5(tabPanel, weatherPanel, 'Weather', tabPanel.deckPanel.children.size_0);\n  $add_6(tabPanel, new HTML_1('Logout'));\n  $add_5(get_0(), loginPanel);\n}\n\nfunction View$1_0(val$passwordEntry, val$tabPanel){\n  this.val$passwordEntry = val$passwordEntry;\n  this.val$tabPanel = val$tabPanel;\n}\n\ndefineSeed(306, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), View$1_0);\n_.onClick = function onClick_1(event_0){\n  var closeButton, details, dialogBox, dialogContents, image;\n  if ($equals($getPropertyString($getElement(this.val$passwordEntry), 'value'), 'guest')) {\n    $clear(get_0());\n    $add_5(get_0(), this.val$tabPanel);\n  }\n   else {\n    dialogBox = new DialogBox_0;\n    $setTextOrHtml(dialogBox.caption.directionalTextHelper, 'Password Error', false);\n    dialogContents = new VerticalPanel_0;\n    $setPropertyInt(dialogContents.table, 'cellSpacing', 4);\n    $setWidget(dialogBox.decPanel, dialogContents);\n    $maybeUpdateSize(dialogBox);\n    details = new HTML_1('You have entered an incorrect password.');\n    $add_7(dialogContents, details);\n    $setCellHorizontalAlignment_0(dialogContents, details, ($clinit_HasHorizontalAlignment() , ALIGN_CENTER));\n    image = new Image_2('images/passwordError');\n    $add_7(dialogContents, image);\n    $setCellHorizontalAlignment_0(dialogContents, image, ALIGN_CENTER);\n    closeButton = new Button_2(new View$1$1_0(dialogBox));\n    $add_7(dialogContents, closeButton);\n    $setCellHorizontalAlignment_0(dialogContents, closeButton, ALIGN_RIGHT);\n    !dialogBox.resizeHandlerRegistration && (dialogBox.resizeHandlerRegistration = addResizeHandler(new DialogBox$1_0(dialogBox)));\n    $show(dialogBox);\n  }\n}\n;\nfunction View$1$1_0(val$dialogBox){\n  this.val$dialogBox = val$dialogBox;\n}\n\ndefineSeed(307, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), View$1$1_0);\n_.onClick = function onClick_2(event_0){\n  $hide_0(this.val$dialogBox, false);\n}\n;\nfunction $onChange(this$static){\n  var m, m$iterator, moduleString;\n  moduleString = $getItemText(this$static.val$modulesListBox, $getSelectElement(this$static.val$modulesListBox).selectedIndex);\n  moduleString = $substring(moduleString, 8);\n  for (m$iterator = new AbstractList$IteratorImpl_0(getModuleList()); m$iterator.i < m$iterator.this$0_0.size_1();) {\n    m = dynamicCast($next_2(m$iterator), Q$Module);\n    m.id_0 == __parseAndValidateInt(moduleString) && m;\n  }\n}\n\nfunction View$2_0(val$modulesListBox){\n  this.val$modulesListBox = val$modulesListBox;\n}\n\ndefineSeed(308, 1, makeCastMap([Q$ChangeHandler, Q$EventHandler]), View$2_0);\nfunction View$3_0(val$modulesListBox){\n  this.val$modulesListBox = val$modulesListBox;\n}\n\ndefineSeed(309, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), View$3_0);\n_.onClick = function onClick_3(event_0){\n  var moduleString;\n  moduleString = $getItemText(this.val$modulesListBox, $getSelectElement(this.val$modulesListBox).selectedIndex);\n  moduleString = $substring(moduleString, 8);\n  removeModuleFromId(__parseAndValidateInt(moduleString));\n  $removeItem_1(this.val$modulesListBox, $getSelectElement(this.val$modulesListBox).selectedIndex);\n}\n;\nfunction View$4_0(val$modulesEastType, val$modulesEastId, val$xTextBox, val$yTextBox, val$modulesEastCondition, val$modulesEastOrientation, val$modulesListBox){\n  this.val$modulesEastType = val$modulesEastType;\n  this.val$modulesEastId = val$modulesEastId;\n  this.val$xTextBox = val$xTextBox;\n  this.val$yTextBox = val$yTextBox;\n  this.val$modulesEastCondition = val$modulesEastCondition;\n  this.val$modulesEastOrientation = val$modulesEastOrientation;\n  this.val$modulesListBox = val$modulesListBox;\n}\n\ndefineSeed(310, 1, makeCastMap([Q$ClickHandler, Q$EventHandler]), View$4_0);\n_.onClick = function onClick_4(event_0){\n  var coordinates, id_0, m, m$iterator, orientation, status_0, type_0;\n  type_0 = getTypeFromUserString($getItemText(this.val$modulesEastType, $getSelectElement(this.val$modulesEastType).selectedIndex));\n  id_0 = __parseAndValidateInt($getPropertyString($getElement(this.val$modulesEastId), 'value'));\n  coordinates = new Point_0(__parseAndValidateInt($getPropertyString($getElement(this.val$xTextBox), 'value')), __parseAndValidateInt($getPropertyString($getElement(this.val$yTextBox), 'value')));\n  status_0 = getStatusFromUserString($getItemText(this.val$modulesEastCondition, $getSelectElement(this.val$modulesEastCondition).selectedIndex));\n  orientation = $getSelectElement(this.val$modulesEastOrientation).selectedIndex;\n  saveModule(new Module_2(type_0, id_0, coordinates, status_0, orientation, false));\n  $selectClear($getSelectElement(this.val$modulesListBox));\n  for (m$iterator = new AbstractList$IteratorImpl_0(getModuleList()); m$iterator.i < m$iterator.this$0_0.size_1();) {\n    m = dynamicCast($next_2(m$iterator), Q$Module);\n    $insertItem(this.val$modulesListBox, 'Module #' + m.id_0);\n  }\n}\n;\nfunction $clinit_Data(){\n  $clinit_Data = nullMethod;\n  toLoad = new Load_0;\n  toSave_0 = new Save_0;\n  moduleList = toLoad.moduleList;\n}\n\nfunction findListNumber(module){\n  var compare, i;\n  for (i = 0; i < moduleList.size_0; i++) {\n    compare = dynamicCast($get_1(moduleList, i), Q$Module);\n    if (module.id_0 == compare.id_0) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction getModuleList(){\n  $clinit_Data();\n  var moduleList1;\n  moduleList1 = new ArrayList_1(moduleList);\n  return new ArrayList_1(moduleList1);\n}\n\nfunction removeModuleFromId(id_0){\n  $clinit_Data();\n  var m;\n  m = new Module_2(($clinit_ModuleType() , PLAIN), id_0, new Point_0(0, 0), ($clinit_ModuleStatus() , BEYONDREPAIR), 2, true);\n  $remove_12(moduleList, findListNumber(m));\n  $removeAllModules(toSave_0);\n  $saveModules(toSave_0, moduleList);\n}\n\nfunction saveModule(toSave){\n  $clinit_Data();\n  var m, m$iterator;\n  for (m$iterator = new AbstractList$IteratorImpl_0(getModuleList()); m$iterator.i < m$iterator.this$0_0.size_1();) {\n    m = dynamicCast($next_2(m$iterator), Q$Module);\n    if (m.id_0 == toSave.id_0) {\n      $remove_12(moduleList, findListNumber(toSave));\n      $removeAllModules(toSave_0);\n      $saveModules(toSave_0, moduleList);\n      $add_10(moduleList, toSave);\n      $saveModules(toSave_0, moduleList);\n      return;\n    }\n  }\n  $add_10(moduleList, toSave);\n  $saveModules(toSave_0, moduleList);\n}\n\nvar moduleList, toLoad, toSave_0;\nfunction $loadConfigurations(this$static){\n  var i, newConfig;\n  if ($getItem(this$static.stockStore, 'intConfigCount') != null) {\n    for (i = 0; i <= __parseAndValidateInt($getItem(this$static.stockStore, 'intConfigCount')); i++) {\n      newConfig = new Configuration_0($getItem(this$static.stockStore, 'C' + i));\n      $add_10(this$static.configurationList, newConfig);\n    }\n  }\n}\n\nfunction $loadModules(this$static){\n  var i, newModule;\n  if ($getItem(this$static.stockStore, 'intModCount') != null) {\n    for (i = 0; i < __parseAndValidateInt($getItem(this$static.stockStore, 'intModCount')); i++) {\n      newModule = new Module_1($getItem(this$static.stockStore, '' + i));\n      $add_10(this$static.moduleList, newModule);\n    }\n  }\n}\n\nfunction $loadSettings(this$static){\n  this$static.stockStore = getLocalStorageIfSupported();\n  if (this$static.stockStore) {\n    $getItem(this$static.stockStore, 'passwordflag') == 'true';\n    $getItem(this$static.stockStore, 'password');\n  }\n}\n\nfunction Load_0(){\n  this.moduleList = new ArrayList_0;\n  this.configurationList = new ArrayList_0;\n  this.stockStore = getLocalStorageIfSupported();\n  $loadModules(this);\n  $loadSettings(this);\n  $loadConfigurations(this);\n}\n\ndefineSeed(312, 1, {}, Load_0);\n_.stockStore = null;\nfunction $removeAllModules(this$static){\n  var i;\n  for (i = 0; i < __parseAndValidateInt($getItem(this$static.stockStore, 'intModCount')); i++) {\n    $removeItem(this$static.stockStore, 'C' + i);\n  }\n  $setItem(this$static.stockStore, 'intModCount', '0');\n}\n\nfunction $saveModules(this$static, toSave){\n  var i;\n  for (i = 0; i < toSave.size_0; i++) {\n    $setItem(this$static.stockStore, '' + i, $toString_0((checkIndex(i, toSave.size_0) , dynamicCast(toSave.array[i], Q$Module))));\n  }\n  $setItem(this$static.stockStore, 'intModCount', '' + toSave.size_0);\n}\n\nfunction Save_0(){\n  this.stockStore = getLocalStorageIfSupported();\n  $getItem(this.stockStore, 'intModCount') != null && __parseAndValidateInt($getItem(this.stockStore, 'intModCount'));\n}\n\ndefineSeed(313, 1, {}, Save_0);\n_.stockStore = null;\nvar $entry = registerEntry();\nfunction gwtOnLoad(errFn, modName, modBase, softPermutationId){\n  $moduleName = modName;\n  $moduleBase = modBase;\n  if (errFn)\n    try {\n      $entry(init)();\n    }\n     catch (e) {\n      errFn(modName);\n    }\n   else {\n    $entry(init)();\n  }\n}\n\n",
"var Ljava_lang_Object_2_classLit = createForClass('java.lang.', 'Object', 1), Lcom_google_gwt_core_client_Scheduler_2_classLit = createForClass('com.google.gwt.core.client.', 'Scheduler', 25), Lcom_google_gwt_core_client_JavaScriptObject_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptObject$', 22), _3I_classLit = createForArray('', '[I', 319), _3Ljava_lang_Object_2_classLit = createForArray('[Ljava.lang.', 'Object;', 317), Ljava_lang_Throwable_2_classLit = createForClass('java.lang.', 'Throwable', 21), Ljava_lang_Exception_2_classLit = createForClass('java.lang.', 'Exception', 20), Ljava_lang_RuntimeException_2_classLit = createForClass('java.lang.', 'RuntimeException', 19), Ljava_lang_StackTraceElement_2_classLit = createForClass('java.lang.', 'StackTraceElement', 271), _3Ljava_lang_StackTraceElement_2_classLit = createForArray('[Ljava.lang.', 'StackTraceElement;', 320), Lcom_google_gwt_lang_SeedUtil_2_classLit = createForClass('com.google.gwt.lang.', 'SeedUtil', 131), Ljava_lang_Enum_2_classLit = createForClass('java.lang.', 'Enum', 55), Ljava_lang_Boolean_2_classLit = createForClass('java.lang.', 'Boolean', 257), Ljava_lang_Number_2_classLit = createForClass('java.lang.', 'Number', 265), _3C_classLit = createForArray('', '[C', 321), Ljava_lang_Class_2_classLit = createForClass('java.lang.', 'Class', 259), Ljava_lang_Integer_2_classLit = createForClass('java.lang.', 'Integer', 264), _3Ljava_lang_Integer_2_classLit = createForArray('[Ljava.lang.', 'Integer;', 322), Ljava_lang_String_2_classLit = createForClass('java.lang.', 'String', 2), _3Ljava_lang_String_2_classLit = createForArray('[Ljava.lang.', 'String;', 318), Lmhcs_client_View$1_2_classLit = createForClass('mhcs.client.', 'View$1', 306), Lmhcs_client_View$1$1_2_classLit = createForClass('mhcs.client.', 'View$1$1', 307), Lmhcs_client_View$2_2_classLit = createForClass('mhcs.client.', 'View$2', 308), Lmhcs_client_View$3_2_classLit = createForClass('mhcs.client.', 'View$3', 309), Lmhcs_client_View$4_2_classLit = createForClass('mhcs.client.', 'View$4', 310), Ljava_lang_ClassCastException_2_classLit = createForClass('java.lang.', 'ClassCastException', 260), Lcom_google_gwt_core_client_JavaScriptException_2_classLit = createForClass('com.google.gwt.core.client.', 'JavaScriptException', 18), Ljava_lang_StringBuilder_2_classLit = createForClass('java.lang.', 'StringBuilder', 274), Ljava_lang_ArrayStoreException_2_classLit = createForClass('java.lang.', 'ArrayStoreException', 256), Lcom_google_gwt_user_client_ui_UIObject_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'UIObject', 177), Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Widget', 176), Lcom_google_gwt_user_client_ui_Composite_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Composite', 186), Lcom_google_gwt_user_client_ui_ResizeComposite_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ResizeComposite', 229), Lcom_google_gwt_user_client_ui_TabLayoutPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TabLayoutPanel', 237), Lcom_google_gwt_user_client_ui_Panel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Panel', 175), Lcom_google_gwt_user_client_ui_SimplePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SimplePanel', 193), Lcom_google_gwt_user_client_ui_TabLayoutPanel$Tab_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TabLayoutPanel$Tab', 239), Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ComplexPanel', 174), Lcom_google_gwt_user_client_ui_DeckLayoutPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DeckLayoutPanel', 187), Lcom_google_gwt_user_client_ui_TabLayoutPanel$TabbedDeckLayoutPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TabLayoutPanel$TabbedDeckLayoutPanel', 240), Lcom_google_gwt_user_client_ui_TabLayoutPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TabLayoutPanel$1', 238), Lcom_google_gwt_user_client_ui_SimplePanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'SimplePanel$1', 236), Lcom_google_gwt_user_client_ui_LayoutCommand_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'LayoutCommand', 189), Lcom_google_gwt_user_client_ui_DeckLayoutPanel$DeckAnimateCommand_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DeckLayoutPanel$DeckAnimateCommand', 188), Lcom_google_gwt_user_client_ui_DeckLayoutPanel$DeckAnimateCommand$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DeckLayoutPanel$DeckAnimateCommand$1', 190), Lcom_google_web_bindery_event_shared_UmbrellaException_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'UmbrellaException', 121), Lcom_google_gwt_event_shared_UmbrellaException_2_classLit = createForClass('com.google.gwt.event.shared.', 'UmbrellaException', 120), Lcom_google_gwt_user_client_ui_AttachDetachException_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException', 178), Lcom_google_gwt_user_client_ui_AttachDetachException$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$1', 179), Lcom_google_gwt_user_client_ui_AttachDetachException$2_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AttachDetachException$2', 180), Lcom_google_gwt_user_client_ui_LayoutCommand$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'LayoutCommand$1', 216), Lcom_google_gwt_layout_client_Layout_2_classLit = createForClass('com.google.gwt.layout.client.', 'Layout', 134), Lcom_google_gwt_layout_client_Layout$Layer_2_classLit = createForClass('com.google.gwt.layout.client.', 'Layout$Layer', 136), Lcom_google_gwt_animation_client_Animation_2_classLit = createForClass('com.google.gwt.animation.client.', 'Animation', 3), Lcom_google_gwt_layout_client_Layout$1_2_classLit = createForClass('com.google.gwt.layout.client.', 'Layout$1', 135), Lcom_google_gwt_animation_client_Animation$1_2_classLit = createForClass('com.google.gwt.animation.client.', 'Animation$1', 4), Lcom_google_gwt_animation_client_AnimationScheduler_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationScheduler', 5), Lcom_google_gwt_animation_client_AnimationScheduler$AnimationHandle_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationScheduler$AnimationHandle', 6), Lcom_google_gwt_user_client_ui_CellPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'CellPanel', 184), Lcom_google_gwt_user_client_ui_DockPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DockPanel', 203), Lcom_google_gwt_user_client_ui_DockPanel$TmpRow_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DockPanel$TmpRow', 206), _3Lcom_google_gwt_user_client_ui_DockPanel$TmpRow_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'DockPanel$TmpRow;', 323), Lcom_google_gwt_user_client_ui_DockPanel$DockLayoutConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DockPanel$DockLayoutConstant', 204), Lcom_google_gwt_user_client_ui_DockPanel$LayoutData_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DockPanel$LayoutData', 205), Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$AutoHorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasHorizontalAlignment$AutoHorizontalAlignmentConstant', 208), Lcom_google_gwt_user_client_ui_HasHorizontalAlignment$HorizontalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasHorizontalAlignment$HorizontalAlignmentConstant', 209), Lcom_google_gwt_user_client_ui_HasVerticalAlignment$VerticalAlignmentConstant_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HasVerticalAlignment$VerticalAlignmentConstant', 210), Lcom_google_gwt_user_client_ui_VerticalPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'VerticalPanel', 247), Lcom_google_gwt_user_client_ui_FocusWidget_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FocusWidget', 183), Lcom_google_gwt_user_client_ui_ValueBoxBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ValueBoxBase', 222), Lcom_google_gwt_user_client_ui_TextBoxBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextBoxBase', 221), Lcom_google_gwt_user_client_ui_TextBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextBox', 220), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment', 242, values_7), _3Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment;', 324), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$1_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$1', 243, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$2_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$2', 244, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$3_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$3', 245, null), Lcom_google_gwt_user_client_ui_ValueBoxBase$TextAlignment$4_2_classLit = createForEnum('com.google.gwt.user.client.ui.', 'ValueBoxBase$TextAlignment$4', 246, null), Lcom_google_gwt_i18n_client_AutoDirectionHandler_2_classLit = createForClass('com.google.gwt.i18n.client.', 'AutoDirectionHandler', 122), Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForEnum('com.google.gwt.i18n.client.', 'HasDirection$Direction', 124, values_6), _3Lcom_google_gwt_i18n_client_HasDirection$Direction_2_classLit = createForArray('[Lcom.google.gwt.i18n.client.', 'HasDirection$Direction;', 325), Lcom_google_gwt_user_client_ui_ButtonBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ButtonBase', 182), Lcom_google_gwt_user_client_ui_Button_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Button', 181), Lcom_google_gwt_user_client_ui_HorizontalPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HorizontalPanel', 211), Lcom_google_gwt_user_client_ui_ListBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'ListBox', 218), Lcom_google_gwt_user_client_ui_Image_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image', 212), Lcom_google_gwt_user_client_ui_Image$State_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image$State', 213), Lcom_google_gwt_user_client_ui_Image$UnclippedState_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image$UnclippedState', 215), Lcom_google_gwt_user_client_ui_Image$State$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Image$State$1', 214), Lcom_google_gwt_user_client_ui_LabelBase_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'LabelBase', 200), Lcom_google_gwt_user_client_ui_Label_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'Label', 199), Lcom_google_gwt_user_client_ui_HTML_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'HTML', 198), Lcom_google_gwt_user_client_ui_TextArea_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'TextArea', 241), Lcom_google_gwt_user_client_ui_CheckBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'CheckBox', 185), Lcom_google_gwt_user_client_ui_RadioButton_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RadioButton', 228), Lcom_google_gwt_user_client_ui_PasswordTextBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PasswordTextBox', 219), Lmhcs_client_Module_2_classLit = createForClass('mhcs.client.', 'Module', 301), Lcom_google_gwt_dom_client_Style$Unit_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit', 75, values_4), _3Lcom_google_gwt_dom_client_Style$Unit_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Unit;', 326), Lcom_google_gwt_dom_client_Style$Display_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display', 54, values_0), _3Lcom_google_gwt_dom_client_Style$Display_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Display;', 327), Lcom_google_gwt_dom_client_Style$Overflow_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow', 60, values_1), _3Lcom_google_gwt_dom_client_Style$Overflow_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Overflow;', 328), Lcom_google_gwt_dom_client_Style$Position_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position', 65, values_2), _3Lcom_google_gwt_dom_client_Style$Position_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Position;', 329), Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign', 70, values_3), _3Lcom_google_gwt_dom_client_Style$TextAlign_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$TextAlign;', 330), Lcom_google_gwt_dom_client_Style$Visibility_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Visibility', 85, values_5), _3Lcom_google_gwt_dom_client_Style$Visibility_2_classLit = createForArray('[Lcom.google.gwt.dom.client.', 'Style$Visibility;', 331), Lcom_google_gwt_dom_client_Style$Unit$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$1', 76, null), Lcom_google_gwt_dom_client_Style$Unit$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$2', 77, null), Lcom_google_gwt_dom_client_Style$Unit$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$3', 78, null), Lcom_google_gwt_dom_client_Style$Unit$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$4', 79, null), Lcom_google_gwt_dom_client_Style$Unit$5_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$5', 80, null), Lcom_google_gwt_dom_client_Style$Unit$6_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$6', 81, null), Lcom_google_gwt_dom_client_Style$Unit$7_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$7', 82, null), Lcom_google_gwt_dom_client_Style$Unit$8_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$8', 83, null), Lcom_google_gwt_dom_client_Style$Unit$9_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Unit$9', 84, null), Lcom_google_gwt_dom_client_Style$Display$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$1', 56, null), Lcom_google_gwt_dom_client_Style$Display$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$2', 57, null), Lcom_google_gwt_dom_client_Style$Display$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$3', 58, null), Lcom_google_gwt_dom_client_Style$Display$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Display$4', 59, null), Lcom_google_gwt_dom_client_Style$Overflow$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$1', 61, null), Lcom_google_gwt_dom_client_Style$Overflow$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$2', 62, null), Lcom_google_gwt_dom_client_Style$Overflow$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$3', 63, null), Lcom_google_gwt_dom_client_Style$Overflow$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Overflow$4', 64, null), Lcom_google_gwt_dom_client_Style$Position$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$1', 66, null), Lcom_google_gwt_dom_client_Style$Position$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$2', 67, null), Lcom_google_gwt_dom_client_Style$Position$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$3', 68, null), Lcom_google_gwt_dom_client_Style$Position$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Position$4', 69, null), Lcom_google_gwt_dom_client_Style$TextAlign$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$1', 71, null), Lcom_google_gwt_dom_client_Style$TextAlign$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$2', 72, null), Lcom_google_gwt_dom_client_Style$TextAlign$3_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$3', 73, null), Lcom_google_gwt_dom_client_Style$TextAlign$4_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$TextAlign$4', 74, null), Lcom_google_gwt_dom_client_Style$Visibility$1_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Visibility$1', 86, null), Lcom_google_gwt_dom_client_Style$Visibility$2_2_classLit = createForEnum('com.google.gwt.dom.client.', 'Style$Visibility$2', 87, null), Lcom_google_gwt_user_client_ui_FlowPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'FlowPanel', 207), Lmhcs_client_Handlers$1_2_classLit = createForClass('mhcs.client.', 'Handlers$1', 300), Lcom_google_gwt_user_client_ui_LayoutPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'LayoutPanel', 217), Lcom_google_gwt_user_client_ui_RootLayoutPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootLayoutPanel', 230), Lcom_google_gwt_user_client_ui_RootLayoutPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootLayoutPanel$1', 231), Ljava_lang_NullPointerException_2_classLit = createForClass('java.lang.', 'NullPointerException', 268), Ljava_lang_IllegalArgumentException_2_classLit = createForClass('java.lang.', 'IllegalArgumentException', 261), Lcom_google_gwt_core_client_impl_StringBufferImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImpl', 33), Lcom_google_web_bindery_event_shared_Event_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event', 96), Lcom_google_gwt_event_shared_GwtEvent_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent', 95), Lcom_google_gwt_user_client_Window$ClosingEvent_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$ClosingEvent', 160), Lcom_google_gwt_event_shared_HandlerManager_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager', 115), Lcom_google_gwt_user_client_Window$WindowHandlers_2_classLit = createForClass('com.google.gwt.user.client.', 'Window$WindowHandlers', 161), Lcom_google_web_bindery_event_shared_Event$Type_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'Event$Type', 102), Lcom_google_gwt_event_shared_GwtEvent$Type_2_classLit = createForClass('com.google.gwt.event.shared.', 'GwtEvent$Type', 101), Lcom_google_web_bindery_event_shared_EventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'EventBus', 118), Lcom_google_web_bindery_event_shared_SimpleEventBus_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus', 117), Lcom_google_gwt_event_shared_HandlerManager$Bus_2_classLit = createForClass('com.google.gwt.event.shared.', 'HandlerManager$Bus', 116), Lcom_google_web_bindery_event_shared_SimpleEventBus$1_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$1', 253), Lcom_google_web_bindery_event_shared_SimpleEventBus$2_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$2', 254), Lcom_google_web_bindery_event_shared_SimpleEventBus$3_2_classLit = createForClass('com.google.web.bindery.event.shared.', 'SimpleEventBus$3', 255), Lcom_google_gwt_user_client_Event$NativePreviewEvent_2_classLit = createForClass('com.google.gwt.user.client.', 'Event$NativePreviewEvent', 157), Ljava_lang_UnsupportedOperationException_2_classLit = createForClass('java.lang.', 'UnsupportedOperationException', 275), Lcom_google_gwt_event_dom_client_DomEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent', 94), Lcom_google_gwt_event_dom_client_HumanInputEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'HumanInputEvent', 99), Lcom_google_gwt_event_dom_client_MouseEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseEvent', 98), Lcom_google_gwt_event_dom_client_ClickEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'ClickEvent', 97), Lcom_google_gwt_event_dom_client_DomEvent$Type_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'DomEvent$Type', 100), Lmhcs_storage_Load_2_classLit = createForClass('mhcs.storage.', 'Load', 312), Lmhcs_storage_Save_2_classLit = createForClass('mhcs.storage.', 'Save', 313), Ljava_util_AbstractCollection_2_classLit = createForClass('java.util.', 'AbstractCollection', 276), Ljava_util_AbstractList_2_classLit = createForClass('java.util.', 'AbstractList', 285), Ljava_util_ArrayList_2_classLit = createForClass('java.util.', 'ArrayList', 290), Ljava_util_AbstractList$IteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$IteratorImpl', 286), Ljava_util_AbstractList$ListIteratorImpl_2_classLit = createForClass('java.util.', 'AbstractList$ListIteratorImpl', 287), Lcom_google_gwt_event_dom_client_ChangeEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'ChangeEvent', 93), Lcom_google_gwt_user_client_ui_WidgetCollection_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection', 248), _3Lcom_google_gwt_user_client_ui_Widget_2_classLit = createForArray('[Lcom.google.gwt.user.client.ui.', 'Widget;', 332), Lcom_google_gwt_user_client_ui_WidgetCollection$WidgetIterator_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'WidgetCollection$WidgetIterator', 249), Lcom_google_gwt_user_client_ui_DirectionalTextHelper_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DirectionalTextHelper', 202), Ljava_lang_IllegalStateException_2_classLit = createForClass('java.lang.', 'IllegalStateException', 262), Lcom_google_gwt_user_client_ui_AbsolutePanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'AbsolutePanel', 173), Lcom_google_gwt_user_client_ui_RootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel', 232), Lcom_google_gwt_user_client_ui_RootPanel$DefaultRootPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$DefaultRootPanel', 235), Lcom_google_gwt_user_client_ui_RootPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$1', 233), Lcom_google_gwt_user_client_ui_RootPanel$3_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'RootPanel$3', 234), Lcom_google_gwt_core_client_impl_StackTraceCreator$Collector_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StackTraceCreator$Collector', 32), Lcom_google_gwt_core_client_impl_StringBufferImplAppend_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'StringBufferImplAppend', 34), Lcom_google_gwt_core_client_Duration_2_classLit = createForClass('com.google.gwt.core.client.', 'Duration', 16), Lcom_google_gwt_core_client_impl_SchedulerImpl_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl', 27), Lcom_google_gwt_core_client_impl_SchedulerImpl$Flusher_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl$Flusher', 28), Lcom_google_gwt_core_client_impl_SchedulerImpl$Rescuer_2_classLit = createForClass('com.google.gwt.core.client.impl.', 'SchedulerImpl$Rescuer', 29), Lcom_google_gwt_user_client_impl_DOMImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImpl', 162), Lcom_google_gwt_user_client_impl_DOMImpl$1_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImpl$1', 163), Lcom_google_gwt_user_client_impl_DOMImplStandard_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplStandard', 166), Lcom_google_gwt_user_client_impl_DOMImplStandardBase_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplStandardBase', 165), Lcom_google_gwt_user_client_impl_DOMImplIE9_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'DOMImplIE9', 164), Lcom_google_gwt_safehtml_shared_SafeUriString_2_classLit = createForClass('com.google.gwt.safehtml.shared.', 'SafeUriString', 144), Ljava_util_AbstractMap_2_classLit = createForClass('java.util.', 'AbstractMap', 278), Ljava_util_AbstractHashMap_2_classLit = createForClass('java.util.', 'AbstractHashMap', 277), Ljava_util_HashMap_2_classLit = createForClass('java.util.', 'HashMap', 293), Ljava_util_AbstractSet_2_classLit = createForClass('java.util.', 'AbstractSet', 280), Ljava_util_AbstractHashMap$EntrySet_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySet', 279), Ljava_util_AbstractHashMap$EntrySetIterator_2_classLit = createForClass('java.util.', 'AbstractHashMap$EntrySetIterator', 281), Ljava_util_AbstractMapEntry_2_classLit = createForClass('java.util.', 'AbstractMapEntry', 283), Ljava_util_AbstractHashMap$MapEntryNull_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryNull', 282), Ljava_util_AbstractHashMap$MapEntryString_2_classLit = createForClass('java.util.', 'AbstractHashMap$MapEntryString', 284), Ljava_util_AbstractMap$1_2_classLit = createForClass('java.util.', 'AbstractMap$1', 288), Ljava_util_AbstractMap$1$1_2_classLit = createForClass('java.util.', 'AbstractMap$1$1', 289), Lcom_google_gwt_text_shared_AbstractRenderer_2_classLit = createForClass('com.google.gwt.text.shared.', 'AbstractRenderer', 150), Lcom_google_gwt_text_shared_testing_PassthroughRenderer_2_classLit = createForClass('com.google.gwt.text.shared.testing.', 'PassthroughRenderer', 152), Lcom_google_gwt_text_shared_testing_PassthroughParser_2_classLit = createForClass('com.google.gwt.text.shared.testing.', 'PassthroughParser', 151), Lcom_google_gwt_storage_client_Storage_2_classLit = createForClass('com.google.gwt.storage.client.', 'Storage', 146), Lcom_google_gwt_storage_client_Storage$StorageSupportDetector_2_classLit = createForClass('com.google.gwt.storage.client.', 'Storage$StorageSupportDetector', 147), Ljava_lang_NumberFormatException_2_classLit = createForClass('java.lang.', 'NumberFormatException', 270), Lmhcs_client_ModuleType_2_classLit = createForEnum('mhcs.client.', 'ModuleType', 303, values_9), _3Lmhcs_client_ModuleType_2_classLit = createForArray('[Lmhcs.client.', 'ModuleType;', 333), Lmhcs_client_Point_2_classLit = createForClass('mhcs.client.', 'Point', 304), Lmhcs_client_ModuleStatus_2_classLit = createForEnum('mhcs.client.', 'ModuleStatus', 302, values_8), _3Lmhcs_client_ModuleStatus_2_classLit = createForArray('[Lmhcs.client.', 'ModuleStatus;', 334), Ljava_util_HashSet_2_classLit = createForClass('java.util.', 'HashSet', 294), Lcom_google_gwt_layout_client_LayoutImpl_2_classLit = createForClass('com.google.gwt.layout.client.', 'LayoutImpl', 137), _3Ljava_lang_Boolean_2_classLit = createForArray('[Ljava.lang.', 'Boolean;', 335), Lcom_google_gwt_event_dom_client_PrivateMap_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'PrivateMap', 108), Lcom_google_gwt_event_shared_LegacyHandlerWrapper_2_classLit = createForClass('com.google.gwt.event.shared.', 'LegacyHandlerWrapper', 119), Lmhcs_client_Configuration_2_classLit = createForClass('mhcs.client.', 'Configuration', 298), Ljava_lang_StringBuffer_2_classLit = createForClass('java.lang.', 'StringBuffer', 273), Ljava_lang_IndexOutOfBoundsException_2_classLit = createForClass('java.lang.', 'IndexOutOfBoundsException', 263), Lcom_google_gwt_user_client_impl_WindowImplIE$1_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'WindowImplIE$1', 171), Lcom_google_gwt_user_client_impl_WindowImplIE$2_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'WindowImplIE$2', 172), Lcom_google_gwt_event_logical_shared_ResizeEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'ResizeEvent', 112), Lcom_google_gwt_layout_client_LayoutImplIE8_2_classLit = createForClass('com.google.gwt.layout.client.', 'LayoutImplIE8', 138), Ljava_util_NoSuchElementException_2_classLit = createForClass('java.util.', 'NoSuchElementException', 296), Lcom_google_gwt_event_logical_shared_ValueChangeEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'ValueChangeEvent', 114), Lcom_google_gwt_aria_client_Attribute_2_classLit = createForClass('com.google.gwt.aria.client.', 'Attribute', 13), Ljava_util_MapEntryImpl_2_classLit = createForClass('java.util.', 'MapEntryImpl', 295), Lcom_google_gwt_event_logical_shared_CloseEvent_2_classLit = createForClass('com.google.gwt.event.logical.shared.', 'CloseEvent', 111), Lcom_google_gwt_aria_client_PrimitiveValueAttribute_2_classLit = createForClass('com.google.gwt.aria.client.', 'PrimitiveValueAttribute', 14), Lcom_google_gwt_aria_client_AriaValueAttribute_2_classLit = createForClass('com.google.gwt.aria.client.', 'AriaValueAttribute', 12), Lcom_google_gwt_resources_client_CommonResources_1Bundle_1ie10_1default_1InlineClientBundleGenerator_2_classLit = createForClass('com.google.gwt.resources.client.', 'CommonResources_Bundle_ie10_default_InlineClientBundleGenerator', 141), Lcom_google_gwt_resources_client_CommonResources_1Bundle_1ie10_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass('com.google.gwt.resources.client.', 'CommonResources_Bundle_ie10_default_InlineClientBundleGenerator$1', 142), Lcom_google_gwt_animation_client_AnimationSchedulerImpl_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImpl', 7), Ljava_util_Collections$EmptyList_2_classLit = createForClass('java.util.', 'Collections$EmptyList', 292), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer', 8), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$AnimationHandleImpl', 11), _3Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$AnimationHandleImpl_2_classLit = createForArray('[Lcom.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$AnimationHandleImpl;', 336), Lcom_google_gwt_user_client_Timer_2_classLit = createForClass('com.google.gwt.user.client.', 'Timer', 10), Lcom_google_gwt_animation_client_AnimationSchedulerImplTimer$1_2_classLit = createForClass('com.google.gwt.animation.client.', 'AnimationSchedulerImplTimer$1', 9), Lcom_google_gwt_user_client_ui_PopupPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel', 192), Lcom_google_gwt_user_client_ui_DecoratedPopupPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DecoratedPopupPanel', 191), Lcom_google_gwt_user_client_ui_DialogBox_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DialogBox', 195), Lcom_google_gwt_user_client_ui_DialogBox$CaptionImpl_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DialogBox$CaptionImpl', 197), Lcom_google_gwt_user_client_ui_DialogBox$MouseHandler_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DialogBox$MouseHandler', 201), Lcom_google_gwt_user_client_ui_DialogBox$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DialogBox$1', 196), Lcom_google_gwt_user_client_ui_PopupPanel$ResizeAnimation_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$ResizeAnimation', 226), Lcom_google_gwt_user_client_ui_PopupPanel$1_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$1', 223), Lcom_google_gwt_user_client_ui_PopupPanel$3_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$3', 224), Lcom_google_gwt_user_client_ui_PopupPanel$4_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'PopupPanel$4', 225), Lcom_google_gwt_dom_client_StyleInjector$1_2_classLit = createForClass('com.google.gwt.dom.client.', 'StyleInjector$1', 90), Lcom_google_gwt_user_client_ui_DecoratorPanel_2_classLit = createForClass('com.google.gwt.user.client.ui.', 'DecoratorPanel', 194), Lcom_google_gwt_event_dom_client_MouseDownEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseDownEvent', 103), Lcom_google_gwt_event_dom_client_MouseUpEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseUpEvent', 107), Lcom_google_gwt_event_dom_client_MouseMoveEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseMoveEvent', 104), Lcom_google_gwt_event_dom_client_MouseOverEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseOverEvent', 106), Lcom_google_gwt_event_dom_client_MouseOutEvent_2_classLit = createForClass('com.google.gwt.event.dom.client.', 'MouseOutEvent', 105), Lcom_google_gwt_user_client_impl_HistoryImpl_2_classLit = createForClass('com.google.gwt.user.client.impl.', 'HistoryImpl', 168);\n$sendStats('moduleStartup', 'moduleEvalEnd');\ngwtOnLoad(__gwtModuleFunction.__errFn, __gwtModuleFunction.__moduleName, __gwtModuleFunction.__moduleBase, __gwtModuleFunction.__softPermutationId,__gwtModuleFunction.__computePropValue);\n$sendStats('moduleStartup', 'end');\n//# sourceURL=mhcs_project-0.js\n"]);
